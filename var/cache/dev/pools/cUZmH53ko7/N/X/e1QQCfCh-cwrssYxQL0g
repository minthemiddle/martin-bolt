<?php //%255BBolt%255CEntity%255CField%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        clone ($p['ApiPlatform\\Core\\Annotation\\ApiFilter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiFilter')),
        clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        clone ($p['Doctrine\\ORM\\Mapping\\InheritanceType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\InheritanceType')),
        clone ($p['Doctrine\\ORM\\Mapping\\DiscriminatorColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\DiscriminatorColumn')),
        clone ($p['Doctrine\\ORM\\Mapping\\DiscriminatorMap'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\DiscriminatorMap')),
    ],
    null,
    [
        'stdClass' => [
            'collectionOperations' => [
                [
                    'get',
                ],
            ],
            'graphql' => [
                [
                    'item_query',
                    'collection_query',
                ],
            ],
            'itemOperations' => [
                [
                    'get',
                ],
            ],
            'subresourceOperations' => [
                [
                    'api_contents_fields_get_subresource' => [
                        'method' => 'GET',
                        'normalization_context' => [
                            'groups' => [
                                'get_field',
                            ],
                        ],
                    ],
                ],
            ],
            'filterClass' => [
                1 => 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\SearchFilter',
            ],
            'repositoryClass' => [
                2 => 'Bolt\\Repository\\FieldRepository',
            ],
            'value' => [
                3 => 'SINGLE_TABLE',
                5 => [
                    'generic' => 'Field',
                ],
            ],
            'name' => [
                4 => 'type',
            ],
            'type' => [
                4 => 'string',
            ],
            'length' => [
                4 => 191,
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[3],
        $o[4],
        $o[5],
    ],
    []
); }];
