<?php //%255BBolt%255CEntity%255CContent%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        clone ($p['ApiPlatform\\Core\\Annotation\\ApiFilter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiFilter')),
        clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
        clone $p['Doctrine\\ORM\\Mapping\\Index'],
        clone ($p['Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks')),
    ],
    null,
    [
        'stdClass' => [
            'collectionOperations' => [
                [
                    'get',
                ],
            ],
            'graphql' => [
                [
                    'item_query',
                    'collection_query',
                ],
            ],
            'itemOperations' => [
                [
                    'get',
                ],
            ],
            'attributes' => [
                [
                    'normalization_context' => [
                        'groups' => [
                            'get_content',
                            'get_definition',
                        ],
                    ],
                ],
            ],
            'filterClass' => [
                1 => 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\SearchFilter',
            ],
            'repositoryClass' => [
                2 => 'Bolt\\Repository\\ContentRepository',
            ],
            'indexes' => [
                3 => [
                    $o[4],
                    $o[5],
                ],
            ],
            'name' => [
                4 => 'content_type_idx',
                'status_idx',
            ],
            'columns' => [
                4 => [
                    'content_type',
                ],
                [
                    'status',
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[3],
        $o[6],
    ],
    []
); }];
