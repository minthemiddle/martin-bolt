<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/Users/martinbetz/Sites/martin-bolt/src</parameter>
    <parameter key="kernel.project_dir">/Users/martinbetz/Sites/martin-bolt</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">src</parameter>
    <parameter key="kernel.cache_dir">/Users/martinbetz/Sites/martin-bolt/var/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/Users/martinbetz/Sites/martin-bolt/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="ApiPlatformBundle">ApiPlatform\Core\Bridge\Symfony\Bundle\ApiPlatformBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
      <parameter key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</parameter>
      <parameter key="DoctrineBehaviorsBundle">Knp\DoctrineBehaviors\DoctrineBehaviorsBundle</parameter>
      <parameter key="NelmioCorsBundle">Nelmio\CorsBundle\NelmioCorsBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="MakerBundle">Symfony\Bundle\MakerBundle\MakerBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="WebServerBundle">Symfony\Bundle\WebServerBundle\WebServerBundle</parameter>
      <parameter key="WebpackEncoreBundle">Symfony\WebpackEncoreBundle\WebpackEncoreBundle</parameter>
      <parameter key="TranslationBundle">Translation\Bundle\TranslationBundle</parameter>
      <parameter key="BabDevPagerfantaBundle">BabDev\PagerfantaBundle\BabDevPagerfantaBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="ApiPlatformBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/api-platform/core/src/Bridge/Symfony/Bundle</parameter>
        <parameter key="namespace">ApiPlatform\Core\Bridge\Symfony\Bundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineFixturesBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/doctrine/doctrine-fixtures-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\FixturesBundle</parameter>
      </parameter>
      <parameter key="KnpMenuBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/knplabs/knp-menu-bundle/src</parameter>
        <parameter key="namespace">Knp\Bundle\MenuBundle</parameter>
      </parameter>
      <parameter key="DoctrineBehaviorsBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/knplabs/doctrine-behaviors/src</parameter>
        <parameter key="namespace">Knp\DoctrineBehaviors</parameter>
      </parameter>
      <parameter key="NelmioCorsBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/nelmio/cors-bundle</parameter>
        <parameter key="namespace">Nelmio\CorsBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/sensio/framework-extra-bundle/src</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/symfony/debug-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="MakerBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/symfony/maker-bundle/src</parameter>
        <parameter key="namespace">Symfony\Bundle\MakerBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/symfony/web-profiler-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="WebServerBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/symfony/web-server-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebServerBundle</parameter>
      </parameter>
      <parameter key="WebpackEncoreBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/symfony/webpack-encore-bundle/src</parameter>
        <parameter key="namespace">Symfony\WebpackEncoreBundle</parameter>
      </parameter>
      <parameter key="TranslationBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/php-translation/symfony-bundle</parameter>
        <parameter key="namespace">Translation\Bundle</parameter>
      </parameter>
      <parameter key="BabDevPagerfantaBundle" type="collection">
        <parameter key="path">/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle</parameter>
        <parameter key="namespace">BabDev\PagerfantaBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">srcApp_KernelDevDebugContainer</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="container.dumper.inline_factories">true</parameter>
    <parameter key="env(DATABASE_DRIVER)">pdo_sqlite</parameter>
    <parameter key="env(DATABASE_URL)"></parameter>
    <parameter key="locale">en</parameter>
    <parameter key="app_locales">en|nl|es|fr|de|pl|it|hu|pt_BR|ja|nb|nn|nl_NL|nl_BE|is|ru</parameter>
    <parameter key="app.notifications.email_sender">anonymous@example.com</parameter>
    <parameter key="bolt.table_prefix">bolt_</parameter>
    <parameter key="bolt.backend_url">/bolt</parameter>
    <parameter key="bolt.public_folder">public</parameter>
    <parameter key="bolt.sitename">Martin Betz</parameter>
    <parameter key="bolt.payoff">Martin Betz</parameter>
    <parameter key="bolt.secret">%env(APP_SECRET)%</parameter>
    <parameter key="bolt.theme">martin2006</parameter>
    <parameter key="bolt.maintenance_mode">false</parameter>
    <parameter key="bolt.maintenance" type="collection">
      <parameter>blocks/503-maintenance-mode</parameter>
      <parameter>helpers/page_503.html.twig</parameter>
    </parameter>
    <parameter key="bolt.homepage">homepage</parameter>
    <parameter key="bolt.homepage_template">index.twig</parameter>
    <parameter key="bolt.notfound" type="collection">
      <parameter>blocks/404-not-found</parameter>
      <parameter>helpers/page_404.html.twig</parameter>
    </parameter>
    <parameter key="bolt.record_template">record.twig</parameter>
    <parameter key="bolt.listing_template">listing.twig</parameter>
    <parameter key="bolt.listing_records">6</parameter>
    <parameter key="bolt.listing_sort">datepublish DESC</parameter>
    <parameter key="bolt.maximum_listing_select">1000</parameter>
    <parameter key="bolt.taxonomy_sort">DESC</parameter>
    <parameter key="bolt.search_results_template">search.twig</parameter>
    <parameter key="bolt.search_results_records">10</parameter>
    <parameter key="bolt.records_per_page">8</parameter>
    <parameter key="bolt.thumbnails.default_thumbnail" type="collection">
      <parameter>320</parameter>
      <parameter>240</parameter>
    </parameter>
    <parameter key="bolt.thumbnails.default_image" type="collection">
      <parameter>1000</parameter>
      <parameter>750</parameter>
    </parameter>
    <parameter key="bolt.thumbnails.quality">80</parameter>
    <parameter key="bolt.thumbnails.cropping">crop</parameter>
    <parameter key="bolt.thumbnails.save_files">true</parameter>
    <parameter key="bolt.thumbnails.allow_upscale">false</parameter>
    <parameter key="bolt.filepermissions.folders">509</parameter>
    <parameter key="bolt.filepermissions.files">436</parameter>
    <parameter key="bolt.htmlcleaner.allowed_tags" type="collection">
      <parameter>div</parameter>
      <parameter>span</parameter>
      <parameter>p</parameter>
      <parameter>br</parameter>
      <parameter>hr</parameter>
      <parameter>s</parameter>
      <parameter>u</parameter>
      <parameter>strong</parameter>
      <parameter>em</parameter>
      <parameter>i</parameter>
      <parameter>b</parameter>
      <parameter>li</parameter>
      <parameter>ul</parameter>
      <parameter>ol</parameter>
      <parameter>mark</parameter>
      <parameter>blockquote</parameter>
      <parameter>pre</parameter>
      <parameter>code</parameter>
      <parameter>tt</parameter>
      <parameter>h1</parameter>
      <parameter>h2</parameter>
      <parameter>h3</parameter>
      <parameter>h4</parameter>
      <parameter>h5</parameter>
      <parameter>h6</parameter>
      <parameter>dd</parameter>
      <parameter>dl</parameter>
      <parameter>dt</parameter>
      <parameter>table</parameter>
      <parameter>tbody</parameter>
      <parameter>thead</parameter>
      <parameter>tfoot</parameter>
      <parameter>th</parameter>
      <parameter>td</parameter>
      <parameter>tr</parameter>
      <parameter>a</parameter>
      <parameter>img</parameter>
      <parameter>address</parameter>
      <parameter>abbr</parameter>
      <parameter>iframe</parameter>
      <parameter>caption</parameter>
      <parameter>sub</parameter>
      <parameter>super</parameter>
      <parameter>figure</parameter>
      <parameter>figcaption</parameter>
    </parameter>
    <parameter key="bolt.htmlcleaner.allowed_attributes" type="collection">
      <parameter>id</parameter>
      <parameter>class</parameter>
      <parameter>style</parameter>
      <parameter>name</parameter>
      <parameter>value</parameter>
      <parameter>href</parameter>
      <parameter>src</parameter>
      <parameter>alt</parameter>
      <parameter>title</parameter>
      <parameter>width</parameter>
      <parameter>height</parameter>
      <parameter>frameborder</parameter>
      <parameter>allowfullscreen</parameter>
      <parameter>scrolling</parameter>
      <parameter>target</parameter>
      <parameter>colspan</parameter>
      <parameter>rowspan</parameter>
    </parameter>
    <parameter key="bolt.accept_file_types" type="collection">
      <parameter>twig</parameter>
      <parameter>html</parameter>
      <parameter>js</parameter>
      <parameter>css</parameter>
      <parameter>scss</parameter>
      <parameter>gif</parameter>
      <parameter>jpg</parameter>
      <parameter>jpeg</parameter>
      <parameter>png</parameter>
      <parameter>ico</parameter>
      <parameter>zip</parameter>
      <parameter>tgz</parameter>
      <parameter>txt</parameter>
      <parameter>md</parameter>
      <parameter>doc</parameter>
      <parameter>docx</parameter>
      <parameter>pdf</parameter>
      <parameter>epub</parameter>
      <parameter>xls</parameter>
      <parameter>xlsx</parameter>
      <parameter>ppt</parameter>
      <parameter>pptx</parameter>
      <parameter>mp3</parameter>
      <parameter>ogg</parameter>
      <parameter>wav</parameter>
      <parameter>m4a</parameter>
      <parameter>mp4</parameter>
      <parameter>m4v</parameter>
      <parameter>ogv</parameter>
      <parameter>wmv</parameter>
      <parameter>avi</parameter>
      <parameter>webm</parameter>
      <parameter>svg</parameter>
    </parameter>
    <parameter key="bolt.accept_media_types" type="collection">
      <parameter>gif</parameter>
      <parameter>jpg</parameter>
      <parameter>jpeg</parameter>
      <parameter>png</parameter>
      <parameter>svg</parameter>
      <parameter>pdf</parameter>
      <parameter>mp3</parameter>
      <parameter>tiff</parameter>
    </parameter>
    <parameter key="bolt.accept_upload_size">8M</parameter>
    <parameter key="bolt.wysiwyg.images">false</parameter>
    <parameter key="bolt.wysiwyg.anchor">false</parameter>
    <parameter key="bolt.wysiwyg.tables">false</parameter>
    <parameter key="bolt.wysiwyg.fontcolor">false</parameter>
    <parameter key="bolt.wysiwyg.align">false</parameter>
    <parameter key="bolt.wysiwyg.subsuper">false</parameter>
    <parameter key="bolt.wysiwyg.embed">false</parameter>
    <parameter key="bolt.wysiwyg.underline">false</parameter>
    <parameter key="bolt.wysiwyg.ruler">false</parameter>
    <parameter key="bolt.wysiwyg.strike">false</parameter>
    <parameter key="bolt.wysiwyg.blockquote">false</parameter>
    <parameter key="bolt.wysiwyg.codesnippet">false</parameter>
    <parameter key="bolt.wysiwyg.specialchar">false</parameter>
    <parameter key="bolt.wysiwyg.clipboard">false</parameter>
    <parameter key="bolt.wysiwyg.copypaste">false</parameter>
    <parameter key="bolt.wysiwyg.ck.autoParagraph">true</parameter>
    <parameter key="bolt.wysiwyg.ck.disableNativeSpellChecker">true</parameter>
    <parameter key="bolt.wysiwyg.ck.allowNbsp">false</parameter>
    <parameter key="bolt.requirement.pluralcontenttypes">homepage|pages|articles|blocks</parameter>
    <parameter key="bolt.requirement.contenttypes">homepage|pages|articles|blocks|page|article|block</parameter>
    <parameter key="bolt.requirement.pluraltaxonomies">tags|groups|categories</parameter>
    <parameter key="bolt.requirement.taxonomies">tags|groups|categories|tag|group|category</parameter>
    <parameter key="api_platform.enable_entrypoint">true</parameter>
    <parameter key="api_platform.enable_docs">true</parameter>
    <parameter key="api_platform.title"></parameter>
    <parameter key="api_platform.description"></parameter>
    <parameter key="api_platform.version">0.0.0</parameter>
    <parameter key="api_platform.show_webby">true</parameter>
    <parameter key="api_platform.exception_to_status" type="collection">
      <parameter key="Symfony\Component\Serializer\Exception\ExceptionInterface">400</parameter>
      <parameter key="ApiPlatform\Core\Exception\InvalidArgumentException">400</parameter>
      <parameter key="ApiPlatform\Core\Exception\FilterValidationException">400</parameter>
      <parameter key="Doctrine\ORM\OptimisticLockException">409</parameter>
    </parameter>
    <parameter key="api_platform.formats" type="collection">
      <parameter key="jsonld" type="collection">
        <parameter>application/ld+json</parameter>
      </parameter>
      <parameter key="json" type="collection">
        <parameter>application/json</parameter>
      </parameter>
      <parameter key="jsonapi" type="collection">
        <parameter>application/vnd.api+json</parameter>
      </parameter>
      <parameter key="html" type="collection">
        <parameter>text/html</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.patch_formats" type="collection">
      <parameter key="jsonapi" type="collection">
        <parameter>application/vnd.api+json</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.error_formats" type="collection">
      <parameter key="jsonproblem" type="collection">
        <parameter>application/problem+json</parameter>
      </parameter>
      <parameter key="jsonld" type="collection">
        <parameter>application/ld+json</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.allow_plain_identifiers">false</parameter>
    <parameter key="api_platform.eager_loading.enabled">true</parameter>
    <parameter key="api_platform.eager_loading.max_joins">30</parameter>
    <parameter key="api_platform.eager_loading.fetch_partial">false</parameter>
    <parameter key="api_platform.eager_loading.force_eager">true</parameter>
    <parameter key="api_platform.collection.exists_parameter_name">exists</parameter>
    <parameter key="api_platform.collection.order">ASC</parameter>
    <parameter key="api_platform.collection.order_parameter_name">order</parameter>
    <parameter key="api_platform.collection.pagination.enabled">true</parameter>
    <parameter key="api_platform.collection.pagination.partial">false</parameter>
    <parameter key="api_platform.collection.pagination.client_enabled">false</parameter>
    <parameter key="api_platform.collection.pagination.client_items_per_page">true</parameter>
    <parameter key="api_platform.collection.pagination.client_partial">false</parameter>
    <parameter key="api_platform.collection.pagination.items_per_page">30</parameter>
    <parameter key="api_platform.collection.pagination.maximum_items_per_page">null</parameter>
    <parameter key="api_platform.collection.pagination.page_parameter_name">page</parameter>
    <parameter key="api_platform.collection.pagination.enabled_parameter_name">pagination</parameter>
    <parameter key="api_platform.collection.pagination.items_per_page_parameter_name">pageSize</parameter>
    <parameter key="api_platform.collection.pagination.partial_parameter_name">partial</parameter>
    <parameter key="api_platform.collection.pagination" type="collection">
      <parameter key="client_items_per_page">true</parameter>
      <parameter key="items_per_page_parameter_name">pageSize</parameter>
      <parameter key="enabled">true</parameter>
      <parameter key="partial">false</parameter>
      <parameter key="client_enabled">false</parameter>
      <parameter key="client_partial">false</parameter>
      <parameter key="items_per_page">30</parameter>
      <parameter key="maximum_items_per_page">null</parameter>
      <parameter key="page_parameter_name">page</parameter>
      <parameter key="enabled_parameter_name">pagination</parameter>
      <parameter key="partial_parameter_name">partial</parameter>
    </parameter>
    <parameter key="api_platform.http_cache.etag">true</parameter>
    <parameter key="api_platform.http_cache.max_age">null</parameter>
    <parameter key="api_platform.http_cache.shared_max_age">null</parameter>
    <parameter key="api_platform.http_cache.vary" type="collection">
      <parameter>Accept</parameter>
    </parameter>
    <parameter key="api_platform.http_cache.public">null</parameter>
    <parameter key="api_platform.resource_class_directories" type="collection">
      <parameter>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/src/Entity</parameter>
    </parameter>
    <parameter key="api_platform.oauth.enabled">false</parameter>
    <parameter key="api_platform.oauth.clientId"></parameter>
    <parameter key="api_platform.oauth.clientSecret"></parameter>
    <parameter key="api_platform.oauth.type">oauth2</parameter>
    <parameter key="api_platform.oauth.flow">application</parameter>
    <parameter key="api_platform.oauth.tokenUrl">/oauth/v2/token</parameter>
    <parameter key="api_platform.oauth.authorizationUrl">/oauth/v2/auth</parameter>
    <parameter key="api_platform.oauth.scopes" type="collection"/>
    <parameter key="api_platform.swagger.versions" type="collection">
      <parameter>2</parameter>
      <parameter>3</parameter>
    </parameter>
    <parameter key="api_platform.enable_swagger_ui">false</parameter>
    <parameter key="api_platform.enable_re_doc">true</parameter>
    <parameter key="api_platform.swagger.api_keys" type="collection"/>
    <parameter key="api_platform.graphql.enabled">true</parameter>
    <parameter key="api_platform.graphql.graphiql.enabled">true</parameter>
    <parameter key="api_platform.graphql.graphql_playground.enabled">true</parameter>
    <parameter key="api_platform.graphql.collection.pagination" type="collection">
      <parameter key="enabled">true</parameter>
    </parameter>
    <parameter key="api_platform.graphql.default_ide">graphiql</parameter>
    <parameter key="api_platform.graphql.nesting_separator">_</parameter>
    <parameter key="api_platform.validator.serialize_payload_fields" type="collection"/>
    <parameter key="api_platform.elasticsearch.enabled">false</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/Users/martinbetz/Sites/martin-bolt/var/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="knp_menu.renderer.list.options" type="collection"/>
    <parameter key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</parameter>
    <parameter key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</parameter>
    <parameter key="knp_menu.renderer.twig.options" type="collection"/>
    <parameter key="knp_menu.renderer.twig.template">@KnpMenu/menu.html.twig</parameter>
    <parameter key="knp_menu.default_renderer">twig</parameter>
    <parameter key="doctrine_behaviors_translatable_fetch_mode">LAZY</parameter>
    <parameter key="doctrine_behaviors_translation_fetch_mode">LAZY</parameter>
    <parameter key="doctrine_behaviors_blameable_user_entity">null</parameter>
    <parameter key="doctrine_behaviors_timestampable_date_field_type">datetime</parameter>
    <parameter key="nelmio_cors.map" type="collection">
      <parameter key="^/" type="collection"/>
    </parameter>
    <parameter key="nelmio_cors.defaults" type="collection">
      <parameter key="allow_origin" type="collection">
        <parameter>%env(CORS_ALLOW_ORIGIN)%</parameter>
      </parameter>
      <parameter key="allow_credentials">false</parameter>
      <parameter key="allow_headers" type="collection">
        <parameter>content-type</parameter>
        <parameter>authorization</parameter>
      </parameter>
      <parameter key="expose_headers" type="collection"/>
      <parameter key="allow_methods" type="collection">
        <parameter>GET</parameter>
        <parameter>OPTIONS</parameter>
        <parameter>POST</parameter>
        <parameter>PUT</parameter>
        <parameter>PATCH</parameter>
        <parameter>DELETE</parameter>
      </parameter>
      <parameter key="max_age">3600</parameter>
      <parameter key="hosts" type="collection"/>
      <parameter key="origin_regex">true</parameter>
      <parameter key="forced_allow_origin_value">null</parameter>
    </parameter>
    <parameter key="nelmio_cors.cors_listener.class">Nelmio\CorsBundle\EventListener\CorsListener</parameter>
    <parameter key="nelmio_cors.options_resolver.class">Nelmio\CorsBundle\Options\Resolver</parameter>
    <parameter key="nelmio_cors.options_provider.config.class">Nelmio\CorsBundle\Options\ConfigProvider</parameter>
    <parameter key="env(VAR_DUMPER_SERVER)">127.0.0.1:9912</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Workflow\Event\GuardEvent">workflow.guard</parameter>
      <parameter key="Symfony\Component\Workflow\Event\LeaveEvent">workflow.leave</parameter>
      <parameter key="Symfony\Component\Workflow\Event\TransitionEvent">workflow.transition</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnterEvent">workflow.enter</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnteredEvent">workflow.entered</parameter>
      <parameter key="Symfony\Component\Workflow\Event\CompletedEvent">workflow.completed</parameter>
      <parameter key="Symfony\Component\Workflow\Event\AnnounceEvent">workflow.announce</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationFailureEvent">security.authentication.failure</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.error_controller">Bolt\Controller\ErrorController::showAction</parameter>
    <parameter key="templating.helper.code.file_link_format">phpstorm://open?file=%f&amp;line=%l</parameter>
    <parameter key="debug.file_link_format">phpstorm://open?file=%f&amp;line=%l</parameter>
    <parameter key="cache.prefix.seed">bolt</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_lifetime">1209600</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/Users/martinbetz/Sites/martin-bolt/var/cache/dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path"></parameter>
    <parameter key="asset.request_context.secure">false</parameter>
    <parameter key="validator.mapping.cache.file">/Users/martinbetz/Sites/martin-bolt/var/cache/dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">/Users/martinbetz/Sites/martin-bolt/translations</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/Users/martinbetz/Sites/martin-bolt/var/cache/dev/profiler</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/Users/martinbetz/Sites/martin-bolt/var/cache/dev/srcApp_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_class_prefix">srcApp_KernelDevDebugContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/Users/martinbetz/Sites/martin-bolt/var/cache/dev/serialization.php</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.db" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>db</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">null</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">null</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_EDITOR</parameter>
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_EDITOR" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_USER" type="collection"/>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="twig.exception_listener.controller">null</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>@bolt/form/layout.html.twig</parameter>
      <parameter>@bolt/form/fields.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="extractor_vendor_dir">/Users/martinbetz/Sites/martin-bolt/vendor/php-translation/extractor/src</parameter>
    <parameter key="php_translation.locales" type="collection"/>
    <parameter key="php_translation.default_locale">en</parameter>
    <parameter key="php_translation.webui.enabled">true</parameter>
    <parameter key="php_translation.webui.allow_create">true</parameter>
    <parameter key="php_translation.webui.allow_delete">true</parameter>
    <parameter key="php_translation.webui.file_base_path">/Users/martinbetz/Sites/martin-bolt/</parameter>
    <parameter key="php_translation.toolbar.allow_edit">true</parameter>
    <parameter key="babdev_pagerfanta.default_twig_template">@BabDevPagerfanta/default.html.twig</parameter>
    <parameter key="babdev_pagerfanta.default_view">default</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="api_platform.data_collector.request" type="collection">
        <parameter>api_platform.data_collector.request</parameter>
        <parameter>@ApiPlatform/DataCollector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.http_client" type="collection">
        <parameter>http_client</parameter>
        <parameter>@WebProfiler/Collector/http_client.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="php_translation.data_collector" type="collection">
        <parameter>translation</parameter>
        <parameter>@Translation/SymfonyProfiler/translation.html.twig</parameter>
      </parameter>
      <parameter key="mailer.data_collector" type="collection">
        <parameter>mailer</parameter>
        <parameter>@WebProfiler/Collector/mailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.api_platform.json_schema.json_schema_generate_command</parameter>
      <parameter>console.command.public_alias.api_platform.swagger.command.swagger_command</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true">
      <tag name="routing.route_loader"/>
    </service>
    <service id="SensioLabs\Security\SecurityChecker" class="SensioLabs\Security\SecurityChecker" public="false"/>
    <service id="SensioLabs\Security\Command\SecurityCheckerCommand" class="SensioLabs\Security\Command\SecurityCheckerCommand">
      <tag name="console.command"/>
      <argument type="service" id="SensioLabs\Security\SecurityChecker"/>
      <call method="setName">
        <argument>security:check</argument>
      </call>
    </service>
    <service id="Bolt\Api\Extensions\ContentExtension" class="Bolt\Api\Extensions\ContentExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="api_platform.doctrine.orm.query_extension.collection"/>
      <tag name="api_platform.doctrine.orm.query_extension.item"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
    </service>
    <service id="Bolt\Canonical" class="Bolt\Canonical" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
    </service>
    <service id="Bolt\Collection\DeepCollection" class="Bolt\Collection\DeepCollection" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Command\AddUserCommand" class="Bolt\Command\AddUserCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="debug.validator"/>
      <call method="setName">
        <argument>bolt:add-user</argument>
      </call>
    </service>
    <service id="Bolt\Command\ClearThumbnailCacheCommand" class="Bolt\Command\ClearThumbnailCacheCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Bolt\Utils\ThumbnailCacheClearer"/>
      <call method="setName">
        <argument>cache:thumbs</argument>
      </call>
    </service>
    <service id="Bolt\Command\CopyAssetsCommand" class="Bolt\Command\CopyAssetsCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="filesystem"/>
      <argument>public</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <argument type="service" id="Bolt\Configuration\Config"/>
      <call method="setName">
        <argument>bolt:copy-assets</argument>
      </call>
    </service>
    <service id="Bolt\Command\CopyThemesCommand" class="Bolt\Command\CopyThemesCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="filesystem"/>
      <argument>public</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <argument type="service" id="Bolt\Configuration\Config"/>
      <call method="setName">
        <argument>bolt:copy-themes</argument>
      </call>
    </service>
    <service id="Bolt\Command\DeleteUserCommand" class="Bolt\Command\DeleteUserCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="Bolt\Repository\UserRepository"/>
      <call method="setName">
        <argument>bolt:delete-user</argument>
      </call>
    </service>
    <service id="Bolt\Command\ExtensionsListCommand" class="Bolt\Command\ExtensionsListCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Bolt\Extension\ExtensionRegistry"/>
      <call method="setName">
        <argument>extensions:list</argument>
      </call>
    </service>
    <service id="Bolt\Command\ExtensionsServicesCommand" class="Bolt\Command\ExtensionsServicesCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="service_container"/>
      <call method="setName">
        <argument>extensions:services</argument>
      </call>
    </service>
    <service id="Bolt\Command\ExtensionsShowCommand" class="Bolt\Command\ExtensionsShowCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Bolt\Extension\ExtensionRegistry"/>
      <call method="setName">
        <argument>extensions:show</argument>
      </call>
    </service>
    <service id="Bolt\Command\InfoCommand" class="Bolt\Command\InfoCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Bolt\Doctrine\Version"/>
      <call method="setName">
        <argument>bolt:info</argument>
      </call>
    </service>
    <service id="Bolt\Command\ListUsersCommand" class="Bolt\Command\ListUsersCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="mailer.mailer"/>
      <argument>anonymous@example.com</argument>
      <argument type="service" id="Bolt\Repository\UserRepository"/>
      <call method="setName">
        <argument>bolt:list-users</argument>
      </call>
    </service>
    <service id="Bolt\Command\ResetSecretCommand" class="Bolt\Command\ResetSecretCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <call method="setName">
        <argument>bolt:reset-secret</argument>
      </call>
    </service>
    <service id="Bolt\Command\SetupCommand" class="Bolt\Command\SetupCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <call method="setName">
        <argument>bolt:setup</argument>
      </call>
    </service>
    <service id="Bolt\Configuration\Config" class="Bolt\Configuration\Config" public="false" autowire="true" autoconfigure="true">
      <argument>en|nl|es|fr|de|pl|it|hu|pt_BR|ja|nb|nn|nl_NL|nl_BE|is|ru</argument>
      <argument>en</argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <argument type="service" id="cache.app"/>
      <argument>public</argument>
    </service>
    <service id="Bolt\Configuration\Content\ContentType" class="Bolt\Configuration\Content\ContentType" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Configuration\Content\FieldType" class="Bolt\Configuration\Content\FieldType" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Configuration\FileLocation" class="Bolt\Configuration\FileLocation" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Configuration\FileLocations" class="Bolt\Configuration\FileLocations" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Configuration\Config"/>
    </service>
    <service id="Bolt\Configuration\Parser\ContentTypesParser" class="Bolt\Configuration\Parser\ContentTypesParser" public="false" autowire="true" autoconfigure="true">
      <argument key="0">/Users/martinbetz/Sites/martin-bolt</argument>
      <argument key="2">en</argument>
      <argument key="3">en|nl|es|fr|de|pl|it|hu|pt_BR|ja|nb|nn|nl_NL|nl_BE|is|ru</argument>
    </service>
    <service id="Bolt\Configuration\Parser\GeneralParser" class="Bolt\Configuration\Parser\GeneralParser" public="false" autowire="true" autoconfigure="true">
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
    </service>
    <service id="Bolt\Configuration\Parser\MenuParser" class="Bolt\Configuration\Parser\MenuParser" public="false" autowire="true" autoconfigure="true">
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
    </service>
    <service id="Bolt\Configuration\Parser\TaxonomyParser" class="Bolt\Configuration\Parser\TaxonomyParser" public="false" autowire="true" autoconfigure="true">
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
    </service>
    <service id="Bolt\Configuration\Parser\ThemeParser" class="Bolt\Configuration\Parser\ThemeParser" public="false" autowire="true" autoconfigure="true">
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
    </service>
    <service id="Bolt\Configuration\PathResolver" class="Bolt\Configuration\PathResolver" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Controller\Backend\Async\EmbedController" class="Bolt\Controller\Backend\Async\EmbedController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="Bolt\Controller\Backend\Async\FileListingController" class="Bolt\Controller\Backend\Async\FileListingController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
    </service>
    <service id="Bolt\Controller\Backend\Async\UploadController" class="Bolt\Controller\Backend\Async\UploadController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Bolt\Factory\MediaFactory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="Bolt\Twig\TextExtension"/>
    </service>
    <service id="Bolt\Controller\Backend\AuthenticationController" class="Bolt\Controller\Backend\AuthenticationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\AuthenticationController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\BulkOperationsController" class="Bolt\Controller\Backend\BulkOperationsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\BulkOperationsController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\ClearCacheController" class="Bolt\Controller\Backend\ClearCacheController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\ClearCacheController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\ContentEditController" class="Bolt\Controller\Backend\ContentEditController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Bolt\Repository\TaxonomyRepository"/>
      <argument type="service" id="Bolt\Repository\RelationRepository"/>
      <argument type="service" id="Bolt\Repository\ContentRepository"/>
      <argument type="service" id="Bolt\Repository\MediaRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="Bolt\Event\Listener\ContentFillListener"/>
      <argument type="service" id="Bolt\TemplateChooser"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>en</argument>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\ContentEditController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\ContentLocalizationController" class="Bolt\Controller\Backend\ContentLocalizationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\ContentLocalizationController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\DashboardController" class="Bolt\Controller\Backend\DashboardController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\DashboardController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\DatabaseIntegrityController" class="Bolt\Controller\Backend\DatabaseIntegrityController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\DatabaseIntegrityController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\ExtensionsController" class="Bolt\Controller\Backend\ExtensionsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Bolt\Extension\ExtensionRegistry"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\ExtensionsController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\FileEditController" class="Bolt\Controller\Backend\FileEditController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="Bolt\Repository\MediaRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\FileEditController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\FilemanagerController" class="Bolt\Controller\Backend\FilemanagerController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Bolt\Configuration\FileLocations"/>
      <argument type="service" id="Bolt\Repository\MediaRepository"/>
      <argument type="service" id="session"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\FilemanagerController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\FixturesController" class="Bolt\Controller\Backend\FixturesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\FixturesController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\GeneralController" class="Bolt\Controller\Backend\GeneralController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Bolt\Doctrine\Version"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\GeneralController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\ListingController" class="Bolt\Controller\Backend\ListingController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\ListingController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\LogViewerController" class="Bolt\Controller\Backend\LogViewerController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\LogViewerController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\MediaController" class="Bolt\Controller\Backend\MediaController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Bolt\Configuration\FileLocations"/>
      <argument type="service" id="Bolt\Factory\MediaFactory"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\MediaController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\MediaEditController" class="Bolt\Controller\Backend\MediaEditController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="Bolt\Configuration\FileLocations"/>
      <argument type="service" id="Bolt\Factory\MediaFactory"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\MediaEditController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\MenuPageController" class="Bolt\Controller\Backend\MenuPageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\MenuPageController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\OmnisearchController" class="Bolt\Controller\Backend\OmnisearchController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\OmnisearchController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\ProfileController" class="Bolt\Controller\Backend\ProfileController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\ProfileController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\UserController" class="Bolt\Controller\Backend\UserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Bolt\Repository\UserRepository"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\UserController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Backend\UserEditController" class="Bolt\Controller\Backend\UserEditController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Backend\UserEditController"/>
      </call>
    </service>
    <service id="Bolt\Controller\ErrorController" class="Bolt\Controller\ErrorController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument type="service" id="Bolt\Controller\Frontend\DetailController"/>
      <argument type="service" id="Bolt\Controller\Frontend\TemplateController"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
    </service>
    <service id="Bolt\Controller\FileController" class="Bolt\Controller\FileController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
    </service>
    <service id="Bolt\Controller\Frontend\DetailController" class="Bolt\Controller\Frontend\DetailController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Bolt\TemplateChooser"/>
      <argument type="service" id="Bolt\Repository\ContentRepository"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Frontend\DetailController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Frontend\HomepageController" class="Bolt\Controller\Frontend\HomepageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Bolt\TemplateChooser"/>
      <argument type="service" id="Bolt\Controller\Frontend\DetailController"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Frontend\HomepageController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Frontend\ListingController" class="Bolt\Controller\Frontend\ListingController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Bolt\TemplateChooser"/>
      <argument type="service" id="Bolt\Storage\Query"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Frontend\ListingController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Frontend\SearchController" class="Bolt\Controller\Frontend\SearchController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Bolt\TemplateChooser"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Frontend\SearchController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Frontend\TaxonomyController" class="Bolt\Controller\Frontend\TaxonomyController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Bolt\TemplateChooser"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Frontend\TaxonomyController"/>
      </call>
    </service>
    <service id="Bolt\Controller\Frontend\TemplateController" class="Bolt\Controller\Frontend\TemplateController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\Frontend\TemplateController"/>
      </call>
    </service>
    <service id="Bolt\Controller\ImageController" class="Bolt\Controller\ImageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
    </service>
    <service id="Bolt\Controller\TwigAwareController" class="Bolt\Controller\TwigAwareController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setAutowire">
        <argument type="service" id="Bolt\Configuration\Config"/>
        <argument type="service" id="twig"/>
        <argument type="service" id="assets.packages"/>
        <argument type="service" id="Bolt\Canonical"/>
        <argument type="service" id="Bolt\Utils\Sanitiser"/>
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Controller\TwigAwareController"/>
      </call>
    </service>
    <service id="Bolt\DataFixtures\ContentFixtures" class="Bolt\DataFixtures\ContentFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument type="service" id="Bolt\Configuration\FileLocations"/>
    </service>
    <service id="Bolt\DataFixtures\ImageFetchFixtures" class="Bolt\DataFixtures\ImageFetchFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="Bolt\Configuration\FileLocations"/>
    </service>
    <service id="Bolt\DataFixtures\ImagesFixtures" class="Bolt\DataFixtures\ImagesFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="Bolt\Configuration\FileLocations"/>
      <argument type="service" id="Bolt\Factory\MediaFactory"/>
    </service>
    <service id="Bolt\DataFixtures\RelationsFixtures" class="Bolt\DataFixtures\RelationsFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
    </service>
    <service id="Bolt\DataFixtures\TaxonomyFixtures" class="Bolt\DataFixtures\TaxonomyFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument type="service" id="Bolt\Repository\TaxonomyRepository"/>
    </service>
    <service id="Bolt\DataFixtures\UserFixtures" class="Bolt\DataFixtures\UserFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="Bolt\Repository\UserRepository"/>
    </service>
    <service id="Bolt\Doctrine\Functions\JsonExtract" class="Bolt\Doctrine\Functions\JsonExtract" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Doctrine\JsonHelper" class="Bolt\Doctrine\JsonHelper" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Doctrine\TablePrefix" class="Bolt\Doctrine\TablePrefix" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="loadClassMetadata" lazy="1"/>
      <argument>bolt_</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Bolt\Doctrine\Version" class="Bolt\Doctrine\Version" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument>bolt_</argument>
    </service>
    <service id="Bolt\Enum\Statuses" class="Bolt\Enum\Statuses" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Event\ContentEvent" class="Bolt\Event\ContentEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Event\Listener\ContentFillListener" class="Bolt\Event\Listener\ContentFillListener" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="postLoad"/>
      <tag name="doctrine.event_listener" event="preUpdate"/>
      <tag name="doctrine.event_listener" event="prePersist"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument type="service" id="Bolt\Twig\ContentExtension"/>
      <argument type="service" id="Bolt\Repository\UserRepository"/>
    </service>
    <service id="Bolt\Event\Listener\FieldDiscriminatorListener" class="Bolt\Event\Listener\FieldDiscriminatorListener" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Bolt\Event\Listener\FieldFillListener" class="Bolt\Event\Listener\FieldFillListener" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="postLoad"/>
      <argument type="service" id="Bolt\Repository\FieldRepository"/>
      <argument type="service" id="Bolt\Event\Listener\ContentFillListener"/>
    </service>
    <service id="Bolt\Event\Listener\RelationFillListener" class="Bolt\Event\Listener\RelationFillListener" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Configuration\Config"/>
    </service>
    <service id="Bolt\Event\Subscriber\ContentSaveSubscriber" class="Bolt\Event\Subscriber\ContentSaveSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="cache.app.taggable"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.db"/>
      </call>
    </service>
    <service id="Bolt\Event\Subscriber\ExtensionSubscriber" class="Bolt\Event\Subscriber\ExtensionSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="Bolt\Extension\ExtensionRegistry"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Bolt\Storage\Query"/>
    </service>
    <service id="Bolt\Event\Subscriber\LocaleSubscriber" class="Bolt\Event\Subscriber\LocaleSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="Bolt\Event\Subscriber\MaintenanceModeSubscriber" class="Bolt\Event\Subscriber\MaintenanceModeSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
    </service>
    <service id="Bolt\Event\Subscriber\ProcessWidgetsQueueSubscriber" class="Bolt\Event\Subscriber\ProcessWidgetsQueueSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Bolt\Widgets"/>
    </service>
    <service id="Bolt\Event\Subscriber\TimedPublishSubscriber" class="Bolt\Event\Subscriber\TimedPublishSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>bolt_</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Bolt\Event\Subscriber\UserLocaleSubscriber" class="Bolt\Event\Subscriber\UserLocaleSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="session"/>
    </service>
    <service id="Bolt\Event\Subscriber\WidgetSubscriber" class="Bolt\Event\Subscriber\WidgetSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Bolt\Widgets"/>
      <argument type="service" id="Bolt\Canonical"/>
    </service>
    <service id="Bolt\Event\Subscriber\ZoneSubscriber" class="Bolt\Event\Subscriber\ZoneSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="Bolt\Extension\ExtensionCompilerPass" class="Bolt\Extension\ExtensionCompilerPass" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Extension\ExtensionController" class="Bolt\Extension\ExtensionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.bgaRbUU.Bolt\Extension\ExtensionController"/>
      </call>
    </service>
    <service id="Bolt\Extension\ExtensionRegistry" class="Bolt\Extension\ExtensionRegistry" public="false" autowire="true" autoconfigure="true">
      <call method="addCompilerPass">
        <argument type="collection">
          <argument>BobdenOtter\WeatherWidget\Extension</argument>
          <argument>Bolt\NewsWidget\Extension</argument>
          <argument>BobdenOtter\ConfigurationNotices\Extension</argument>
          <argument>Bolt\BoltForms\Extension</argument>
          <argument>Bobdenotter\RssExtension\Extension</argument>
        </argument>
      </call>
    </service>
    <service id="Bolt\Extension\RoutesLoader" class="Bolt\Extension\RoutesLoader" public="false" autowire="true" autoconfigure="true">
      <tag name="routing.loader"/>
      <argument type="service" id="Bolt\Extension\ExtensionRegistry"/>
    </service>
    <service id="Bolt\Factory\MediaFactory" class="Bolt\Factory\MediaFactory" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument type="service" id="Bolt\Configuration\FileLocations"/>
      <argument type="service" id="Bolt\Repository\MediaRepository"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="Bolt\Form\UserType" class="Bolt\Form\UserType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Bolt\Log\LogHandler" class="Bolt\Log\LogHandler" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="pushProcessor">
        <argument type="collection">
          <argument type="service" id="monolog.processor.request"/>
          <argument>processRecord</argument>
        </argument>
      </call>
    </service>
    <service id="Bolt\Log\RequestProcessor" class="Bolt\Log\RequestProcessor" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="Bolt\Menu\CachedBackendMenuBuilder" class="Bolt\Menu\CachedBackendMenuBuilder" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Menu\StopwatchBackendMenuBuilder"/>
      <argument type="service" id="cache.app.taggable"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Bolt\Menu\CachedFrontendMenuBuilder" class="Bolt\Menu\CachedFrontendMenuBuilder" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Menu\StopwatchFrontendMenuBuilder"/>
      <argument type="service" id="cache.app.taggable"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Bolt\Menu\StopwatchBackendMenuBuilder" class="Bolt\Menu\StopwatchBackendMenuBuilder" autowire="true">
      <tag name="knp_menu.menu_builder" method="createAdminMenu" alias="admin_menu"/>
      <argument type="service" id="Bolt\Menu\StopwatchBackendMenuBuilder.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="Bolt\Menu\StopwatchFrontendMenuBuilder" class="Bolt\Menu\StopwatchFrontendMenuBuilder" autowire="true">
      <argument type="service" id="Bolt\Menu\StopwatchFrontendMenuBuilder.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="Bolt\Repository\ContentRepository" class="Bolt\Repository\ContentRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Bolt\Repository\FieldRepository" class="Bolt\Repository\FieldRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Bolt\Repository\LogRepository" class="Bolt\Repository\LogRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Bolt\Repository\MediaRepository" class="Bolt\Repository\MediaRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Bolt\Repository\RelationRepository" class="Bolt\Repository\RelationRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Bolt\Repository\TaxonomyRepository" class="Bolt\Repository\TaxonomyRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Bolt\Repository\UserAuthTokenRepository" class="Bolt\Repository\UserAuthTokenRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Bolt\Repository\UserRepository" class="Bolt\Repository\UserRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Bolt\Security\LoginFormAuthenticator" class="Bolt\Security\LoginFormAuthenticator" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Repository\UserRepository"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.db"/>
      </call>
    </service>
    <service id="Bolt\Security\LogoutListener" class="Bolt\Security\LogoutListener" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.db"/>
      </call>
    </service>
    <service id="Bolt\Security\UserChecker" class="Bolt\Security\UserChecker" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Storage\ContentQueryParser" class="Bolt\Storage\ContentQueryParser" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Bolt\Repository\ContentRepository"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument type="service" id="Bolt\Storage\SelectQuery"/>
      <call method="addService">
        <argument>select</argument>
        <argument type="service" id="Bolt\Storage\SelectQuery"/>
      </call>
    </service>
    <service id="Bolt\Storage\Directive\GetQueryDirective" class="Bolt\Storage\Directive\GetQueryDirective" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Storage\Directive\LimitDirective" class="Bolt\Storage\Directive\LimitDirective" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Storage\Directive\OffsetDirective" class="Bolt\Storage\Directive\OffsetDirective" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Storage\Directive\OrderDirective" class="Bolt\Storage\Directive\OrderDirective" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Storage\Directive\PrintQueryDirective" class="Bolt\Storage\Directive\PrintQueryDirective" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Storage\Directive\ReturnSingleDirective" class="Bolt\Storage\Directive\ReturnSingleDirective" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Storage\Filter" class="Bolt\Storage\Filter" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Storage\FrontendQueryScope" class="Bolt\Storage\FrontendQueryScope" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Configuration\Config"/>
    </service>
    <service id="Bolt\Storage\Handler\FirstQueryHandler" class="Bolt\Storage\Handler\FirstQueryHandler" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Storage\Handler\IdentifiedSelectHandler" class="Bolt\Storage\Handler\IdentifiedSelectHandler" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Storage\Handler\LatestQueryHandler" class="Bolt\Storage\Handler\LatestQueryHandler" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Storage\Handler\SelectQueryHandler" class="Bolt\Storage\Handler\SelectQueryHandler" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Storage\Query" class="Bolt\Storage\Query" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Storage\ContentQueryParser"/>
      <call method="addScope">
        <argument>frontend</argument>
        <argument type="service" id="Bolt\Storage\FrontendQueryScope"/>
      </call>
    </service>
    <service id="Bolt\Storage\QueryParameterParser" class="Bolt\Storage\QueryParameterParser" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Doctrine\ORM\Query\Expr"/>
    </service>
    <service id="Bolt\Storage\SelectQuery" class="Bolt\Storage\SelectQuery" public="false" autowire="true" autoconfigure="true">
      <argument>null</argument>
      <argument type="service" id="Bolt\Storage\QueryParameterParser"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
    </service>
    <service id="Bolt\TemplateChooser" class="Bolt\TemplateChooser" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument type="service" id="Bolt\Twig\ContentExtension"/>
    </service>
    <service id="Bolt\Twig\ArrayExtension" class="Bolt\Twig\ArrayExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Bolt\Twig\BackendMenuExtension" class="Bolt\Twig\BackendMenuExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Bolt\Menu\StopwatchBackendMenuBuilder"/>
    </service>
    <service id="Bolt\Twig\ContentExtension" class="Bolt\Twig\ContentExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="Bolt\Repository\ContentRepository"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument type="service" id="Bolt\Storage\Query"/>
      <argument type="service" id="Bolt\Repository\TaxonomyRepository"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Bolt\Canonical"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.db"/>
      </call>
    </service>
    <service id="Bolt\Twig\DebugExtension" class="Bolt\Twig\DebugExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Bolt\Twig\DumpExtension" class="Bolt\Twig\DumpExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument>dev</argument>
    </service>
    <service id="Bolt\Twig\FieldExtension" class="Bolt\Twig\FieldExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Bolt\Twig\Notifications"/>
      <argument type="service" id="Bolt\Repository\ContentRepository"/>
    </service>
    <service id="Bolt\Twig\FrontendMenuExtension" class="Bolt\Twig\FrontendMenuExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Bolt\Menu\StopwatchFrontendMenuBuilder"/>
    </service>
    <service id="Bolt\Twig\HtmlExtension" class="Bolt\Twig\HtmlExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Bolt\Utils\Markdown"/>
      <argument type="service" id="Bolt\Canonical"/>
    </service>
    <service id="Bolt\Twig\ImageExtension" class="Bolt\Twig\ImageExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Bolt\Repository\MediaRepository"/>
      <argument type="service" id="Bolt\Twig\Notifications"/>
      <argument type="service" id="Bolt\Utils\ThumbnailHelper"/>
    </service>
    <service id="Bolt\Twig\JsonExtension" class="Bolt\Twig\JsonExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="serializer"/>
    </service>
    <service id="Bolt\Twig\LocaleExtension" class="Bolt\Twig\LocaleExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Bolt\Utils\LocaleHelper"/>
    </service>
    <service id="Bolt\Twig\Node\SetcontentNode" class="Bolt\Twig\Node\SetcontentNode" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Twig\Notifications" class="Bolt\Twig\Notifications" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="twig"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
    </service>
    <service id="Bolt\Twig\RelatedExtension" class="Bolt\Twig\RelatedExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Bolt\Repository\RelationRepository"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument type="service" id="Bolt\Storage\Query"/>
    </service>
    <service id="Bolt\Twig\SetcontentExtension" class="Bolt\Twig\SetcontentExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Bolt\Storage\Query"/>
    </service>
    <service id="Bolt\Twig\TextExtension" class="Bolt\Twig\TextExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Bolt\Twig\TokenParser\DumpTokenParser" class="Bolt\Twig\TokenParser\DumpTokenParser" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Twig\TokenParser\SetcontentTokenParser" class="Bolt\Twig\TokenParser\SetcontentTokenParser" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Twig\TranslatableExtension" class="Bolt\Twig\TranslatableExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Bolt\Twig\UserExtension" class="Bolt\Twig\UserExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="security.helper"/>
    </service>
    <service id="Bolt\Twig\WidgetExtension" class="Bolt\Twig\WidgetExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Bolt\Widgets"/>
    </service>
    <service id="Bolt\Utils\ContentHelper" class="Bolt\Utils\ContentHelper" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Utils\Excerpt" class="Bolt\Utils\Excerpt" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Utils\FakeContent" class="Bolt\Utils\FakeContent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Utils\Html" class="Bolt\Utils\Html" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Utils\LocaleHelper" class="Bolt\Utils\LocaleHelper" public="false" autowire="true" autoconfigure="true">
      <argument>en|nl|es|fr|de|pl|it|hu|pt_BR|ja|nb|nn|nl_NL|nl_BE|is|ru</argument>
      <argument type="service" id="Bolt\Repository\ContentRepository"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument>en</argument>
    </service>
    <service id="Bolt\Utils\Markdown" class="Bolt\Utils\Markdown" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Utils\MomentFormatConverter" class="Bolt\Utils\MomentFormatConverter" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Utils\Sanitiser" class="Bolt\Utils\Sanitiser" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Utils\ThumbnailCacheClearer" class="Bolt\Utils\ThumbnailCacheClearer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Configuration\Config"/>
    </service>
    <service id="Bolt\Utils\ThumbnailHelper" class="Bolt\Utils\ThumbnailHelper" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Configuration\Config"/>
    </service>
    <service id="Bolt\Utils\TranslationsManager" class="Bolt\Utils\TranslationsManager" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Widget\BoltHeaderWidget" class="Bolt\Widget\BoltHeaderWidget" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Widget\CanonicalLinkWidget" class="Bolt\Widget\CanonicalLinkWidget" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Canonical"/>
    </service>
    <service id="Bolt\Widget\Exception\WidgetException" class="Bolt\Widget\Exception\WidgetException" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Widget\Injector\AdditionalTarget" class="Bolt\Widget\Injector\AdditionalTarget" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Widget\Injector\HtmlInjector" class="Bolt\Widget\Injector\HtmlInjector" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Widget\Injector\QueueProcessor" class="Bolt\Widget\Injector\QueueProcessor" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Widget\Injector\HtmlInjector"/>
    </service>
    <service id="Bolt\Widget\Injector\RequestZone" class="Bolt\Widget\Injector\RequestZone" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Widget\Injector\Target" class="Bolt\Widget\Injector\Target" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Widget\SnippetWidget" class="Bolt\Widget\SnippetWidget" public="false" autowire="true" autoconfigure="true"/>
    <service id="Bolt\Widgets" class="Bolt\Widgets" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Bolt\Widget\Injector\QueueProcessor"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="cache.app"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="Squirrel\TwigPhpSyntax\PhpSyntaxExtension" class="Squirrel\TwigPhpSyntax\PhpSyntaxExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Doctrine\ORM\Query\Expr" class="Doctrine\ORM\Query\Expr" public="false" autowire="true" autoconfigure="true"/>
    <service id="monolog.processor.request" class="Bolt\Log\RequestProcessor" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.processor" method="processRecord" handler="db"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="Twig\Extension\StringLoaderExtension" class="Twig\Extension\StringLoaderExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="BobdenOtter\WeatherWidget\Extension" class="BobdenOtter\WeatherWidget\Extension" autowire="true" autoconfigure="true">
      <tag name="bolt.extension"/>
    </service>
    <service id="BobdenOtter\WeatherWidget\WeatherWidget" class="BobdenOtter\WeatherWidget\WeatherWidget" autowire="true" autoconfigure="true"/>
    <service id="Bolt\NewsWidget\Extension" class="Bolt\NewsWidget\Extension" autowire="true" autoconfigure="true">
      <tag name="bolt.extension"/>
    </service>
    <service id="Bolt\NewsWidget\NewsWidget" class="Bolt\NewsWidget\NewsWidget" autowire="true" autoconfigure="true"/>
    <service id="BobdenOtter\ConfigurationNotices\Checks" class="BobdenOtter\ConfigurationNotices\Checks" autowire="true" autoconfigure="true"/>
    <service id="BobdenOtter\ConfigurationNotices\ConfigurationWidget" class="BobdenOtter\ConfigurationNotices\ConfigurationWidget" autowire="true" autoconfigure="true"/>
    <service id="BobdenOtter\ConfigurationNotices\Extension" class="BobdenOtter\ConfigurationNotices\Extension" autowire="true" autoconfigure="true">
      <tag name="bolt.extension"/>
    </service>
    <service id="Bolt\BoltForms\Event\PostSubmitEvent" class="Bolt\BoltForms\Event\PostSubmitEvent" autowire="true" autoconfigure="true"/>
    <service id="Bolt\BoltForms\EventSubscriber\HoneypotSubscriber" class="Bolt\BoltForms\EventSubscriber\HoneypotSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Bolt\BoltForms\EventSubscriber\Logger" class="Bolt\BoltForms\EventSubscriber\Logger" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.db"/>
      </call>
    </service>
    <service id="Bolt\BoltForms\EventSubscriber\Mailer" class="Bolt\BoltForms\EventSubscriber\Mailer" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="mailer.mailer"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.db"/>
      </call>
    </service>
    <service id="Bolt\BoltForms\Extension" class="Bolt\BoltForms\Extension" autowire="true" autoconfigure="true">
      <tag name="bolt.extension"/>
    </service>
    <service id="Bolt\BoltForms\Factory\FieldConstraints" class="Bolt\BoltForms\Factory\FieldConstraints" autowire="true" autoconfigure="true"/>
    <service id="Bolt\BoltForms\Factory\FieldOptions" class="Bolt\BoltForms\Factory\FieldOptions" autowire="true" autoconfigure="true"/>
    <service id="Bolt\BoltForms\Factory\FieldType" class="Bolt\BoltForms\Factory\FieldType" autowire="true" autoconfigure="true"/>
    <service id="Bolt\BoltForms\FormBuilder" class="Bolt\BoltForms\FormBuilder" autowire="true" autoconfigure="true">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="Bolt\BoltForms\FormRuntime" class="Bolt\BoltForms\FormRuntime" autowire="true" autoconfigure="true">
      <tag name="twig.runtime"/>
      <argument type="service" id="Bolt\Extension\ExtensionRegistry"/>
      <argument type="service" id="Bolt\Twig\Notifications"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="Bolt\BoltForms\FormBuilder"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Bolt\BoltForms\Honeypot" class="Bolt\BoltForms\Honeypot" autowire="true" autoconfigure="true"/>
    <service id="Bolt\BoltForms\TwigExtension" class="Bolt\BoltForms\TwigExtension" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Bobdenotter\RssExtension\Controller" class="Bobdenotter\RssExtension\Controller" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.vdmMuyE.Bobdenotter\RssExtension\Controller"/>
      </call>
    </service>
    <service id="Bobdenotter\RssExtension\Extension" class="Bobdenotter\RssExtension\Extension" autowire="true" autoconfigure="true">
      <tag name="bolt.extension"/>
    </service>
    <service id="Bobdenotter\RssExtension\ReferenceWidget" class="Bobdenotter\RssExtension\ReferenceWidget" autowire="true" autoconfigure="true"/>
    <service id="Bobdenotter\RssExtension\RegisterControllers" class="Bobdenotter\RssExtension\RegisterControllers" autowire="true" autoconfigure="true"/>
    <service id="Bobdenotter\RssExtension\Twig" class="Bobdenotter\RssExtension\Twig" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="api_platform.negotiator" class="Negotiation\Negotiator" public="false"/>
    <service id="api_platform.resource_class_resolver" class="ApiPlatform\Core\Api\ResourceClassResolver" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.operation_method_resolver" class="ApiPlatform\Core\Bridge\Symfony\Routing\OperationMethodResolver" public="false">
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.5.</deprecated>
    </service>
    <service id="api_platform.route_name_resolver.cached" class="ApiPlatform\Core\Bridge\Symfony\Routing\CachedRouteNameResolver" public="false">
      <argument type="service" id="api_platform.cache.route_name_resolver"/>
      <argument type="service" id="api_platform.route_name_resolver.cached.inner"/>
    </service>
    <service id="api_platform.route_loader" class="ApiPlatform\Core\Bridge\Symfony\Routing\ApiLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.operation_path_resolver.custom"/>
      <argument type="service" id="service_container"/>
      <argument>%api_platform.formats%</argument>
      <argument>%api_platform.resource_class_directories%</argument>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="api_platform.router" class="ApiPlatform\Core\Bridge\Symfony\Routing\Router" public="false">
      <argument type="service" id="router.default"/>
    </service>
    <service id="api_platform.iri_converter" class="ApiPlatform\Core\Bridge\Symfony\Routing\IriConverter" public="false">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="debug.api_platform.item_data_provider"/>
      <argument type="service" id="api_platform.route_name_resolver.cached"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
      <argument type="service" id="debug.api_platform.subresource_data_provider" on-invalid="ignore"/>
      <argument type="service" id="api_platform.identifier.converter" on-invalid="ignore"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.formats_provider" class="ApiPlatform\Core\Api\FormatsProvider">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>%api_platform.formats%</argument>
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.5.</deprecated>
    </service>
    <service id="api_platform.serializer.context_builder.filter" class="ApiPlatform\Core\Serializer\SerializerFilterContextBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter.inner"/>
    </service>
    <service id="api_platform.serializer.property_filter" class="ApiPlatform\Core\Serializer\Filter\PropertyFilter" public="false" abstract="true">
      <argument>properties</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.serializer.group_filter" class="ApiPlatform\Core\Serializer\Filter\GroupFilter" public="false" abstract="true"/>
    <service id="api_platform.serializer.normalizer.item" class="ApiPlatform\Core\Serializer\ItemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-895"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore"/>
      <argument type="service" id="debug.api_platform.item_data_provider" on-invalid="ignore"/>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="tagged_iterator" tag="api_platform.data_transformer"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached" on-invalid="ignore"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.operation_path_resolver.router" class="ApiPlatform\Core\Bridge\Symfony\Routing\RouterOperationPathResolver" public="false">
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.operation_path_resolver.custom"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
    </service>
    <service id="api_platform.operation_path_resolver.custom" class="ApiPlatform\Core\PathResolver\CustomOperationPathResolver" public="false">
      <argument type="service" id="api_platform.operation_path_resolver.generator"/>
    </service>
    <service id="api_platform.operation_path_resolver.generator" class="ApiPlatform\Core\PathResolver\OperationPathResolver" public="false">
      <argument type="service" id="api_platform.path_segment_name_generator.underscore"/>
    </service>
    <service id="api_platform.operation_path_resolver.underscore" class="ApiPlatform\Core\PathResolver\UnderscoreOperationPathResolver" public="false">
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.1 and will be removed in 3.0. Use "api_platform.path_segment_name_generator.underscore" instead.</deprecated>
    </service>
    <service id="api_platform.operation_path_resolver.dash" class="ApiPlatform\Core\PathResolver\DashOperationPathResolver" public="false">
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.1 and will be removed in 3.0. Use "api_platform.path_segment_name_generator.dash" instead.</deprecated>
    </service>
    <service id="api_platform.path_segment_name_generator.underscore" class="ApiPlatform\Core\Operation\UnderscorePathSegmentNameGenerator" public="false"/>
    <service id="api_platform.path_segment_name_generator.dash" class="ApiPlatform\Core\Operation\DashPathSegmentNameGenerator" public="false"/>
    <service id="api_platform.listener.request.add_format" class="ApiPlatform\Core\EventListener\AddFormatListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="7"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.negotiator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>%api_platform.formats%</argument>
    </service>
    <service id="api_platform.listener.request.read" class="ApiPlatform\Core\EventListener\ReadListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="4"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.api_platform.collection_data_provider"/>
      <argument type="service" id="debug.api_platform.item_data_provider"/>
      <argument type="service" id="debug.api_platform.subresource_data_provider"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.identifier.converter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.write" class="ApiPlatform\Core\EventListener\WriteListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="32"/>
      <argument type="service" id="debug.api_platform.data_persister"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.listener.request.deserialize" class="ApiPlatform\Core\EventListener\DeserializeListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="2"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.serialize" class="ApiPlatform\Core\EventListener\SerializeListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="16"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.respond" class="ApiPlatform\Core\EventListener\RespondListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="8"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.exception.validation" class="ApiPlatform\Core\Bridge\Symfony\Validator\EventListener\ValidationExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException"/>
      <argument type="service" id="serializer"/>
      <argument>%api_platform.error_formats%</argument>
    </service>
    <service id="api_platform.listener.exception" class="ApiPlatform\Core\EventListener\ExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="-96"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>api_platform.action.exception</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>false</argument>
      <argument type="service" id="exception_listener" on-invalid="null"/>
    </service>
    <service id="api_platform.action.placeholder" class="ApiPlatform\Core\Action\PlaceholderAction" public="true"/>
    <service id="api_platform.action.not_found" class="ApiPlatform\Core\Action\NotFoundAction" public="true"/>
    <service id="api_platform.action.entrypoint" class="ApiPlatform\Core\Action\EntrypointAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.action.documentation" class="ApiPlatform\Core\Documentation\Action\DocumentationAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument></argument>
      <argument></argument>
      <argument>0.0.0</argument>
      <argument>null</argument>
      <argument>%api_platform.swagger.versions%</argument>
    </service>
    <service id="api_platform.action.exception" class="ApiPlatform\Core\Action\ExceptionAction" public="true">
      <argument type="service" id="serializer"/>
      <argument>%api_platform.error_formats%</argument>
      <argument>%api_platform.exception_to_status%</argument>
    </service>
    <service id="api_platform.identifiers_extractor.cached" class="ApiPlatform\Core\Api\CachedIdentifiersExtractor" public="false">
      <argument type="service" id="api_platform.cache.identifiers_extractor"/>
      <argument type="service" id="api_platform.identifiers_extractor.cached.inner"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.identifier.converter" class="ApiPlatform\Core\Identifier\IdentifierConverter" public="false">
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.identifier.integer" class="ApiPlatform\Core\Identifier\Normalizer\IntegerDenormalizer" public="false">
      <tag name="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.identifier.date_normalizer" class="ApiPlatform\Core\Identifier\Normalizer\DateTimeIdentifierDenormalizer" public="false">
      <tag name="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.subresource_operation_factory.cached" class="ApiPlatform\Core\Operation\Factory\CachedSubresourceOperationFactory" public="false">
      <argument type="service" id="api_platform.cache.subresource_operation_factory"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached.inner"/>
    </service>
    <service id="api_platform.cache.route_name_resolver" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.route_name_resolver.recorder_inner"/>
    </service>
    <service id="api_platform.cache.identifiers_extractor" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.identifiers_extractor.recorder_inner"/>
    </service>
    <service id="api_platform.cache.subresource_operation_factory" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.subresource_operation_factory.recorder_inner"/>
    </service>
    <service id="api_platform.cache_warmer.cache_pool_clearer" class="ApiPlatform\Core\Bridge\Symfony\Bundle\CacheWarmer\CachePoolClearerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="64"/>
      <argument type="service" id="cache.system_clearer"/>
      <argument type="collection">
        <argument>api_platform.cache.metadata.property</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.identifiers_extractor</argument>
        <argument>api_platform.cache.subresource_operation_factory</argument>
        <argument>api_platform.elasticsearch.cache.metadata.document</argument>
      </argument>
    </service>
    <service id="api_platform.serializer_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="serializer" type="service" id="serializer"/>
      </argument>
    </service>
    <service id="api_platform.pagination" class="ApiPlatform\Core\DataProvider\Pagination">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>%api_platform.collection.pagination%</argument>
      <argument>%api_platform.graphql.collection.pagination%</argument>
    </service>
    <service id="api_platform.filter_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="annotated_bolt_entity_content_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_bolt_entity_content_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_bolt_entity_field_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_bolt_entity_field_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_bolt_entity_relation_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_bolt_entity_relation_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
      </argument>
    </service>
    <service id="api_platform.filter_collection_factory" class="ApiPlatform\Core\Api\FilterCollectionFactory" public="false">
      <argument type="collection">
        <argument>annotated_bolt_entity_content_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_bolt_entity_field_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_bolt_entity_relation_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
      </argument>
    </service>
    <service id="api_platform.filters" class="ApiPlatform\Core\Api\FilterCollection" public="false">
      <argument type="service" id="api_platform.filter_locator"/>
      <factory service="api_platform.filter_collection_factory" method="createFilterCollectionFromLocator"/>
      <deprecated>The "%service_id%" service is deprecated since 2.1 and will be removed in 3.0. Use the "api_platform.filter_locator" service instead.</deprecated>
    </service>
    <service id="api_platform.identifier.uuid_normalizer" class="ApiPlatform\Core\Bridge\RamseyUuid\Identifier\Normalizer\UuidNormalizer" public="false">
      <tag name="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.serializer.uuid_denormalizer" class="ApiPlatform\Core\Bridge\RamseyUuid\Serializer\UuidDenormalizer" public="false">
      <tag name="serializer.normalizer"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.cached" class="ApiPlatform\Core\Metadata\Resource\Factory\CachedResourceNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.resource"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.input_output" class="ApiPlatform\Core\Metadata\Resource\Factory\InputOutputResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.short_name" class="ApiPlatform\Core\Metadata\Resource\Factory\ShortNameResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.php_doc"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.operation" class="ApiPlatform\Core\Metadata\Resource\Factory\OperationResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.filter_metadata_factory.annotation"/>
      <argument>%api_platform.patch_formats%</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.formats" class="ApiPlatform\Core\Metadata\Resource\Factory\FormatsResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.operation"/>
      <argument>%api_platform.formats%</argument>
      <argument>%api_platform.patch_formats%</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.cached" class="ApiPlatform\Core\Metadata\Resource\Factory\CachedResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.resource"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.formats"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.property_info" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyNameCollectionFactory" public="false">
      <argument type="service" id="property_info"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.inherited" class="ApiPlatform\Core\Metadata\Property\Factory\InheritedPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.property_info"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.cached" class="ApiPlatform\Core\Metadata\Property\Factory\CachedPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.property"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.property_info" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyMetadataFactory" public="false">
      <argument type="service" id="property_info"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.xml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.inherited" class="ApiPlatform\Core\Metadata\Property\Factory\InheritedPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.property_info"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.serializer" class="ApiPlatform\Core\Metadata\Property\Factory\SerializerPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="api_platform.doctrine.orm.metadata.property.metadata_factory"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.cached" class="ApiPlatform\Core\Metadata\Property\Factory\CachedPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.property"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.validator"/>
    </service>
    <service id="api_platform.cache.metadata.resource" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.metadata.resource.recorder_inner"/>
    </service>
    <service id="api_platform.cache.metadata.property" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.metadata.property.recorder_inner"/>
    </service>
    <service id="api_platform.metadata.extractor.xml" class="ApiPlatform\Core\Metadata\Extractor\XmlExtractor" public="false">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.xml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.xml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.xml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.inherited"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.xml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceNameCollectionFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument>%api_platform.resource_class_directories%</argument>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.xml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.xml"/>
    </service>
    <service id="api_platform.metadata.resource.filter_metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceFilterMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.short_name"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Property\Factory\AnnotationPropertyMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.subresource.metadata_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.subresource.metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Property\Factory\AnnotationSubresourceMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.serializer"/>
    </service>
    <service id="api_platform.metadata.extractor.yaml" class="ApiPlatform\Core\Metadata\Extractor\YamlExtractor" public="false">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.yaml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.yaml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.yaml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.xml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.yaml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.php_doc" class="ApiPlatform\Core\Metadata\Resource\Factory\PhpDocResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.input_output"/>
    </service>
    <service id="api_platform.json_schema.type_factory" class="ApiPlatform\Core\JsonSchema\TypeFactory" public="false">
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <call method="setSchemaFactory">
        <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      </call>
    </service>
    <service id="api_platform.json_schema.json_schema_generate_command" class="ApiPlatform\Core\JsonSchema\Command\JsonSchemaGenerateCommand" public="false">
      <tag name="console.command"/>
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      <argument>%api_platform.formats%</argument>
    </service>
    <service id="api_platform.swagger.normalizer.api_gateway" class="ApiPlatform\Core\Swagger\Serializer\ApiGatewayNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="service" id="api_platform.swagger.normalizer.api_gateway.inner"/>
    </service>
    <service id="api_platform.swagger.command.swagger_command" class="ApiPlatform\Core\Bridge\Symfony\Bundle\Command\SwaggerCommand">
      <tag name="console.command"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument></argument>
      <argument></argument>
      <argument>0.0.0</argument>
      <argument>null</argument>
      <argument>%api_platform.swagger.versions%</argument>
    </service>
    <service id="api_platform.swagger.listener.ui" class="ApiPlatform\Core\Bridge\Symfony\Bundle\EventListener\SwaggerUiListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="api_platform.swagger.action.ui" class="ApiPlatform\Core\Bridge\Symfony\Bundle\Action\SwaggerUiAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default"/>
      <argument></argument>
      <argument></argument>
      <argument>0.0.0</argument>
      <argument>%api_platform.formats%</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument>oauth2</argument>
      <argument>application</argument>
      <argument>/oauth/v2/token</argument>
      <argument>/oauth/v2/auth</argument>
      <argument type="collection"/>
      <argument>true</argument>
      <argument>false</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>%api_platform.swagger.versions%</argument>
    </service>
    <service id="api_platform.jsonapi.encoder" class="ApiPlatform\Core\Serializer\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
      <argument>jsonapi</argument>
    </service>
    <service id="api_platform.jsonapi.name_converter.reserved_attribute_name" class="ApiPlatform\Core\JsonApi\Serializer\ReservedAttributeNameConverter" public="false">
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.jsonapi.normalizer.entrypoint" class="ApiPlatform\Core\JsonApi\Serializer\EntrypointNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.jsonapi.normalizer.collection" class="ApiPlatform\Core\JsonApi\Serializer\CollectionNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-985"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument>page</argument>
    </service>
    <service id="api_platform.jsonapi.normalizer.item" class="ApiPlatform\Core\JsonApi\Serializer\ItemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.jsonapi.name_converter.reserved_attribute_name"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="collection"/>
      <argument type="tagged_iterator" tag="api_platform.data_transformer"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.jsonapi.normalizer.object" class="ApiPlatform\Core\JsonApi\Serializer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-995"/>
      <argument type="service" id="serializer.normalizer.object"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.jsonapi.normalizer.constraint_violation_list" class="ApiPlatform\Core\JsonApi\Serializer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.jsonapi.name_converter.reserved_attribute_name"/>
    </service>
    <service id="api_platform.jsonapi.normalizer.error" class="ApiPlatform\Core\JsonApi\Serializer\ErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-790"/>
      <argument>true</argument>
    </service>
    <service id="api_platform.jsonapi.listener.request.transform_pagination_parameters" class="ApiPlatform\Core\JsonApi\EventListener\TransformPaginationParametersListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="5"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="api_platform.jsonapi.listener.request.transform_sorting_parameters" class="ApiPlatform\Core\JsonApi\EventListener\TransformSortingParametersListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="5"/>
      <tag name="container.hot_path"/>
      <argument>order</argument>
    </service>
    <service id="api_platform.jsonapi.listener.request.transform_fieldsets_parameters" class="ApiPlatform\Core\JsonApi\EventListener\TransformFieldsetsParametersListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="5"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.jsonapi.listener.request.transform_filtering_parameters" class="ApiPlatform\Core\JsonApi\EventListener\TransformFilteringParametersListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="5"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="api_platform.jsonld.context_builder" class="ApiPlatform\Core\JsonLd\ContextBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.jsonld.normalizer.item" class="ApiPlatform\Core\JsonLd\Serializer\ItemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument type="tagged_iterator" tag="api_platform.data_transformer"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.jsonld.normalizer.object" class="ApiPlatform\Core\JsonLd\Serializer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-995"/>
      <argument type="service" id="serializer.normalizer.object"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
    </service>
    <service id="api_platform.jsonld.encoder" class="ApiPlatform\Core\Serializer\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
      <argument>jsonld</argument>
    </service>
    <service id="api_platform.jsonld.action.context" class="ApiPlatform\Core\JsonLd\Action\ContextAction" public="true">
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.hydra.normalizer.documentation" class="ApiPlatform\Core\Hydra\Serializer\DocumentationNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.hydra.listener.response.add_link_header" class="ApiPlatform\Core\Hydra\EventListener\AddLinkHeaderListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.hydra.normalizer.constraint_violation_list" class="ApiPlatform\Core\Hydra\Serializer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.hydra.normalizer.entrypoint" class="ApiPlatform\Core\Hydra\Serializer\EntrypointNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.hydra.normalizer.error" class="ApiPlatform\Core\Hydra\Serializer\ErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="api_platform.router"/>
      <argument>true</argument>
    </service>
    <service id="api_platform.hydra.normalizer.partial_collection_view" class="ApiPlatform\Core\Hydra\Serializer\PartialCollectionViewNormalizer" public="false">
      <argument type="service" id="api_platform.hydra.normalizer.partial_collection_view.inner"/>
      <argument>page</argument>
      <argument>pagination</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="api_platform.hydra.normalizer.collection_filters" class="ApiPlatform\Core\Hydra\Serializer\CollectionFiltersNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-985"/>
      <argument type="service" id="api_platform.hydra.normalizer.partial_collection_view"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.hydra.json_schema.schema_factory" class="ApiPlatform\Core\Hydra\JsonSchema\SchemaFactory">
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory.inner"/>
    </service>
    <service id="api_platform.problem.encoder" class="ApiPlatform\Core\Serializer\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
      <argument>jsonproblem</argument>
    </service>
    <service id="api_platform.problem.normalizer.constraint_violation_list" class="ApiPlatform\Core\Problem\Serializer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.problem.normalizer.error" class="ApiPlatform\Core\Problem\Serializer\ErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-810"/>
      <argument>true</argument>
    </service>
    <service id="api_platform.graphql.executor" class="ApiPlatform\Core\GraphQl\Executor" public="false"/>
    <service id="api_platform.graphql.resolver.factory.item" class="ApiPlatform\Core\GraphQl\Resolver\Factory\ItemResolverFactory" public="false">
      <argument type="service" id="api_platform.graphql.resolver.stage.read"/>
      <argument type="service" id="api_platform.graphql.resolver.stage.security"/>
      <argument type="service" id="api_platform.graphql.resolver.stage.security_post_denormalize"/>
      <argument type="service" id="api_platform.graphql.resolver.stage.serialize"/>
      <argument type="service" id="api_platform.graphql.query_resolver_locator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.graphql.resolver.factory.collection" class="ApiPlatform\Core\GraphQl\Resolver\Factory\CollectionResolverFactory" public="false">
      <argument type="service" id="api_platform.graphql.resolver.stage.read"/>
      <argument type="service" id="api_platform.graphql.resolver.stage.security"/>
      <argument type="service" id="api_platform.graphql.resolver.stage.security_post_denormalize"/>
      <argument type="service" id="api_platform.graphql.resolver.stage.serialize"/>
      <argument type="service" id="api_platform.graphql.query_resolver_locator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="api_platform.graphql.resolver.factory.item_mutation" class="ApiPlatform\Core\GraphQl\Resolver\Factory\ItemMutationResolverFactory" public="false">
      <argument type="service" id="api_platform.graphql.resolver.stage.read"/>
      <argument type="service" id="api_platform.graphql.resolver.stage.security"/>
      <argument type="service" id="api_platform.graphql.resolver.stage.security_post_denormalize"/>
      <argument type="service" id="api_platform.graphql.resolver.stage.serialize"/>
      <argument type="service" id="api_platform.graphql.resolver.stage.deserialize"/>
      <argument type="service" id="api_platform.graphql.resolver.stage.write"/>
      <argument type="service" id="api_platform.graphql.resolver.stage.validate"/>
      <argument type="service" id="api_platform.graphql.mutation_resolver_locator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.graphql.resolver.stage.read" class="ApiPlatform\Core\GraphQl\Resolver\Stage\ReadStage" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="debug.api_platform.collection_data_provider"/>
      <argument type="service" id="debug.api_platform.subresource_data_provider"/>
      <argument type="service" id="api_platform.graphql.serializer.context_builder"/>
      <argument>_</argument>
    </service>
    <service id="api_platform.graphql.resolver.stage.security" class="ApiPlatform\Core\GraphQl\Resolver\Stage\SecurityStage" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.security.resource_access_checker" on-invalid="ignore"/>
    </service>
    <service id="api_platform.graphql.resolver.stage.security_post_denormalize" class="ApiPlatform\Core\GraphQl\Resolver\Stage\SecurityPostDenormalizeStage" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.security.resource_access_checker" on-invalid="ignore"/>
    </service>
    <service id="api_platform.graphql.resolver.stage.serialize" class="ApiPlatform\Core\GraphQl\Resolver\Stage\SerializeStage" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.graphql.serializer.context_builder"/>
      <argument type="service" id="api_platform.pagination"/>
    </service>
    <service id="api_platform.graphql.resolver.stage.deserialize" class="ApiPlatform\Core\GraphQl\Resolver\Stage\DeserializeStage" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.graphql.serializer.context_builder"/>
    </service>
    <service id="api_platform.graphql.resolver.stage.write" class="ApiPlatform\Core\GraphQl\Resolver\Stage\WriteStage" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="debug.api_platform.data_persister"/>
      <argument type="service" id="api_platform.graphql.serializer.context_builder"/>
    </service>
    <service id="api_platform.graphql.resolver.stage.validate" class="ApiPlatform\Core\GraphQl\Resolver\Stage\ValidateStage" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.validator"/>
    </service>
    <service id="api_platform.graphql.resolver.resource_field" class="ApiPlatform\Core\GraphQl\Resolver\ResourceFieldResolver" public="false">
      <argument type="service" id="api_platform.iri_converter"/>
    </service>
    <service id="api_platform.graphql.query_resolver_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="api_platform.graphql.mutation_resolver_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="api_platform.graphql.iterable_type" class="ApiPlatform\Core\GraphQl\Type\Definition\IterableType">
      <tag name="api_platform.graphql.type"/>
    </service>
    <service id="api_platform.graphql.upload_type" class="ApiPlatform\Core\GraphQl\Type\Definition\UploadType">
      <tag name="api_platform.graphql.type"/>
    </service>
    <service id="api_platform.graphql.type_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="api_platform.graphql.iterable_type" type="service" id="api_platform.graphql.iterable_type"/>
        <argument key="api_platform.graphql.upload_type" type="service" id="api_platform.graphql.upload_type"/>
      </argument>
    </service>
    <service id="api_platform.graphql.types_container" class="ApiPlatform\Core\GraphQl\Type\TypesContainer"/>
    <service id="api_platform.graphql.types_factory" class="ApiPlatform\Core\GraphQl\Type\TypesFactory">
      <argument type="service" id="api_platform.graphql.type_locator"/>
      <argument type="collection">
        <argument>api_platform.graphql.iterable_type</argument>
        <argument>api_platform.graphql.upload_type</argument>
      </argument>
    </service>
    <service id="api_platform.graphql.type_converter" class="ApiPlatform\Core\GraphQl\Type\TypeConverter">
      <argument type="service" id="api_platform.graphql.type_builder"/>
      <argument type="service" id="api_platform.graphql.types_container"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.graphql.type_builder" class="ApiPlatform\Core\GraphQl\Type\TypeBuilder" public="false">
      <argument type="service" id="api_platform.graphql.types_container"/>
      <argument type="service" id="api_platform.graphql.resolver.resource_field"/>
      <argument type="service" id="api_platform.graphql.fields_builder_locator"/>
    </service>
    <service id="api_platform.graphql.fields_builder" class="ApiPlatform\Core\GraphQl\Type\FieldsBuilder" public="false">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.graphql.types_container"/>
      <argument type="service" id="api_platform.graphql.type_builder"/>
      <argument type="service" id="api_platform.graphql.type_converter"/>
      <argument type="service" id="api_platform.graphql.resolver.factory.item"/>
      <argument type="service" id="api_platform.graphql.resolver.factory.collection"/>
      <argument type="service" id="api_platform.graphql.resolver.factory.item_mutation"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument type="service" id="api_platform.pagination"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument>_</argument>
    </service>
    <service id="api_platform.graphql.fields_builder_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="api_platform.graphql.fields_builder" type="service" id="api_platform.graphql.fields_builder"/>
      </argument>
    </service>
    <service id="api_platform.graphql.schema_builder" class="ApiPlatform\Core\GraphQl\Type\SchemaBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.graphql.types_factory"/>
      <argument type="service" id="api_platform.graphql.types_container"/>
      <argument type="service" id="api_platform.graphql.fields_builder"/>
    </service>
    <service id="api_platform.graphql.action.entrypoint" class="ApiPlatform\Core\GraphQl\Action\EntrypointAction" public="true">
      <argument type="service" id="api_platform.graphql.schema_builder"/>
      <argument type="service" id="api_platform.graphql.executor"/>
      <argument type="service" id="api_platform.graphql.action.graphiql"/>
      <argument type="service" id="api_platform.graphql.action.graphql_playground"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>graphiql</argument>
    </service>
    <service id="api_platform.graphql.action.graphiql" class="ApiPlatform\Core\GraphQl\Action\GraphiQlAction" public="true">
      <argument type="service" id="twig"/>
      <argument type="service" id="api_platform.router"/>
      <argument>true</argument>
      <argument></argument>
    </service>
    <service id="api_platform.graphql.action.graphql_playground" class="ApiPlatform\Core\GraphQl\Action\GraphQlPlaygroundAction" public="true">
      <argument type="service" id="twig"/>
      <argument type="service" id="api_platform.router"/>
      <argument>true</argument>
      <argument></argument>
    </service>
    <service id="api_platform.graphql.normalizer.item" class="ApiPlatform\Core\GraphQl\Serializer\ItemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore"/>
      <argument type="service" id="debug.api_platform.item_data_provider" on-invalid="ignore"/>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="tagged_iterator" tag="api_platform.data_transformer"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached" on-invalid="ignore"/>
    </service>
    <service id="api_platform.graphql.normalizer.object" class="ApiPlatform\Core\GraphQl\Serializer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-995"/>
      <argument type="service" id="serializer.normalizer.object"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
    </service>
    <service id="api_platform.graphql.serializer.context_builder" class="ApiPlatform\Core\GraphQl\Serializer\SerializerContextBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.graphql.command.export_command" class="ApiPlatform\Core\Bridge\Symfony\Bundle\Command\GraphQlExportCommand">
      <tag name="console.command"/>
      <argument type="service" id="api_platform.graphql.schema_builder"/>
      <call method="setName">
        <argument>api:graphql:export</argument>
      </call>
    </service>
    <service id="api_platform.doctrine.metadata_factory" class="Doctrine\Common\Persistence\Mapping\ClassMetadataFactory" public="false">
      <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
    </service>
    <service id="api_platform.doctrine.orm.data_persister" class="ApiPlatform\Core\Bridge\Doctrine\Common\DataPersister" public="false">
      <tag name="api_platform.data_persister" priority="-1000"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="api_platform.doctrine.orm.collection_data_provider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
    </service>
    <service id="api_platform.doctrine.orm.item_data_provider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.subresource_data_provider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.default.collection_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\CollectionDataProvider" public="false">
      <tag name="api_platform.collection_data_provider"/>
      <argument type="service" id="doctrine"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
    </service>
    <service id="api_platform.doctrine.orm.default.item_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\ItemDataProvider" public="false">
      <tag name="api_platform.item_data_provider"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.default.subresource_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\SubresourceDataProvider" public="false">
      <tag name="api_platform.subresource_data_provider"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="api_platform.iri_converter"/>
      <argument key="3" type="service" id="property_accessor"/>
      <argument key="4" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="6" type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument key="7" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2">order</argument>
      <argument key="3" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="5" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.range_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\RangeFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.boolean_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\BooleanFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.numeric_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\NumericFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.exists_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\ExistsFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4">exists</argument>
      <argument key="5" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.metadata.property.metadata_factory" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Metadata\Property\DoctrineOrmPropertyMetadataFactory" public="false">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.inherited"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.eager_loading" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\EagerLoadingExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.item" priority="-8"/>
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-8"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>30</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>false</argument>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-16"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.filter_eager_loading" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterEagerLoadingExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-17"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>true</argument>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.pagination" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\PaginationExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-64"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.pagination"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.order" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\OrderExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-32"/>
      <argument>ASC</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.http_cache.listener.response.configure" class="ApiPlatform\Core\HttpCache\EventListener\AddHeadersListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="-1"/>
      <tag name="container.hot_path"/>
      <argument>true</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>%api_platform.http_cache.vary%</argument>
      <argument>null</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.validator" class="ApiPlatform\Core\Bridge\Symfony\Validator\Validator">
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.validator" class="ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\ValidatorPropertyMetadataFactory" public="false">
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.yaml"/>
    </service>
    <service id="api_platform.listener.view.validate" class="ApiPlatform\Core\Validator\EventListener\ValidateListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="64"/>
      <argument type="service" id="api_platform.validator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.validate_query_parameters" class="ApiPlatform\Core\Filter\QueryParameterValidateListener" public="false">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="16"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.data_collector.request" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataCollector\RequestDataCollector" public="false">
      <tag name="data_collector" template="@ApiPlatform/DataCollector/request.html.twig" id="api_platform.data_collector.request" priority="334"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument type="service" id="debug.api_platform.collection_data_provider"/>
      <argument type="service" id="debug.api_platform.item_data_provider"/>
      <argument type="service" id="debug.api_platform.subresource_data_provider"/>
      <argument type="service" id="debug.api_platform.data_persister"/>
    </service>
    <service id="debug.api_platform.collection_data_provider" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataProvider\TraceableChainCollectionDataProvider">
      <argument type="service" id="debug.api_platform.collection_data_provider.inner"/>
    </service>
    <service id="debug.api_platform.item_data_provider" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataProvider\TraceableChainItemDataProvider">
      <argument type="service" id="debug.api_platform.item_data_provider.inner"/>
    </service>
    <service id="debug.api_platform.subresource_data_provider" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataProvider\TraceableChainSubresourceDataProvider">
      <argument type="service" id="debug.api_platform.subresource_data_provider.inner"/>
    </service>
    <service id="debug.api_platform.data_persister" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataPersister\TraceableChainDataPersister">
      <argument type="service" id="debug.api_platform.data_persister.inner"/>
    </service>
    <service id="api_platform.security.resource_access_checker" class="ApiPlatform\Core\Security\ResourceAccessChecker" public="false">
      <argument type="service" id="security.expression_language" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="api_platform.security.listener.request.deny_access" class="ApiPlatform\Core\Security\EventListener\DenyAccessListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onSecurity" priority="3"/>
      <tag name="kernel.event_listener" event="kernel.request" method="onSecurityPostDenormalize" priority="1"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.security.resource_access_checker"/>
    </service>
    <service id="api_platform.security.expression_language_provider" class="ApiPlatform\Core\Security\Core\Authorization\ExpressionLanguageProvider" public="false">
      <tag name="security.expression_language_provider"/>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger.backtrace" class="Doctrine\Bundle\DoctrineBundle\Dbal\Logging\BacktraceLogger" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <argument>true</argument>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" public="false" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id=".service_locator.F7YLi36"/>
      <call method="addEventSubscriber">
        <argument type="service" id="Knp\DoctrineBehaviors\EventSubscriber\BlameableSubscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="Knp\DoctrineBehaviors\EventSubscriber\LoggableSubscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="Knp\DoctrineBehaviors\EventSubscriber\SluggableSubscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="Knp\DoctrineBehaviors\EventSubscriber\SoftDeletableSubscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="Knp\DoctrineBehaviors\EventSubscriber\TimestampableSubscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="Knp\DoctrineBehaviors\EventSubscriber\TranslatableSubscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="Knp\DoctrineBehaviors\EventSubscriber\TreeSubscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="Knp\DoctrineBehaviors\EventSubscriber\UuidableSubscriber"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>Bolt\Doctrine\TablePrefix</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postLoad</argument>
        </argument>
        <argument>Bolt\Event\Listener\ContentFillListener</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>preUpdate</argument>
        </argument>
        <argument>Bolt\Event\Listener\ContentFillListener</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>prePersist</argument>
        </argument>
        <argument>Bolt\Event\Listener\ContentFillListener</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>Bolt\Event\Listener\FieldDiscriminatorListener</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postLoad</argument>
        </argument>
        <argument>Bolt\Event\Listener\FieldFillListener</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="charset">utf8mb4</argument>
        <argument key="url">%env(resolve:DATABASE_URL)%</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driver">pdo_mysql</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id=".1_ServiceLocator~XH1ohMl" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id=".service_locator.6dalqjL"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false"/>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
          <argument key="Bolt">Bolt\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
      <call method="addCustomStringFunction">
        <argument>JSON_EXTRACT</argument>
        <argument>Bolt\Doctrine\Functions\JsonExtract</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/Users/martinbetz/Sites/martin-bolt/src/Entity</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/src/Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Bolt\Entity</argument>
      </call>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.metadata.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.metadata"/>
    </service>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.result.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.result"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.query.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.query"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <tag name="container.preload" class="Doctrine\ORM\Proxy\Autoloader"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.fixtures_load_command" class="Doctrine\Bundle\FixturesBundle\Command\LoadDataFixturesDoctrineCommand">
      <tag name="console.command" command="doctrine:fixtures:load"/>
      <argument type="service" id="doctrine.fixtures.loader"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:fixtures:load</argument>
      </call>
    </service>
    <service id="doctrine.fixtures.loader" class="Doctrine\Bundle\FixturesBundle\Loader\SymfonyFixturesLoader" public="false">
      <argument type="service" id="service_container"/>
      <call method="addFixtures">
        <argument type="collection">
          <argument type="collection">
            <argument key="fixture" type="service" id="Bolt\DataFixtures\ContentFixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Bolt\DataFixtures\ImageFetchFixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Bolt\DataFixtures\ImagesFixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Bolt\DataFixtures\RelationsFixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Bolt\DataFixtures\TaxonomyFixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Bolt\DataFixtures\UserFixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
        </argument>
      </call>
    </service>
    <service id="knp_menu.factory" class="Knp\Menu\MenuFactory" public="true">
      <call method="addExtension">
        <argument type="service" id="knp_menu.factory_extension.routing"/>
        <argument>0</argument>
      </call>
    </service>
    <service id="knp_menu.factory_extension.routing" class="Knp\Menu\Integration\Symfony\RoutingExtension" public="false">
      <tag name="knp_menu.factory_extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="knp_menu.helper" class="Knp\Menu\Twig\Helper" public="false">
      <argument type="service" id="knp_menu.renderer_provider"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="knp_menu.manipulator"/>
      <argument type="service" id="knp_menu.matcher"/>
    </service>
    <service id="knp_menu.matcher" class="Knp\Menu\Matcher\Matcher" public="true">
      <argument type="iterator">
        <argument type="service" id="knp_menu.voter.router"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.chain" class="Knp\Menu\Provider\ChainProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="knp_menu.menu_provider.lazy"/>
        <argument type="service" id="knp_menu.menu_provider.builder_alias"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.lazy" class="Knp\Menu\Provider\LazyProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="collection">
        <argument key="admin_menu" type="collection">
          <argument type="service" id="Bolt\Menu\StopwatchBackendMenuBuilder"/>
          <argument>createAdminMenu</argument>
        </argument>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.builder_alias" class="Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="knp_menu.renderer_provider" class="Knp\Menu\Renderer\PsrProvider">
      <argument type="service" id=".service_locator.lHZYdJL"/>
      <argument>twig</argument>
      <argument type="collection"/>
      <argument>false</argument>
    </service>
    <service id="knp_menu.renderer.list" class="Knp\Menu\Renderer\ListRenderer">
      <tag name="knp_menu.renderer" alias="list"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
      <argument>UTF-8</argument>
    </service>
    <service id="knp_menu.voter.router" class="Knp\Menu\Matcher\Voter\RouteVoter">
      <tag name="knp_menu.voter"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="knp_menu.manipulator" class="Knp\Menu\Util\MenuManipulator" public="false"/>
    <service id="knp_menu.twig.extension" class="Knp\Menu\Twig\MenuExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="knp_menu.helper"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="service" id="knp_menu.manipulator"/>
    </service>
    <service id="knp_menu.renderer.twig" class="Knp\Menu\Renderer\TwigRenderer">
      <tag name="knp_menu.renderer" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>@KnpMenu/menu.html.twig</argument>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
    </service>
    <service id="Knp\DoctrineBehaviors\EventSubscriber\BlameableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\BlameableSubscriber" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="Knp\DoctrineBehaviors\Provider\UserProvider"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Knp\DoctrineBehaviors\EventSubscriber\LoggableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\LoggableSubscriber" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Knp\DoctrineBehaviors\EventSubscriber\SluggableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\SluggableSubscriber" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Knp\DoctrineBehaviors\Repository\DefaultSluggableRepository"/>
    </service>
    <service id="Knp\DoctrineBehaviors\EventSubscriber\SoftDeletableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\SoftDeletableSubscriber" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber"/>
    </service>
    <service id="Knp\DoctrineBehaviors\EventSubscriber\TimestampableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\TimestampableSubscriber" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber"/>
      <argument>datetime</argument>
    </service>
    <service id="Knp\DoctrineBehaviors\EventSubscriber\TranslatableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\TranslatableSubscriber" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="Knp\DoctrineBehaviors\Provider\LocaleProvider"/>
      <argument>LAZY</argument>
      <argument>LAZY</argument>
    </service>
    <service id="Knp\DoctrineBehaviors\EventSubscriber\TreeSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\TreeSubscriber" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber"/>
    </service>
    <service id="Knp\DoctrineBehaviors\EventSubscriber\UuidableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\UuidableSubscriber" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber"/>
    </service>
    <service id="Knp\DoctrineBehaviors\Provider\LocaleProvider" class="Knp\DoctrineBehaviors\Provider\LocaleProvider" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="parameter_bag"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="Knp\DoctrineBehaviors\Provider\UserProvider" class="Knp\DoctrineBehaviors\Provider\UserProvider" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="security.helper"/>
    </service>
    <service id="Knp\DoctrineBehaviors\Repository\DefaultSluggableRepository" class="Knp\DoctrineBehaviors\Repository\DefaultSluggableRepository" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="nelmio_cors.cors_listener" class="Nelmio\CorsBundle\EventListener\CorsListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="250"/>
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="0"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="nelmio_cors.options_resolver"/>
    </service>
    <service id="nelmio_cors.options_resolver" class="Nelmio\CorsBundle\Options\Resolver" public="false">
      <argument type="collection">
        <argument type="service" id="nelmio_cors.options_provider.config"/>
      </argument>
    </service>
    <service id="nelmio_cors.options_provider.config" class="Nelmio\CorsBundle\Options\ConfigProvider">
      <tag name="nelmio_cors.options_provider" priority="-1"/>
      <argument>%nelmio_cors.map%</argument>
      <argument>%nelmio_cors.defaults%</argument>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.C2Thyvr.sensio_framework_extra.view.listener"/>
      </call>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage">
      <call method="registerProvider">
        <argument type="service" id="api_platform.security.expression_language_provider"/>
      </call>
    </service>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id=".6_HtmlDescriptor~AxA97HA" class="Symfony\Component\VarDumper\Command\Descriptor\HtmlDescriptor" public="false">
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id=".5_CliDescriptor~AxA97HA" class="Symfony\Component\VarDumper\Command\Descriptor\CliDescriptor" public="false">
      <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
    </service>
    <service id=".4_CliContextProvider~AxA97HA" class="Symfony\Component\VarDumper\Dumper\ContextProvider\CliContextProvider" public="false"/>
    <service id=".3_RequestContextProvider~AxA97HA" class="Symfony\Component\VarDumper\Dumper\ContextProvider\RequestContextProvider" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".2_SourceContextProvider~AxA97HA" class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider" public="false">
      <argument>UTF-8</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
    </service>
    <service id=".1_SourceContextProvider~AxA97HA" class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider" public="false">
      <argument>UTF-8</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
    </service>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector" public="true">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.contextualized_cli_dumper"/>
      <argument>null</argument>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner" public="true">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMinDepth">
        <argument>1</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
      <call method="addCasters">
        <argument type="collection">
          <argument key="Closure">Symfony\Component\VarDumper\Caster\ReflectionCaster::unsetClosureFileInfo</argument>
        </argument>
      </call>
    </service>
    <service id="var_dumper.contextualized_cli_dumper" class="Symfony\Component\VarDumper\Dumper\ContextualizedDumper" public="false">
      <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
      <argument type="collection">
        <argument key="source" type="service" id=".1_SourceContextProvider~AxA97HA"/>
      </argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="var_dumper.server_connection" class="Symfony\Component\VarDumper\Server\Connection" public="false">
      <argument></argument>
      <argument type="collection">
        <argument key="source" type="service" id=".2_SourceContextProvider~AxA97HA"/>
        <argument key="request" type="service" id=".3_RequestContextProvider~AxA97HA"/>
        <argument key="cli" type="service" id=".4_CliContextProvider~AxA97HA"/>
      </argument>
    </service>
    <service id="var_dumper.dump_server" class="Symfony\Component\VarDumper\Server\DumpServer" public="false">
      <tag name="monolog.logger" channel="debug"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.debug" on-invalid="null"/>
    </service>
    <service id="var_dumper.command.server_dump" class="Symfony\Bundle\DebugBundle\Command\ServerDumpPlaceholderCommand" public="false">
      <tag name="console.command" command="server:dump"/>
      <argument type="service" id="var_dumper.dump_server"/>
      <argument type="collection">
        <argument key="cli" type="service" id=".5_CliDescriptor~AxA97HA"/>
        <argument key="html" type="service" id=".6_HtmlDescriptor~AxA97HA"/>
      </argument>
      <call method="setName">
        <argument>server:dump</argument>
      </call>
    </service>
    <service id="monolog.command.server_log" class="Symfony\Bridge\Monolog\Command\ServerLogCommand" public="false">
      <tag name="console.command" command="server:log"/>
      <call method="setName">
        <argument>server:log</argument>
      </call>
    </service>
    <service id=".legacy_controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
      <argument>false</argument>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id=".legacy_resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
      <argument>false</argument>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>Bolt\Controller\ErrorController::showAction</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <argument>Bolt\Controller\ErrorController::showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/srcApp_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources</argument>
      <argument type="collection">
        <argument>/Users/martinbetz/Sites/martin-bolt/src</argument>
      </argument>
      <argument>false</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.identifiers_extractor" type="service" id="api_platform.cache.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.subresource_operation_factory" type="service" id="api_platform.cache.subresource_operation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.console" type="service" id="monolog.handler.console" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="webpack_encore.tag_renderer" type="service" id="webpack_encore.tag_renderer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.webpack_encore" type="service" id="cache.webpack_encore" on-invalid="ignore_uninitialized"/>
        <argument key="webpack_encore.entrypoint_lookup[_default]" type="service" id="webpack_encore.entrypoint_lookup[_default]" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="api_platform.cache.route_name_resolver" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.identifiers_extractor" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.subresource_operation_factory" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.resource" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.property" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="profiler" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.console" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="webpack_encore.tag_renderer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.webpack_encore" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="webpack_encore.entrypoint_lookup[_default]" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.wnlveDj"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="translator.default"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor" public="false">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator.amnwoiW"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="esi"/>
      <argument type="service" id="esi" on-invalid="null"/>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id=".2_~RquFk1j" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
    </service>
    <service id=".1_~RquFk1j" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service" id=".1_~RquFk1j"/>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <argument type="service" id=".2_~RquFk1j"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand" public="false">
      <tag name="console.command" command="cache:pool:list"/>
      <argument type="collection">
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.identifiers_extractor</argument>
        <argument>api_platform.cache.subresource_operation_factory</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.metadata.property</argument>
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.webpack_encore</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand" public="false">
      <tag name="console.command" command="lint:container"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/Users/martinbetz/Sites/martin-bolt/translations</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates</argument>
      <argument type="collection">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/translations</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates/</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/translations</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates</argument>
      <argument type="collection">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/translations</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates/</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>Bolt\Form</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>Bolt\Form\UserType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand" public="false">
      <tag name="console.command" command="secrets:set"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand" public="false">
      <tag name="console.command" command="secrets:remove"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand" public="false">
      <tag name="console.command" command="secrets:generate-keys"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand" public="false">
      <tag name="console.command" command="secrets:list"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand" public="false">
      <tag name="console.command" command="secrets:decrypt-to-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand" public="false">
      <tag name="console.command" command="secrets:encrypt-from-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.app.simple" class="Symfony\Component\Cache\Psr16Cache" public="false">
      <argument type="service" id="cache.app"/>
      <deprecated>The "Psr\SimpleCache\CacheInterface" / "%service_id%" service is deprecated since Symfony 4.3. Use "Symfony\Contracts\Cache\CacheInterface" / "cache.app" instead.</deprecated>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.property_info.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller" public="false">
      <argument>null</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.identifiers_extractor" type="service" id="api_platform.cache.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.subresource_operation_factory" type="service" id="api_platform.cache.subresource_operation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.webpack_encore" type="service" id="cache.webpack_encore" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.identifiers_extractor" type="service" id="api_platform.cache.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.subresource_operation_factory" type="service" id="api_platform.cache.subresource_operation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.metadata" type="service" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.webpack_encore" type="service" id="cache.webpack_encore" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator" public="false"/>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2, use "identity_translator" instead.</deprecated>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id=".1_NativeFileSessionHandler~N1fG47M" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false">
      <factory service="session" method="getFlashBag"/>
    </service>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false">
      <argument>attributes</argument>
      <factory service="session" method="getBag"/>
    </service>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~N1fG47M"/>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler" public="false">
      <argument></argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.f1ancQ8"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1. Use the "session_listener" service instead.</deprecated>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy" public="false">
      <argument type="service" id=".1_ResolvedFormTypeFactory~kWxfjfb"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry" public="false">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
      <argument type="service" id=".service_locator.PTg4IeN"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="form.type_extension.form.data_collector"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.doctrine"/>
        <argument type="service" id="form.type_guesser.validator"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser" public="false">
      <tag name="form.type_guesser"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension" public="false">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages" public="false">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext" public="false">
      <argument type="service" id="request_stack"/>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._version__default" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false">
      <argument>/Users/martinbetz/Sites/martin-bolt/public/assets/manifest.json</argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets._version__default"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="mailer.mailer" class="Symfony\Component\Mailer\Mailer">
      <argument type="service" id="mailer.transports"/>
      <argument>null</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="mailer.transports" class="Symfony\Component\Mailer\Transport\Transports">
      <argument type="collection">
        <argument key="main">%env(MAILER_DSN)%</argument>
      </argument>
      <factory service="mailer.transport_factory" method="fromStrings"/>
    </service>
    <service id="mailer.transport_factory" class="Symfony\Component\Mailer\Transport">
      <argument type="tagged_iterator" tag="mailer.transport_factory"/>
    </service>
    <service id="mailer.default_transport" class="Symfony\Component\Mailer\Transport\TransportInterface">
      <argument>%env(MAILER_DSN)%</argument>
      <factory service="mailer.transport_factory" method="fromString"/>
    </service>
    <service id="mailer.messenger.message_handler" class="Symfony\Component\Mailer\Messenger\MessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="mailer.transports"/>
    </service>
    <service id="mailer.envelope_listener" class="Symfony\Component\Mailer\EventListener\EnvelopeListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="mailer.logger_message_listener" class="Symfony\Component\Mailer\EventListener\MessageLoggerListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="mailer.transport_factory.abstract" class="Symfony\Component\Mailer\Transport\AbstractTransportFactory" abstract="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.null" class="Symfony\Component\Mailer\Transport\NullTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.sendmail" class="Symfony\Component\Mailer\Transport\SendmailTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.smtp" class="Symfony\Component\Mailer\Transport\Smtp\EsmtpTransportFactory">
      <tag name="mailer.transport_factory" priority="-100"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder" public="false">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service">
          <service class="Symfony\Component\Validator\Util\LegacyTranslatorProxy">
            <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="addYamlMappings">
        <argument type="collection">
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/php-translation/symfony-bundle/Resources/config/validation.yaml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache" public="false">
      <argument type="service" id="validator.mapping.cache.adapter"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4. Use validator.mapping.cache.adapter instead.</deprecated>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id=".service_locator.Y7gDuDN"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator" public="false">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator"/>
      <argument type="service" id=".debug.http_client" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader" public="false">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="esi" class="Symfony\Component\HttpKernel\HttpCache\Esi" public="false"/>
    <service id="esi_listener" class="Symfony\Component\HttpKernel\EventListener\SurrogateListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="esi" on-invalid="ignore"/>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator" public="false">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.V.o0zE7"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/martinbetz/Sites/martin-bolt/var/cache/dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.ar.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.ar.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.ar.xliff</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.az.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.az.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.az.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.az.xliff</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.be.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.be.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.bg.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.bg.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.ca.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.ca.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.ca.xliff</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.cs.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.cs.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.cs.xliff</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.da.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.da.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.da.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.da.xliff</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.de.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.de.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.de.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.de.xliff</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/messages.de.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/validators.de.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.el.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.el.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.en.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.en.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.en.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.en.xliff</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/messages.en.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/security.en.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/validators.en.xlf</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.es.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.es.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.es.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.es.xliff</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/messages.es.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/validators.es.xlf</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.et.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.eu.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.fa.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.fa.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.fa.xliff</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.fi.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.fi.xliff</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.fr.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.fr.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.fr.xliff</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/messages.fr.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/validators.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.gl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.gl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.gl.xliff</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.he.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.he.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.hr.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.hr.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.hr.xliff</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.hu.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.hu.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/messages.hu.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/security.hu.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/validators.hu.xlf</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.id.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.id.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.it.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.it.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.it.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.it.xliff</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/messages.it.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/validators.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.ja.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.lb.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.lt.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.lt.xlf</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.lv.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.nb.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.nl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.nl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.nl.xliff</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/messages.nl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/security.nl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/validators.nl.xlf</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.nn.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.no.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.no.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.no.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.no.xliff</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.pl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.pl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.pl.xliff</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/messages.pl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/validators.pl.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.pt.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.pt.xliff</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.pt_BR.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/messages.pt_BR.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations/validators.pt_BR.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.ro.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.ro.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.ro.xliff</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.ru.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.ru.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.ru.xliff</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.sk.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.sk.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.sk.xliff</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.sl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.sl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.sl.xliff</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.sr_Cyrl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.sr_Cyrl.xliff</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.sr_Latn.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.sr_Latn.xliff</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.sv.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.sv.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.sv.xliff</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.th.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.th.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.th.xliff</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.tl.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.tr.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.tr.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.tr.xliff</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.uk.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.uk.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.uk.xliff</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.vi.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.zh_CN.xlf</argument>
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.zh_CN.xliff</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations/security.pt_PT.xlf</argument>
          </argument>
          <argument key="oc" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.oc.xliff</argument>
          </argument>
          <argument key="sw" type="collection">
            <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations/pagerfanta.sw.xliff</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/validator/Resources/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/form/Resources/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-core/Resources/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/api-platform/core/src/Bridge/Symfony/Bundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/ApiPlatformBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/doctrine/doctrine-bundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/DoctrineBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/doctrine/doctrine-fixtures-bundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/DoctrineFixturesBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/knplabs/knp-menu-bundle/src/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/KnpMenuBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/knplabs/doctrine-behaviors/src/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/DoctrineBehaviorsBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/nelmio/cors-bundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/NelmioCorsBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/sensio/framework-extra-bundle/src/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/SensioFrameworkExtraBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/debug-bundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/DebugBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/framework-bundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/FrameworkBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/maker-bundle/src/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/MakerBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/monolog-bundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/MonologBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-bundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/SecurityBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/twig-bundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/TwigBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/web-profiler-bundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/WebProfilerBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/web-server-bundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/WebServerBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/webpack-encore-bundle/src/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/WebpackEncoreBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/php-translation/symfony-bundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/TranslationBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/BabDevPagerfantaBundle/translations</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src/Resources/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>vendor/symfony/validator/Resources/translations</argument>
            <argument>vendor/symfony/form/Resources/translations</argument>
            <argument>vendor/symfony/security-core/Resources/translations</argument>
            <argument>vendor/babdev/pagerfanta-bundle/Resources/translations</argument>
            <argument>translations</argument>
            <argument>vendor/bolt/core/translations</argument>
            <argument>translations</argument>
            <argument>vendor/api-platform/core/src/Bridge/Symfony/Bundle/translations</argument>
            <argument>src/Resources/ApiPlatformBundle/translations</argument>
            <argument>vendor/doctrine/doctrine-bundle/translations</argument>
            <argument>src/Resources/DoctrineBundle/translations</argument>
            <argument>vendor/doctrine/doctrine-fixtures-bundle/translations</argument>
            <argument>src/Resources/DoctrineFixturesBundle/translations</argument>
            <argument>vendor/knplabs/knp-menu-bundle/src/translations</argument>
            <argument>src/Resources/KnpMenuBundle/translations</argument>
            <argument>vendor/knplabs/doctrine-behaviors/src/translations</argument>
            <argument>src/Resources/DoctrineBehaviorsBundle/translations</argument>
            <argument>vendor/nelmio/cors-bundle/translations</argument>
            <argument>src/Resources/NelmioCorsBundle/translations</argument>
            <argument>vendor/sensio/framework-extra-bundle/src/translations</argument>
            <argument>src/Resources/SensioFrameworkExtraBundle/translations</argument>
            <argument>vendor/symfony/debug-bundle/translations</argument>
            <argument>src/Resources/DebugBundle/translations</argument>
            <argument>vendor/symfony/framework-bundle/translations</argument>
            <argument>src/Resources/FrameworkBundle/translations</argument>
            <argument>vendor/symfony/maker-bundle/src/translations</argument>
            <argument>src/Resources/MakerBundle/translations</argument>
            <argument>vendor/symfony/monolog-bundle/translations</argument>
            <argument>src/Resources/MonologBundle/translations</argument>
            <argument>vendor/symfony/security-bundle/translations</argument>
            <argument>src/Resources/SecurityBundle/translations</argument>
            <argument>vendor/symfony/twig-bundle/translations</argument>
            <argument>src/Resources/TwigBundle/translations</argument>
            <argument>vendor/symfony/web-profiler-bundle/translations</argument>
            <argument>src/Resources/WebProfilerBundle/translations</argument>
            <argument>vendor/symfony/web-server-bundle/translations</argument>
            <argument>src/Resources/WebServerBundle/translations</argument>
            <argument>vendor/symfony/webpack-encore-bundle/src/translations</argument>
            <argument>src/Resources/WebpackEncoreBundle/translations</argument>
            <argument>vendor/php-translation/symfony-bundle/translations</argument>
            <argument>src/Resources/TranslationBundle/translations</argument>
            <argument>src/Resources/BabDevPagerfantaBundle/translations</argument>
            <argument>src/Resources/translations</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader" public="false">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader" public="false">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader" public="false">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader" public="false">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader" public="false">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader" public="false">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader" public="false">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader" public="false">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader" public="false">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader" public="false">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader" public="false">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper" public="false">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper" public="false">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper" public="false">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper" public="false">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper" public="false">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper" public="false">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper" public="false">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper" public="false">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper" public="false">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor" public="false">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader" public="false">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor" public="false">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter" public="false">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.XSes1R5.translation.warmer"/>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <argument>true</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="api_platform.data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.http_client"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service" id="php_translation.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="mailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
      <argument>file:/Users/martinbetz/Sites/martin-bolt/var/cache/dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/srcApp_KernelDevDebugContainer</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector" public="false">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument type="service" id="api_platform.cache.route_name_resolver"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.identifiers_extractor</argument>
        <argument type="service" id="api_platform.cache.identifiers_extractor"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.subresource_operation_factory</argument>
        <argument type="service" id="api_platform.cache.subresource_operation_factory"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.metadata.resource</argument>
        <argument type="service" id="api_platform.cache.metadata.resource"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.metadata.property</argument>
        <argument type="service" id="api_platform.cache.metadata.property"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.result</argument>
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.query</argument>
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
      <call method="addInstance">
        <argument>cache.property_info</argument>
        <argument type="service" id="cache.property_info"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_expression_language</argument>
        <argument type="service" id="cache.security_expression_language"/>
      </call>
      <call method="addInstance">
        <argument>cache.webpack_encore</argument>
        <argument type="service" id="cache.webpack_encore"/>
      </call>
    </service>
    <service id=".1_ResolvedFormTypeFactory~kWxfjfb" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor" public="false"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="translator.data_collector" class="Symfony\Component\Translation\DataCollectorTranslator" public="false">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="mailer.data_collector" class="Symfony\Component\Mailer\DataCollector\MessageDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/mailer.html.twig" id="mailer"/>
      <argument type="service" id="mailer.logger_message_listener"/>
    </service>
    <service id="data_collector.http_client" class="Symfony\Component\HttpClient\DataCollector\HttpClientDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/http_client.html.twig" id="http_client" priority="250"/>
      <call method="registerClient">
        <argument>http_client</argument>
        <argument type="service" id=".debug.http_client"/>
      </call>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>phpstorm://open?file=%%f&amp;line=%%l</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <argument type="service" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher" public="false">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.request.add_format"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>7</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.request.read"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>4</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.write"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.request.deserialize"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>2</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.serialize"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.respond"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.exception.validation"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.exception"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-96</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.swagger.listener.ui"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.jsonapi.listener.request.transform_pagination_parameters"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.jsonapi.listener.request.transform_sorting_parameters"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.jsonapi.listener.request.transform_fieldsets_parameters"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.jsonapi.listener.request.transform_filtering_parameters"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.hydra.listener.response.add_link_header"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.http_cache.listener.response.configure"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.validate"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.validate_query_parameters"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.security.listener.request.deny_access"/>
          <argument>onSecurity</argument>
        </argument>
        <argument>3</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.security.listener.request.deny_access"/>
          <argument>onSecurityPostDenormalize</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_cors.cors_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>250</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_cors.cors_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="webpack_encore.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="pagerfanta.event_listener.convert_not_valid_max_per_page_to_not_found"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="pagerfanta.event_listener.convert_not_valid_current_page_to_not_found"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>bolt.post_save</argument>
        <argument type="collection">
          <argument type="service" id="Bolt\Event\Subscriber\ContentSaveSubscriber"/>
          <argument>postSave</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="Bolt\Event\Subscriber\ExtensionSubscriber"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="Bolt\Event\Subscriber\ExtensionSubscriber"/>
          <argument>onConsoleResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Bolt\Event\Subscriber\LocaleSubscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>20</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="Bolt\Event\Subscriber\MaintenanceModeSubscriber"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="Bolt\Event\Subscriber\ProcessWidgetsQueueSubscriber"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Bolt\Event\Subscriber\TimedPublishSubscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>30</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service" id="Bolt\Event\Subscriber\UserLocaleSubscriber"/>
          <argument>onInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Bolt\Event\Subscriber\WidgetSubscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Bolt\Event\Subscriber\ZoneSubscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>31</argument>
      </call>
      <call method="addListener">
        <argument>boltforms.post_submit</argument>
        <argument type="collection">
          <argument type="service" id="Bolt\BoltForms\EventSubscriber\HoneypotSubscriber"/>
          <argument>handleEvent</argument>
        </argument>
        <argument>20</argument>
      </call>
      <call method="addListener">
        <argument>boltforms.post_submit</argument>
        <argument type="collection">
          <argument type="service" id="Bolt\BoltForms\EventSubscriber\Logger"/>
          <argument>handleEvent</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>boltforms.post_submit</argument>
        <argument type="collection">
          <argument type="service" id="Bolt\BoltForms\EventSubscriber\Mailer"/>
          <argument>handleEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id=".legacy_resolve_controller_name_subscriber"/>
          <argument>resolveControllerName</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service" id="mailer.envelope_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service" id="mailer.logger_message_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="esi_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fragment.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>48</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="maker.console_error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="maker.console_error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service" id="twig.mailer.message_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver" public="false">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".1_LegacyRouteLoaderContainer~G.k3hj5" class="Symfony\Bundle\FrameworkBundle\Routing\LegacyRouteLoaderContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XwZNkPh"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="Bolt\Extension\RoutesLoader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="api_platform.route_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <argument type="service" id="service_container"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4, use "routing.loader.container" instead.</deprecated>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id=".1_LegacyRouteLoaderContainer~G.k3hj5"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.2blTWLX.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/martinbetz/Sites/martin-bolt/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.m90YCjy.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id=".2_PhpArrayAdapter~OIcChBr" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id=".1_ArrayCache~OIcChBr" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id=".1_ArrayCache~OIcChBr"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id=".2_PhpArrayAdapter~OIcChBr"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/Users/martinbetz/Sites/martin-bolt/config/secrets/dev</argument>
      <argument>%env(base64:default::SYMFONY_DECRYPTION_SECRET)%</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/Users/martinbetz/Sites/martin-bolt/.env.dev.local</argument>
    </service>
    <service id=".2_~cE7n8xU" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id=".1_~cE7n8xU" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <argument type="collection">
        <argument type="service" id="api_platform.serializer.uuid_denormalizer"/>
        <argument type="service" id="api_platform.swagger.normalizer.api_gateway"/>
        <argument type="service" id="api_platform.jsonapi.normalizer.constraint_violation_list"/>
        <argument type="service" id="api_platform.hydra.normalizer.constraint_violation_list"/>
        <argument type="service" id="api_platform.problem.normalizer.constraint_violation_list"/>
        <argument type="service" id="api_platform.swagger.normalizer.api_gateway"/>
        <argument type="service" id="api_platform.jsonapi.normalizer.error"/>
        <argument type="service" id="api_platform.jsonapi.normalizer.entrypoint"/>
        <argument type="service" id="api_platform.hydra.normalizer.documentation"/>
        <argument type="service" id="api_platform.hydra.normalizer.entrypoint"/>
        <argument type="service" id="api_platform.hydra.normalizer.error"/>
        <argument type="service" id="api_platform.problem.normalizer.error"/>
        <argument type="service" id="api_platform.jsonapi.normalizer.item"/>
        <argument type="service" id="api_platform.jsonld.normalizer.item"/>
        <argument type="service" id="api_platform.graphql.normalizer.item"/>
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="api_platform.serializer.normalizer.item"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="api_platform.jsonapi.normalizer.collection"/>
        <argument type="service" id="api_platform.hydra.normalizer.collection_filters"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="api_platform.jsonapi.normalizer.object"/>
        <argument type="service" id="api_platform.jsonld.normalizer.object"/>
        <argument type="service" id="api_platform.graphql.normalizer.object"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="api_platform.jsonapi.encoder"/>
        <argument type="service" id="api_platform.jsonld.encoder"/>
        <argument type="service" id="api_platform.problem.encoder"/>
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-900"/>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument>true</argument>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer" public="false">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory" public="false">
      <argument type="service" id="serializer.mapping.chain_loader"/>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface" public="false">
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter" public="false"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" public="false">
      <argument type="service" id="serializer"/>
      <argument type="service" id=".1_~cE7n8xU"/>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service" id=".2_~cE7n8xU"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor" public="false">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes" public="false">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="maker.file_manager" class="Symfony\Bundle\MakerBundle\FileManager" public="false">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="maker.autoloader_util"/>
      <argument type="service" id="maker.file_link_formatter"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates</argument>
    </service>
    <service id="maker.autoloader_finder" class="Symfony\Bundle\MakerBundle\Util\ComposerAutoloaderFinder" public="false">
      <argument>App</argument>
    </service>
    <service id="maker.autoloader_util" class="Symfony\Bundle\MakerBundle\Util\AutoloaderUtil" public="false">
      <argument type="service" id="maker.autoloader_finder"/>
    </service>
    <service id="maker.file_link_formatter" class="Symfony\Bundle\MakerBundle\Util\MakerFileLinkFormatter" public="false">
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
    </service>
    <service id="maker.event_registry" class="Symfony\Bundle\MakerBundle\EventRegistry" public="false">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="maker.console_error_listener" class="Symfony\Bundle\MakerBundle\Event\ConsoleErrorSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="maker.doctrine_helper" class="Symfony\Bundle\MakerBundle\Doctrine\DoctrineHelper" public="false">
      <argument>App\Entity</argument>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="maker.auto_command.abstract" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false" abstract="true">
      <argument></argument>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.generator" class="Symfony\Bundle\MakerBundle\Generator" public="false">
      <argument type="service" id="maker.file_manager"/>
      <argument>App</argument>
    </service>
    <service id="maker.entity_class_generator" class="Symfony\Bundle\MakerBundle\Doctrine\EntityClassGenerator" public="false">
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <call method="setMangerRegistryClassName">
        <argument>Doctrine\Persistence\ManagerRegistry</argument>
      </call>
    </service>
    <service id="maker.user_class_builder" class="Symfony\Bundle\MakerBundle\Security\UserClassBuilder" public="false"/>
    <service id="maker.security_config_updater" class="Symfony\Bundle\MakerBundle\Security\SecurityConfigUpdater" public="false"/>
    <service id="maker.renderer.form_type_renderer" class="Symfony\Bundle\MakerBundle\Renderer\FormTypeRenderer" public="false">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.maker.make_authenticator" class="Symfony\Bundle\MakerBundle\Maker\MakeAuthenticator" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.maker.make_command" class="Symfony\Bundle\MakerBundle\Maker\MakeCommand" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeController" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_crud" class="Symfony\Bundle\MakerBundle\Maker\MakeCrud" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_entity" class="Symfony\Bundle\MakerBundle\Maker\MakeEntity" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_fixtures" class="Symfony\Bundle\MakerBundle\Maker\MakeFixtures" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form" class="Symfony\Bundle\MakerBundle\Maker\MakeForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_functional_test" class="Symfony\Bundle\MakerBundle\Maker\MakeFunctionalTest" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_message" class="Symfony\Bundle\MakerBundle\Maker\MakeMessage" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Maker\MakeMessengerMiddleware" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_registration_form" class="Symfony\Bundle\MakerBundle\Maker\MakeRegistrationForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="maker.maker.make_reset_password" class="Symfony\Bundle\MakerBundle\Maker\MakeResetPassword" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerEncoder" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerNormalizer" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_subscriber" class="Symfony\Bundle\MakerBundle\Maker\MakeSubscriber" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.event_registry"/>
    </service>
    <service id="maker.maker.make_twig_extension" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigExtension" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_unit_test" class="Symfony\Bundle\MakerBundle\Maker\MakeUnitTest" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_validator" class="Symfony\Bundle\MakerBundle\Maker\MakeValidator" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_voter" class="Symfony\Bundle\MakerBundle\Maker\MakeVoter" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_user" class="Symfony\Bundle\MakerBundle\Maker\MakeUser" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.user_class_builder"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_migration" class="Symfony\Bundle\MakerBundle\Maker\MakeMigration" public="false">
      <tag name="maker.command"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/log/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage" public="true">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.XjnY8xG"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="false"/>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id=".service_locator.6zQlgQt"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.guard.main"/>
        <argument type="service" id="security.authentication.provider.rememberme.main"/>
        <argument type="service" id="security.authentication.provider.anonymous.main"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="Bolt\Entity\User" type="collection">
          <argument key="algorithm">auto</argument>
          <argument key="migrate_from" type="collection"/>
          <argument key="hash_algorithm">sha512</argument>
          <argument key="key_length">40</argument>
          <argument key="ignore_case">false</argument>
          <argument key="encode_as_base64">true</argument>
          <argument key="iterations">5000</argument>
          <argument key="cost">null</argument>
          <argument key="memory_cost">null</argument>
          <argument key="time_cost">null</argument>
          <argument key="threads">null</argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false">
      <argument type="service" id="cache.security_expression_language"/>
      <call method="registerProvider">
        <argument type="service" id="api_platform.security.expression_language_provider"/>
      </call>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id=".service_locator.iuGr.fa"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.main" type="service" id=".security.request_matcher.3UEFixr"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage"/>
      <call method="registerListener">
        <argument>main</argument>
        <argument>bolt_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.in_memory.user" class="Symfony\Component\Security\Core\User\User" public="false" abstract="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1.</deprecated>
    </service>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>null</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_expression_language.recorder_inner"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id=".security.request_matcher.oJ0laZp"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.Z7oNkUd"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.Fowksh8"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.database_users"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_form" class="Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.simple_success_failure_handler" class="Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.simple_preauth" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.provider.simple" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>null</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.user.provider.concrete.database_users" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false">
      <argument type="service" id="doctrine"/>
      <argument>Bolt\Entity\User</argument>
      <argument>username</argument>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>main</argument>
      <argument>Bolt\Security\UserChecker</argument>
      <argument>.security.request_matcher.3UEFixr</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.database_users</argument>
      <argument>main</argument>
      <argument>Bolt\Security\LoginFormAuthenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>guard</argument>
        <argument>remember_me</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.3UEFixr" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="none"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.database_users"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
      <call method="setRememberMeServices">
        <argument type="service" id="security.authentication.rememberme.services.simplehash.main"/>
      </call>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.main"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">bolt_logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
      <call method="addHandler">
        <argument type="service" id="Bolt\Security\LogoutListener"/>
      </call>
      <call method="addHandler">
        <argument type="service" id="security.authentication.rememberme.services.simplehash.main"/>
      </call>
    </service>
    <service id="security.logout.success_handler.main" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>bolt_login</argument>
    </service>
    <service id="security.authentication.provider.guard.main" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="Bolt\Security\LoginFormAuthenticator"/>
      </argument>
      <argument type="service" id="security.user.provider.concrete.database_users"/>
      <argument>main</argument>
      <argument type="service" id="Bolt\Security\UserChecker"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard.main" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="security.user.provider.concrete.database_users"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>main</argument>
      <argument type="iterator">
        <argument type="service" id="Bolt\Security\LoginFormAuthenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setRememberMeServices">
        <argument type="service" id="security.authentication.rememberme.services.simplehash.main"/>
      </call>
    </service>
    <service id="security.authentication.provider.rememberme.main" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false">
      <argument type="service" id="Bolt\Security\UserChecker"/>
      <argument>%env(APP_SECRET)%</argument>
      <argument>main</argument>
    </service>
    <service id="security.authentication.rememberme.services.simplehash.main" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false">
      <argument type="collection">
        <argument type="service" id="security.user.provider.concrete.database_users"/>
      </argument>
      <argument>%env(APP_SECRET)%</argument>
      <argument>main</argument>
      <argument type="collection">
        <argument key="lifetime">2592000</argument>
        <argument key="name">REMEMBERME</argument>
        <argument key="path">/</argument>
        <argument key="domain">null</argument>
        <argument key="secure">false</argument>
        <argument key="httponly">true</argument>
        <argument key="samesite">null</argument>
        <argument key="always_remember_me">false</argument>
        <argument key="remember_me_parameter">_remember_me</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.rememberme.main" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme.services.simplehash.main"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>true</argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.listener.anonymous.main" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.main" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="Bolt\Security\LoginFormAuthenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.guard.main"/>
        <argument type="service" id="security.authentication.listener.rememberme.main"/>
        <argument type="service" id="security.authentication.listener.anonymous.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.logout_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
    </service>
    <service id=".service_locator.iuGr.fa" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.firewall.map.context.main"/>
      </argument>
    </service>
    <service id=".security.request_matcher.oJ0laZp" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/bolt/(login|resetpassword)$</argument>
    </service>
    <service id=".security.request_matcher.Z7oNkUd" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/bolt</argument>
    </service>
    <service id=".security.request_matcher.Fowksh8" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(en|nl|es|fr|de|pl|it|hu|pt_BR|ja|nb|nn|nl_NL|nl_BE|is|ru)/bolt</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>Bolt\Entity\User</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id=".1_~DA8hae3" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/Users/martinbetz/Sites/martin-bolt/var/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\ArrayExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\BackendMenuExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\ContentExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\DebugExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\DumpExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\FieldExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\FrontendMenuExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\HtmlExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\ImageExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\JsonExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\LocaleExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\RelatedExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\SetcontentExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\TextExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\TranslatableExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\UserExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\Twig\WidgetExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Squirrel\TwigPhpSyntax\PhpSyntaxExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Twig\Extension\StringLoaderExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bolt\BoltForms\TwigExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Bobdenotter\RssExtension\Twig"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="knp_menu.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="webpack_encore.twig_entry_files_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Translation\Bundle\Twig\TranslationExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="pagerfanta.twig_extension"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="addGlobal">
        <argument>config</argument>
        <argument type="service" id="Bolt\Configuration\Config"/>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/Users/martinbetz/Sites/martin-bolt/src</argument>
      <argument type="collection">
        <argument key="/Users/martinbetz/Sites/martin-bolt/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views">null</argument>
        <argument key="/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates/">bolt</argument>
        <argument key="/Users/martinbetz/Sites/martin-bolt/vendor/symfony/twig-bridge/Resources/views/Email">email</argument>
        <argument key="/Users/martinbetz/Sites/martin-bolt/vendor/symfony/twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.o9nGMXB.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Symfony\Bundle\TwigBundle\Loader\NativeFilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates/</argument>
        <argument>bolt</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates/bundles/ApiPlatformBundle</argument>
        <argument>ApiPlatform</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/api-platform/core/src/Bridge/Symfony/Bundle/Resources/views</argument>
        <argument>ApiPlatform</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/api-platform/core/src/Bridge/Symfony/Bundle/Resources/views</argument>
        <argument>!ApiPlatform</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/knplabs/knp-menu-bundle/src/Resources/views</argument>
        <argument>KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/knplabs/knp-menu-bundle/src/Resources/views</argument>
        <argument>!KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/framework-bundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/framework-bundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/twig-bundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/twig-bundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates/bundles/TranslationBundle</argument>
        <argument>Translation</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/php-translation/symfony-bundle/Resources/views</argument>
        <argument>Translation</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/php-translation/symfony-bundle/Resources/views</argument>
        <argument>!Translation</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/views</argument>
        <argument>BabDevPagerfanta</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/babdev/pagerfanta-bundle/Resources/views</argument>
        <argument>!BabDevPagerfanta</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>email</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>!email</argument>
      </call>
      <call method="addPath">
        <argument>/Users/martinbetz/Sites/martin-bolt/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile" public="false"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false"/>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor" public="false">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="twig"/>
      <argument>true</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4.</deprecated>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>null</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4.</deprecated>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id=".service_locator.DJ2HLGf"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id=".1_~DA8hae3"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/Users/martinbetz/Sites/martin-bolt/src</argument>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id="twig.mailer.message_listener" class="Symfony\Component\Mailer\EventListener\MessageListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service" id="twig.mime_body_renderer"/>
    </service>
    <service id="twig.mime_body_renderer" class="Symfony\Bridge\Twig\Mime\BodyRenderer">
      <argument type="service" id="twig"/>
    </service>
    <service id=".2_HtmlDumper~EsmtEye" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>1</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="maxStringLength">4096</argument>
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
        </argument>
      </call>
    </service>
    <service id=".1_NonceGenerator~EsmtEye" class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4, use the "web_profiler.controller.exception_panel" service instead.</deprecated>
    </service>
    <service id="web_profiler.controller.exception_panel" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionPanelController" public="true">
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id="profiler" on-invalid="null"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service" id=".1_NonceGenerator~EsmtEye"/>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id=".2_HtmlDumper~EsmtEye"/>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string" public="false">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/((index|app(_[\w]+)?)\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
    </service>
    <service id="web_server.command.server_run" class="Symfony\Bundle\WebServerBundle\Command\ServerRunCommand" public="false">
      <tag name="console.command" command="server:run"/>
      <argument>/Users/martinbetz/Sites/martin-bolt/public</argument>
      <argument>dev</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <call method="setName">
        <argument>server:run</argument>
      </call>
    </service>
    <service id="web_server.command.server_start" class="Symfony\Bundle\WebServerBundle\Command\ServerStartCommand" public="false">
      <tag name="console.command" command="server:start"/>
      <argument>/Users/martinbetz/Sites/martin-bolt/public</argument>
      <argument>dev</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <call method="setName">
        <argument>server:start</argument>
      </call>
    </service>
    <service id="web_server.command.server_stop" class="Symfony\Bundle\WebServerBundle\Command\ServerStopCommand" public="false">
      <tag name="console.command" command="server:stop"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <call method="setName">
        <argument>server:stop</argument>
      </call>
    </service>
    <service id="web_server.command.server_status" class="Symfony\Bundle\WebServerBundle\Command\ServerStatusCommand" public="false">
      <tag name="console.command" command="server:status"/>
      <argument>/Users/martinbetz/Sites/martin-bolt</argument>
      <call method="setName">
        <argument>server:status</argument>
      </call>
    </service>
    <service id=".1_ServiceLocator~B2XWUV2" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="webpack_encore.entrypoint_lookup_collection" type="service" id="webpack_encore.entrypoint_lookup_collection"/>
        <argument key="webpack_encore.tag_renderer" type="service" id="webpack_encore.tag_renderer"/>
      </argument>
    </service>
    <service id="webpack_encore.entrypoint_lookup_collection" class="Symfony\WebpackEncoreBundle\Asset\EntrypointLookupCollection" public="false">
      <argument type="service" id=".service_locator.0DpzJRH"/>
      <argument>_default</argument>
    </service>
    <service id="webpack_encore.tag_renderer" class="Symfony\WebpackEncoreBundle\Asset\TagRenderer" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="webpack_encore.entrypoint_lookup_collection"/>
      <argument type="service" id="assets.packages"/>
      <argument type="collection"/>
    </service>
    <service id="webpack_encore.twig_entry_files_extension" class="Symfony\WebpackEncoreBundle\Twig\EntryFilesTwigExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id=".1_ServiceLocator~B2XWUV2"/>
    </service>
    <service id="webpack_encore.entrypoint_lookup.cache_warmer" class="Symfony\WebpackEncoreBundle\CacheWarmer\EntrypointCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument key="_default">/Users/martinbetz/Sites/martin-bolt/public/assets/entrypoints.json</argument>
      </argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/webpack_encore.cache.php</argument>
      <argument type="service" id="cache.webpack_encore"/>
    </service>
    <service id="webpack_encore.cache" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/webpack_encore.cache.php</argument>
      <argument type="service" id="cache.webpack_encore"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="cache.webpack_encore" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.webpack_encore.recorder_inner"/>
    </service>
    <service id="webpack_encore.exception_listener" class="Symfony\WebpackEncoreBundle\EventListener\ExceptionListener" public="false">
      <tag name="kernel.event_listener" event="kernel.exception"/>
      <argument type="service" id="webpack_encore.entrypoint_lookup_collection"/>
      <argument type="collection">
        <argument>_default</argument>
      </argument>
    </service>
    <service id="webpack_encore.entrypoint_lookup[_default]" class="Symfony\WebpackEncoreBundle\Asset\EntrypointLookup">
      <tag name="kernel.reset" method="reset"/>
      <argument>/Users/martinbetz/Sites/martin-bolt/public/assets/entrypoints.json</argument>
      <argument>null</argument>
      <argument>_default</argument>
      <argument>true</argument>
    </service>
    <service id=".service_locator.0DpzJRH" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="_default" type="service" id="webpack_encore.entrypoint_lookup[_default]"/>
      </argument>
    </service>
    <service id="Translation\Bundle\Catalogue\CatalogueFetcher" class="Translation\Bundle\Catalogue\CatalogueFetcher" public="true">
      <argument type="service" id="translation.reader"/>
    </service>
    <service id="Translation\Bundle\Catalogue\CatalogueWriter" class="Translation\Bundle\Catalogue\CatalogueWriter" public="true">
      <argument type="service" id="translation.writer"/>
      <argument>en</argument>
    </service>
    <service id="php_translation.storage.abstract" class="Translation\Bundle\Service\StorageService" abstract="true">
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <argument>null</argument>
    </service>
    <service id="Translation\Bundle\Catalogue\CatalogueManager" class="Translation\Bundle\Catalogue\CatalogueManager" public="true"/>
    <service id="Translation\Extractor\Extractor" class="Translation\Extractor\Extractor">
      <call method="addFileExtractor">
        <argument type="service" id="Translation\Extractor\FileExtractor\PHPFileExtractor"/>
      </call>
      <call method="addFileExtractor">
        <argument type="service" id="Translation\Extractor\FileExtractor\TwigFileExtractor"/>
      </call>
    </service>
    <service id="Translation\Bundle\Service\StorageManager" class="Translation\Bundle\Service\StorageManager" public="true">
      <call method="addStorage">
        <argument>bolt</argument>
        <argument type="service" id="php_translation.storage.bolt"/>
      </call>
    </service>
    <service id="Translation\Bundle\Service\ConfigurationManager" class="Translation\Bundle\Service\ConfigurationManager" public="true">
      <call method="addConfiguration">
        <argument>bolt</argument>
        <argument type="service" id="php_translation.configuration.bolt"/>
      </call>
    </service>
    <service id="Translation\Bundle\Service\Importer" class="Translation\Bundle\Service\Importer" public="true">
      <argument type="service" id="Translation\Extractor\Extractor"/>
      <argument type="service" id="twig"/>
      <argument>en</argument>
    </service>
    <service id="Translation\Bundle\Service\CacheClearer" class="Translation\Bundle\Service\CacheClearer" public="true">
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev</argument>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="filesystem"/>
    </service>
    <service id="php_translation.local_file_storage.abstract" class="Translation\SymfonyStorage\FileStorage" abstract="true">
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="Translation\Bundle\Catalogue\CatalogueCounter" class="Translation\Bundle\Catalogue\CatalogueCounter" public="true"/>
    <service id="Translation\Bundle\Twig\TranslationExtension" class="Translation\Bundle\Twig\TranslationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>true</argument>
    </service>
    <service id="php_translation.catalogue_fetcher" class="Translation\Bundle\Catalogue\CatalogueFetcher" public="true">
      <argument type="service" id="translation.reader"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.catalogue_writer" class="Translation\Bundle\Catalogue\CatalogueWriter" public="true">
      <argument type="service" id="translation.writer"/>
      <argument>en</argument>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.catalogue_manager" class="Translation\Bundle\Catalogue\CatalogueManager" public="true">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor" class="Translation\Extractor\Extractor">
      <call method="addFileExtractor">
        <argument type="service" id="Translation\Extractor\FileExtractor\PHPFileExtractor"/>
      </call>
      <call method="addFileExtractor">
        <argument type="service" id="Translation\Extractor\FileExtractor\TwigFileExtractor"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.storage_manager" class="Translation\Bundle\Service\StorageManager" public="true">
      <call method="addStorage">
        <argument>bolt</argument>
        <argument type="service" id="php_translation.storage.bolt"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.configuration_manager" class="Translation\Bundle\Service\ConfigurationManager" public="true">
      <call method="addConfiguration">
        <argument>bolt</argument>
        <argument type="service" id="php_translation.configuration.bolt"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.importer" class="Translation\Bundle\Service\Importer" public="true">
      <argument type="service" id="Translation\Extractor\Extractor"/>
      <argument type="service" id="twig"/>
      <argument>en</argument>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.cache_clearer" class="Translation\Bundle\Service\CacheClearer" public="true">
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev</argument>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="filesystem"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.catalogue_counter" class="Translation\Bundle\Catalogue\CatalogueCounter" public="true">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.twig_extension" class="Translation\Bundle\Twig\TranslationExtension">
      <argument type="service" id="translator.data_collector"/>
      <argument>true</argument>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="Translation\Extractor\FileExtractor\PHPFileExtractor" class="Translation\Extractor\FileExtractor\PHPFileExtractor">
      <tag name="php_translation.extractor" type="php"/>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FlashMessage"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeTitle"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor"/>
      </call>
    </service>
    <service id="Translation\Extractor\FileExtractor\TwigFileExtractor" class="Translation\Extractor\FileExtractor\TwigFileExtractor">
      <tag name="php_translation.extractor" type="twig"/>
      <argument type="service" id="twig"/>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Twig\TwigVisitor"/>
      </call>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans" class="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice" class="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FlashMessage" class="Translation\Extractor\Visitor\Php\Symfony\FlashMessage">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices">
      <tag name="php_translation.visitor" type="php"/>
      <call method="setSymfonyMajorVersion">
        <argument>4</argument>
      </call>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder" class="Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypeTitle" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeTitle">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation" class="Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation">
      <tag name="php_translation.visitor" type="php"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor" class="Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Twig\TwigVisitor" class="Translation\Extractor\Visitor\Twig\TwigVisitor">
      <tag name="php_translation.visitor" type="twig"/>
    </service>
    <service id="php_translation.configuration.bolt" class="Translation\Bundle\Model\Configuration" public="false">
      <argument type="collection">
        <argument key="dirs" type="collection">
          <argument>/Users/martinbetz/Sites/martin-bolt/vendor/bolt/core/templates</argument>
          <argument>/Users/martinbetz/Sites/martin-bolt/src</argument>
        </argument>
        <argument key="output_dir">/Users/martinbetz/Sites/martin-bolt/translations</argument>
        <argument key="excluded_dirs" type="collection"/>
        <argument key="excluded_names" type="collection"/>
        <argument key="external_translations_dirs" type="collection"/>
        <argument key="output_format">xlf</argument>
        <argument key="blacklist_domains" type="collection"/>
        <argument key="whitelist_domains" type="collection"/>
        <argument key="remote_storage" type="collection"/>
        <argument key="local_storage" type="collection">
          <argument>php_translation.local_file_storage.abstract</argument>
        </argument>
        <argument key="xliff_version" type="string">2.0</argument>
        <argument key="local_file_storage_options" type="collection"/>
        <argument key="project_root">/Users/martinbetz/Sites</argument>
        <argument key="name">bolt</argument>
        <argument key="locales" type="collection"/>
      </argument>
    </service>
    <service id="php_translation.storage.bolt" class="Translation\Bundle\Service\StorageService" public="true">
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <argument type="service" id="php_translation.configuration.bolt"/>
      <call method="addLocalStorage">
        <argument type="service" id="php_translation.single_storage.file.bolt"/>
      </call>
    </service>
    <service id="php_translation.single_storage.file.bolt" class="Translation\SymfonyStorage\FileStorage">
      <tag name="bolt" type="local"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="collection">
        <argument>/Users/martinbetz/Sites/martin-bolt/translations</argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="Translation\Bundle\Controller\WebUIController" class="Translation\Bundle\Controller\WebUIController" public="true" autowire="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueManager"/>
      <argument type="service" id="Translation\Bundle\Service\StorageManager"/>
      <argument type="service" id="debug.validator"/>
      <argument type="collection"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="php_translation.data_collector" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@Translation/SymfonyProfiler/translation.html.twig" id="translation" priority="200"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="Translation\Bundle\Controller\SymfonyProfilerController" class="Translation\Bundle\Controller\SymfonyProfilerController" public="true" autowire="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="php_translation.storage.bolt"/>
      <argument type="service" id="profiler"/>
      <argument>true</argument>
      <call method="setContainer">
        <argument type="service" id=".service_locator.vdmMuyE.Translation\Bundle\Controller\SymfonyProfilerController"/>
      </call>
    </service>
    <service id="Translation\Bundle\Command\CheckMissingCommand" class="Translation\Bundle\Command\CheckMissingCommand" public="true">
      <tag name="console.command" command="translation:check-missing"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <argument type="service" id="Translation\Bundle\Service\Importer"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueCounter"/>
      <call method="setName">
        <argument>translation:check-missing</argument>
      </call>
    </service>
    <service id="Translation\Bundle\Command\DeleteObsoleteCommand" class="Translation\Bundle\Command\DeleteObsoleteCommand" public="true">
      <tag name="console.command" command="translation:delete-obsolete"/>
      <argument type="service" id="Translation\Bundle\Service\StorageManager"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <call method="setName">
        <argument>translation:delete-obsolete</argument>
      </call>
    </service>
    <service id="Translation\Bundle\Command\DownloadCommand" class="Translation\Bundle\Command\DownloadCommand" public="true">
      <tag name="console.command" command="translation:download"/>
      <argument type="service" id="Translation\Bundle\Service\StorageManager"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Service\CacheClearer"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueWriter"/>
      <call method="setName">
        <argument>translation:download</argument>
      </call>
    </service>
    <service id="Translation\Bundle\Command\ExtractCommand" class="Translation\Bundle\Command\ExtractCommand" public="true">
      <tag name="console.command" command="translation:extract"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueWriter"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueCounter"/>
      <argument type="service" id="Translation\Bundle\Service\Importer"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <call method="setName">
        <argument>translation:extract</argument>
      </call>
    </service>
    <service id="Translation\Bundle\Command\StatusCommand" class="Translation\Bundle\Command\StatusCommand" public="true">
      <tag name="console.command" command="translation:status"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueCounter"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <call method="setName">
        <argument>translation:status</argument>
      </call>
    </service>
    <service id="Translation\Bundle\Command\SyncCommand" class="Translation\Bundle\Command\SyncCommand" public="true">
      <tag name="console.command" command="translation:sync"/>
      <argument type="service" id="Translation\Bundle\Service\StorageManager"/>
      <call method="setName">
        <argument>translation:sync</argument>
      </call>
    </service>
    <service id="php_translator.console.delete_obsolete" class="Translation\Bundle\Command\DeleteObsoleteCommand" public="true">
      <argument type="service" id="Translation\Bundle\Service\StorageManager"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translator.console.download" class="Translation\Bundle\Command\DownloadCommand" public="true">
      <argument type="service" id="Translation\Bundle\Service\StorageManager"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Service\CacheClearer"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueWriter"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translator.console.extract" class="Translation\Bundle\Command\ExtractCommand" public="true">
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueWriter"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueCounter"/>
      <argument type="service" id="Translation\Bundle\Service\Importer"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translator.console.status" class="Translation\Bundle\Command\StatusCommand" public="true">
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueCounter"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translator.console.sync" class="Translation\Bundle\Command\SyncCommand" public="true">
      <argument type="service" id="Translation\Bundle\Service\StorageManager"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="pagerfanta.event_listener.convert_not_valid_max_per_page_to_not_found" class="BabDev\PagerfantaBundle\EventListener\ConvertNotValidMaxPerPageToNotFoundListener" public="false">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="512"/>
    </service>
    <service id="pagerfanta.event_listener.convert_not_valid_current_page_to_not_found" class="BabDev\PagerfantaBundle\EventListener\ConvertNotValidCurrentPageToNotFoundListener" public="false">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="512"/>
    </service>
    <service id="pagerfanta.route_generator_factory" class="BabDev\PagerfantaBundle\RouteGenerator\RequestAwareRouteGeneratorFactory">
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="pagerfanta.twig_extension" class="BabDev\PagerfantaBundle\Twig\PagerfantaExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="pagerfanta.twig_runtime" class="BabDev\PagerfantaBundle\Twig\PagerfantaRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument>default</argument>
      <argument type="service" id="pagerfanta.view_factory"/>
      <argument type="service" id="pagerfanta.route_generator_factory"/>
    </service>
    <service id="pagerfanta.view.default" class="Pagerfanta\View\DefaultView" public="false">
      <tag name="pagerfanta.view" alias="default"/>
    </service>
    <service id="pagerfanta.view.semantic_ui" class="Pagerfanta\View\SemanticUiView" public="false">
      <tag name="pagerfanta.view" alias="semantic_ui"/>
    </service>
    <service id="pagerfanta.view.twig" class="BabDev\PagerfantaBundle\View\TwigView" public="false">
      <tag name="pagerfanta.view" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>@BabDevPagerfanta/default.html.twig</argument>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap" class="Pagerfanta\View\TwitterBootstrapView" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap3" class="Pagerfanta\View\TwitterBootstrap3View" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap3"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap4" class="Pagerfanta\View\TwitterBootstrap4View" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap4"/>
    </service>
    <service id="pagerfanta.view_factory" class="Pagerfanta\View\ViewFactory" public="true">
      <call method="set">
        <argument>default</argument>
        <argument type="service" id="pagerfanta.view.default"/>
      </call>
      <call method="set">
        <argument>semantic_ui</argument>
        <argument type="service" id="pagerfanta.view.semantic_ui"/>
      </call>
      <call method="set">
        <argument>twig</argument>
        <argument type="service" id="pagerfanta.view.twig"/>
      </call>
      <call method="set">
        <argument>twitter_bootstrap</argument>
        <argument type="service" id="pagerfanta.view.twitter_bootstrap"/>
      </call>
      <call method="set">
        <argument>twitter_bootstrap3</argument>
        <argument type="service" id="pagerfanta.view.twitter_bootstrap3"/>
      </call>
      <call method="set">
        <argument>twitter_bootstrap4</argument>
        <argument type="service" id="pagerfanta.view.twitter_bootstrap4"/>
      </call>
    </service>
    <service id="annotated_bolt_entity_content_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_bolt_entity_field_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_bolt_entity_relation_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">partial</argument>
        <argument key="name">partial</argument>
        <argument key="fromContent">partial</argument>
        <argument key="toContent">partial</argument>
        <argument key="position">partial</argument>
        <argument key="group">partial</argument>
        <argument key="definition">partial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id=".instanceof.ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\QueryItemExtensionInterface.0.Bolt\Api\Extensions\ContentExtension" class="Bolt\Api\Extensions\ContentExtension" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\QueryCollectionExtensionInterface.0.Bolt\Api\Extensions\ContentExtension" class="Bolt\Api\Extensions\ContentExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Api\Extensions\ContentExtension" class="Bolt\Api\Extensions\ContentExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Bolt\Command\AddUserCommand" class="Bolt\Command\AddUserCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Command\AddUserCommand" class="Bolt\Command\AddUserCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Bolt\Command\ClearThumbnailCacheCommand" class="Bolt\Command\ClearThumbnailCacheCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Command\ClearThumbnailCacheCommand" class="Bolt\Command\ClearThumbnailCacheCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Bolt\Command\CopyAssetsCommand" class="Bolt\Command\CopyAssetsCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Command\CopyAssetsCommand" class="Bolt\Command\CopyAssetsCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Bolt\Command\CopyThemesCommand" class="Bolt\Command\CopyThemesCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Command\CopyThemesCommand" class="Bolt\Command\CopyThemesCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Bolt\Command\DeleteUserCommand" class="Bolt\Command\DeleteUserCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Command\DeleteUserCommand" class="Bolt\Command\DeleteUserCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Bolt\Command\ExtensionsListCommand" class="Bolt\Command\ExtensionsListCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Command\ExtensionsListCommand" class="Bolt\Command\ExtensionsListCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Bolt\Command\ExtensionsServicesCommand" class="Bolt\Command\ExtensionsServicesCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Command\ExtensionsServicesCommand" class="Bolt\Command\ExtensionsServicesCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Bolt\Command\ExtensionsShowCommand" class="Bolt\Command\ExtensionsShowCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Command\ExtensionsShowCommand" class="Bolt\Command\ExtensionsShowCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Bolt\Command\InfoCommand" class="Bolt\Command\InfoCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Command\InfoCommand" class="Bolt\Command\InfoCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Bolt\Command\ListUsersCommand" class="Bolt\Command\ListUsersCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Command\ListUsersCommand" class="Bolt\Command\ListUsersCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Bolt\Command\ResetSecretCommand" class="Bolt\Command\ResetSecretCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Command\ResetSecretCommand" class="Bolt\Command\ResetSecretCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Bolt\Command\SetupCommand" class="Bolt\Command\SetupCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Command\SetupCommand" class="Bolt\Command\SetupCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\AuthenticationController" class="Bolt\Controller\Backend\AuthenticationController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\AuthenticationController" class="Bolt\Controller\Backend\AuthenticationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\AuthenticationController" class="Bolt\Controller\Backend\AuthenticationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\BulkOperationsController" class="Bolt\Controller\Backend\BulkOperationsController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\BulkOperationsController" class="Bolt\Controller\Backend\BulkOperationsController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\BulkOperationsController" class="Bolt\Controller\Backend\BulkOperationsController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\ClearCacheController" class="Bolt\Controller\Backend\ClearCacheController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\ClearCacheController" class="Bolt\Controller\Backend\ClearCacheController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\ClearCacheController" class="Bolt\Controller\Backend\ClearCacheController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\ContentEditController" class="Bolt\Controller\Backend\ContentEditController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\ContentEditController" class="Bolt\Controller\Backend\ContentEditController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\ContentEditController" class="Bolt\Controller\Backend\ContentEditController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\ContentLocalizationController" class="Bolt\Controller\Backend\ContentLocalizationController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\ContentLocalizationController" class="Bolt\Controller\Backend\ContentLocalizationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\ContentLocalizationController" class="Bolt\Controller\Backend\ContentLocalizationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\DashboardController" class="Bolt\Controller\Backend\DashboardController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\DashboardController" class="Bolt\Controller\Backend\DashboardController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\DashboardController" class="Bolt\Controller\Backend\DashboardController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\DatabaseIntegrityController" class="Bolt\Controller\Backend\DatabaseIntegrityController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\DatabaseIntegrityController" class="Bolt\Controller\Backend\DatabaseIntegrityController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\DatabaseIntegrityController" class="Bolt\Controller\Backend\DatabaseIntegrityController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\ExtensionsController" class="Bolt\Controller\Backend\ExtensionsController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\ExtensionsController" class="Bolt\Controller\Backend\ExtensionsController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\ExtensionsController" class="Bolt\Controller\Backend\ExtensionsController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\FileEditController" class="Bolt\Controller\Backend\FileEditController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\FileEditController" class="Bolt\Controller\Backend\FileEditController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\FileEditController" class="Bolt\Controller\Backend\FileEditController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\FilemanagerController" class="Bolt\Controller\Backend\FilemanagerController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\FilemanagerController" class="Bolt\Controller\Backend\FilemanagerController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\FilemanagerController" class="Bolt\Controller\Backend\FilemanagerController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\FixturesController" class="Bolt\Controller\Backend\FixturesController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\FixturesController" class="Bolt\Controller\Backend\FixturesController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\FixturesController" class="Bolt\Controller\Backend\FixturesController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\GeneralController" class="Bolt\Controller\Backend\GeneralController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\GeneralController" class="Bolt\Controller\Backend\GeneralController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\GeneralController" class="Bolt\Controller\Backend\GeneralController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\ListingController" class="Bolt\Controller\Backend\ListingController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\ListingController" class="Bolt\Controller\Backend\ListingController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\ListingController" class="Bolt\Controller\Backend\ListingController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\LogViewerController" class="Bolt\Controller\Backend\LogViewerController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\LogViewerController" class="Bolt\Controller\Backend\LogViewerController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\LogViewerController" class="Bolt\Controller\Backend\LogViewerController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\MediaController" class="Bolt\Controller\Backend\MediaController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\MediaController" class="Bolt\Controller\Backend\MediaController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\MediaController" class="Bolt\Controller\Backend\MediaController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\MediaEditController" class="Bolt\Controller\Backend\MediaEditController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\MediaEditController" class="Bolt\Controller\Backend\MediaEditController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\MediaEditController" class="Bolt\Controller\Backend\MediaEditController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\MenuPageController" class="Bolt\Controller\Backend\MenuPageController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\MenuPageController" class="Bolt\Controller\Backend\MenuPageController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\MenuPageController" class="Bolt\Controller\Backend\MenuPageController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\OmnisearchController" class="Bolt\Controller\Backend\OmnisearchController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\OmnisearchController" class="Bolt\Controller\Backend\OmnisearchController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\OmnisearchController" class="Bolt\Controller\Backend\OmnisearchController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\ProfileController" class="Bolt\Controller\Backend\ProfileController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\ProfileController" class="Bolt\Controller\Backend\ProfileController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\ProfileController" class="Bolt\Controller\Backend\ProfileController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\UserController" class="Bolt\Controller\Backend\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\UserController" class="Bolt\Controller\Backend\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\UserController" class="Bolt\Controller\Backend\UserController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Backend\UserEditController" class="Bolt\Controller\Backend\UserEditController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Backend\UserEditController" class="Bolt\Controller\Backend\UserEditController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Backend\UserEditController" class="Bolt\Controller\Backend\UserEditController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Frontend\DetailController" class="Bolt\Controller\Frontend\DetailController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Frontend\DetailController" class="Bolt\Controller\Frontend\DetailController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Frontend\DetailController" class="Bolt\Controller\Frontend\DetailController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Frontend\HomepageController" class="Bolt\Controller\Frontend\HomepageController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Frontend\HomepageController" class="Bolt\Controller\Frontend\HomepageController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Frontend\HomepageController" class="Bolt\Controller\Frontend\HomepageController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Frontend\ListingController" class="Bolt\Controller\Frontend\ListingController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Frontend\ListingController" class="Bolt\Controller\Frontend\ListingController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Frontend\ListingController" class="Bolt\Controller\Frontend\ListingController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Frontend\SearchController" class="Bolt\Controller\Frontend\SearchController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Frontend\SearchController" class="Bolt\Controller\Frontend\SearchController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Frontend\SearchController" class="Bolt\Controller\Frontend\SearchController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Frontend\TaxonomyController" class="Bolt\Controller\Frontend\TaxonomyController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Frontend\TaxonomyController" class="Bolt\Controller\Frontend\TaxonomyController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Frontend\TaxonomyController" class="Bolt\Controller\Frontend\TaxonomyController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\Frontend\TemplateController" class="Bolt\Controller\Frontend\TemplateController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\Frontend\TemplateController" class="Bolt\Controller\Frontend\TemplateController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\Frontend\TemplateController" class="Bolt\Controller\Frontend\TemplateController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Controller\TwigAwareController" class="Bolt\Controller\TwigAwareController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Controller\TwigAwareController" class="Bolt\Controller\TwigAwareController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Controller\TwigAwareController" class="Bolt\Controller\TwigAwareController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Bolt\DataFixtures\ContentFixtures" class="Bolt\DataFixtures\ContentFixtures" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\DataFixtures\ContentFixtures" class="Bolt\DataFixtures\ContentFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Bolt\DataFixtures\ImageFetchFixtures" class="Bolt\DataFixtures\ImageFetchFixtures" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\DataFixtures\ImageFetchFixtures" class="Bolt\DataFixtures\ImageFetchFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Bolt\DataFixtures\ImagesFixtures" class="Bolt\DataFixtures\ImagesFixtures" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\DataFixtures\ImagesFixtures" class="Bolt\DataFixtures\ImagesFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Bolt\DataFixtures\RelationsFixtures" class="Bolt\DataFixtures\RelationsFixtures" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\DataFixtures\RelationsFixtures" class="Bolt\DataFixtures\RelationsFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Bolt\DataFixtures\TaxonomyFixtures" class="Bolt\DataFixtures\TaxonomyFixtures" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\DataFixtures\TaxonomyFixtures" class="Bolt\DataFixtures\TaxonomyFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Bolt\DataFixtures\UserFixtures" class="Bolt\DataFixtures\UserFixtures" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\DataFixtures\UserFixtures" class="Bolt\DataFixtures\UserFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Bolt\Event\Subscriber\ContentSaveSubscriber" class="Bolt\Event\Subscriber\ContentSaveSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Event\Subscriber\ContentSaveSubscriber" class="Bolt\Event\Subscriber\ContentSaveSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Bolt\Event\Subscriber\ExtensionSubscriber" class="Bolt\Event\Subscriber\ExtensionSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Event\Subscriber\ExtensionSubscriber" class="Bolt\Event\Subscriber\ExtensionSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Bolt\Event\Subscriber\LocaleSubscriber" class="Bolt\Event\Subscriber\LocaleSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Event\Subscriber\LocaleSubscriber" class="Bolt\Event\Subscriber\LocaleSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Bolt\Event\Subscriber\MaintenanceModeSubscriber" class="Bolt\Event\Subscriber\MaintenanceModeSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Event\Subscriber\MaintenanceModeSubscriber" class="Bolt\Event\Subscriber\MaintenanceModeSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Bolt\Event\Subscriber\ProcessWidgetsQueueSubscriber" class="Bolt\Event\Subscriber\ProcessWidgetsQueueSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Event\Subscriber\ProcessWidgetsQueueSubscriber" class="Bolt\Event\Subscriber\ProcessWidgetsQueueSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Bolt\Event\Subscriber\TimedPublishSubscriber" class="Bolt\Event\Subscriber\TimedPublishSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Event\Subscriber\TimedPublishSubscriber" class="Bolt\Event\Subscriber\TimedPublishSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Bolt\Event\Subscriber\UserLocaleSubscriber" class="Bolt\Event\Subscriber\UserLocaleSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Event\Subscriber\UserLocaleSubscriber" class="Bolt\Event\Subscriber\UserLocaleSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Bolt\Event\Subscriber\WidgetSubscriber" class="Bolt\Event\Subscriber\WidgetSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Event\Subscriber\WidgetSubscriber" class="Bolt\Event\Subscriber\WidgetSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Bolt\Event\Subscriber\ZoneSubscriber" class="Bolt\Event\Subscriber\ZoneSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Event\Subscriber\ZoneSubscriber" class="Bolt\Event\Subscriber\ZoneSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bolt\Extension\ExtensionController" class="Bolt\Extension\ExtensionController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bolt\Extension\ExtensionController" class="Bolt\Extension\ExtensionController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Extension\ExtensionController" class="Bolt\Extension\ExtensionController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Bolt\Form\UserType" class="Bolt\Form\UserType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Form\UserType" class="Bolt\Form\UserType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Bolt\Repository\ContentRepository" class="Bolt\Repository\ContentRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Repository\ContentRepository" class="Bolt\Repository\ContentRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Bolt\Repository\FieldRepository" class="Bolt\Repository\FieldRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Repository\FieldRepository" class="Bolt\Repository\FieldRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Bolt\Repository\LogRepository" class="Bolt\Repository\LogRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Repository\LogRepository" class="Bolt\Repository\LogRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Bolt\Repository\MediaRepository" class="Bolt\Repository\MediaRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Repository\MediaRepository" class="Bolt\Repository\MediaRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Bolt\Repository\RelationRepository" class="Bolt\Repository\RelationRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Repository\RelationRepository" class="Bolt\Repository\RelationRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Bolt\Repository\TaxonomyRepository" class="Bolt\Repository\TaxonomyRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Repository\TaxonomyRepository" class="Bolt\Repository\TaxonomyRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Bolt\Repository\UserAuthTokenRepository" class="Bolt\Repository\UserAuthTokenRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Repository\UserAuthTokenRepository" class="Bolt\Repository\UserAuthTokenRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Bolt\Repository\UserRepository" class="Bolt\Repository\UserRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Repository\UserRepository" class="Bolt\Repository\UserRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\ArrayExtension" class="Bolt\Twig\ArrayExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\ArrayExtension" class="Bolt\Twig\ArrayExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\BackendMenuExtension" class="Bolt\Twig\BackendMenuExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\BackendMenuExtension" class="Bolt\Twig\BackendMenuExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\ContentExtension" class="Bolt\Twig\ContentExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\ContentExtension" class="Bolt\Twig\ContentExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\DebugExtension" class="Bolt\Twig\DebugExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\DebugExtension" class="Bolt\Twig\DebugExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\DumpExtension" class="Bolt\Twig\DumpExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\DumpExtension" class="Bolt\Twig\DumpExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\FieldExtension" class="Bolt\Twig\FieldExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\FieldExtension" class="Bolt\Twig\FieldExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\FrontendMenuExtension" class="Bolt\Twig\FrontendMenuExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\FrontendMenuExtension" class="Bolt\Twig\FrontendMenuExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\HtmlExtension" class="Bolt\Twig\HtmlExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\HtmlExtension" class="Bolt\Twig\HtmlExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\ImageExtension" class="Bolt\Twig\ImageExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\ImageExtension" class="Bolt\Twig\ImageExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\JsonExtension" class="Bolt\Twig\JsonExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\JsonExtension" class="Bolt\Twig\JsonExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\LocaleExtension" class="Bolt\Twig\LocaleExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\LocaleExtension" class="Bolt\Twig\LocaleExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\RelatedExtension" class="Bolt\Twig\RelatedExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\RelatedExtension" class="Bolt\Twig\RelatedExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\SetcontentExtension" class="Bolt\Twig\SetcontentExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\SetcontentExtension" class="Bolt\Twig\SetcontentExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\TextExtension" class="Bolt\Twig\TextExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\TextExtension" class="Bolt\Twig\TextExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\TranslatableExtension" class="Bolt\Twig\TranslatableExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\TranslatableExtension" class="Bolt\Twig\TranslatableExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\UserExtension" class="Bolt\Twig\UserExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\UserExtension" class="Bolt\Twig\UserExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\Twig\WidgetExtension" class="Bolt\Twig\WidgetExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\Twig\WidgetExtension" class="Bolt\Twig\WidgetExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Squirrel\TwigPhpSyntax\PhpSyntaxExtension" class="Squirrel\TwigPhpSyntax\PhpSyntaxExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Squirrel\TwigPhpSyntax\PhpSyntaxExtension" class="Squirrel\TwigPhpSyntax\PhpSyntaxExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Twig\Extension\StringLoaderExtension" class="Twig\Extension\StringLoaderExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Twig\Extension\StringLoaderExtension" class="Twig\Extension\StringLoaderExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Bolt\Extension\ExtensionInterface.0.BobdenOtter\WeatherWidget\Extension" class="BobdenOtter\WeatherWidget\Extension" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.BobdenOtter\WeatherWidget\Extension" class="BobdenOtter\WeatherWidget\Extension" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Bolt\Extension\ExtensionInterface.0.Bolt\NewsWidget\Extension" class="Bolt\NewsWidget\Extension" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\NewsWidget\Extension" class="Bolt\NewsWidget\Extension" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Bolt\Extension\ExtensionInterface.0.BobdenOtter\ConfigurationNotices\Extension" class="BobdenOtter\ConfigurationNotices\Extension" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.BobdenOtter\ConfigurationNotices\Extension" class="BobdenOtter\ConfigurationNotices\Extension" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Bolt\BoltForms\EventSubscriber\HoneypotSubscriber" class="Bolt\BoltForms\EventSubscriber\HoneypotSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\BoltForms\EventSubscriber\HoneypotSubscriber" class="Bolt\BoltForms\EventSubscriber\HoneypotSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Bolt\BoltForms\EventSubscriber\Logger" class="Bolt\BoltForms\EventSubscriber\Logger" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\BoltForms\EventSubscriber\Logger" class="Bolt\BoltForms\EventSubscriber\Logger" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Bolt\BoltForms\EventSubscriber\Mailer" class="Bolt\BoltForms\EventSubscriber\Mailer" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\BoltForms\EventSubscriber\Mailer" class="Bolt\BoltForms\EventSubscriber\Mailer" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Bolt\Extension\ExtensionInterface.0.Bolt\BoltForms\Extension" class="Bolt\BoltForms\Extension" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\BoltForms\Extension" class="Bolt\BoltForms\Extension" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\RuntimeExtensionInterface.0.Bolt\BoltForms\FormRuntime" class="Bolt\BoltForms\FormRuntime" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\BoltForms\FormRuntime" class="Bolt\BoltForms\FormRuntime" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bolt\BoltForms\TwigExtension" class="Bolt\BoltForms\TwigExtension" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bolt\BoltForms\TwigExtension" class="Bolt\BoltForms\TwigExtension" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Bobdenotter\RssExtension\Controller" class="Bobdenotter\RssExtension\Controller" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Bobdenotter\RssExtension\Controller" class="Bobdenotter\RssExtension\Controller" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bobdenotter\RssExtension\Controller" class="Bobdenotter\RssExtension\Controller" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Bolt\Extension\ExtensionInterface.0.Bobdenotter\RssExtension\Extension" class="Bobdenotter\RssExtension\Extension" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bobdenotter\RssExtension\Extension" class="Bobdenotter\RssExtension\Extension" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Bobdenotter\RssExtension\Twig" class="Bobdenotter\RssExtension\Twig" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Bobdenotter\RssExtension\Twig" class="Bobdenotter\RssExtension\Twig" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Common\EventSubscriber.0.Knp\DoctrineBehaviors\EventSubscriber\BlameableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\BlameableSubscriber" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Knp\DoctrineBehaviors\EventSubscriber\BlameableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\BlameableSubscriber" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Common\EventSubscriber.0.Knp\DoctrineBehaviors\EventSubscriber\LoggableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\LoggableSubscriber" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Knp\DoctrineBehaviors\EventSubscriber\LoggableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\LoggableSubscriber" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Common\EventSubscriber.0.Knp\DoctrineBehaviors\EventSubscriber\SluggableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\SluggableSubscriber" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Knp\DoctrineBehaviors\EventSubscriber\SluggableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\SluggableSubscriber" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Common\EventSubscriber.0.Knp\DoctrineBehaviors\EventSubscriber\SoftDeletableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\SoftDeletableSubscriber" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Knp\DoctrineBehaviors\EventSubscriber\SoftDeletableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\SoftDeletableSubscriber" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Common\EventSubscriber.0.Knp\DoctrineBehaviors\EventSubscriber\TimestampableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\TimestampableSubscriber" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Knp\DoctrineBehaviors\EventSubscriber\TimestampableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\TimestampableSubscriber" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Common\EventSubscriber.0.Knp\DoctrineBehaviors\EventSubscriber\TranslatableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\TranslatableSubscriber" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Knp\DoctrineBehaviors\EventSubscriber\TranslatableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\TranslatableSubscriber" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Common\EventSubscriber.0.Knp\DoctrineBehaviors\EventSubscriber\TreeSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\TreeSubscriber" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Knp\DoctrineBehaviors\EventSubscriber\TreeSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\TreeSubscriber" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Common\EventSubscriber.0.Knp\DoctrineBehaviors\EventSubscriber\UuidableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\UuidableSubscriber" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Knp\DoctrineBehaviors\EventSubscriber\UuidableSubscriber" class="Knp\DoctrineBehaviors\EventSubscriber\UuidableSubscriber" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.PhpParser\NodeVisitor.0.Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans" class="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans" abstract="true"/>
    <service id=".abstract.instanceof.Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans" class="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans" abstract="true"/>
    <service id=".instanceof.PhpParser\NodeVisitor.0.Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice" class="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice" abstract="true"/>
    <service id=".abstract.instanceof.Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice" class="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice" abstract="true"/>
    <service id=".instanceof.PhpParser\NodeVisitor.0.Translation\Extractor\Visitor\Php\Symfony\FlashMessage" class="Translation\Extractor\Visitor\Php\Symfony\FlashMessage" abstract="true"/>
    <service id=".abstract.instanceof.Translation\Extractor\Visitor\Php\Symfony\FlashMessage" class="Translation\Extractor\Visitor\Php\Symfony\FlashMessage" abstract="true"/>
    <service id=".instanceof.PhpParser\NodeVisitor.0.Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices" abstract="true"/>
    <service id=".abstract.instanceof.Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices" abstract="true"/>
    <service id=".instanceof.PhpParser\NodeVisitor.0.Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue" abstract="true"/>
    <service id=".abstract.instanceof.Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue" abstract="true"/>
    <service id=".instanceof.PhpParser\NodeVisitor.0.Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp" abstract="true"/>
    <service id=".abstract.instanceof.Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp" abstract="true"/>
    <service id=".instanceof.PhpParser\NodeVisitor.0.Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage" abstract="true"/>
    <service id=".abstract.instanceof.Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage" abstract="true"/>
    <service id=".instanceof.PhpParser\NodeVisitor.0.Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit" abstract="true"/>
    <service id=".abstract.instanceof.Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit" abstract="true"/>
    <service id=".instanceof.PhpParser\NodeVisitor.0.Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit" abstract="true"/>
    <service id=".abstract.instanceof.Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit" abstract="true"/>
    <service id=".instanceof.PhpParser\NodeVisitor.0.Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder" class="Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder" abstract="true"/>
    <service id=".abstract.instanceof.Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder" class="Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder" abstract="true"/>
    <service id=".instanceof.PhpParser\NodeVisitor.0.Translation\Extractor\Visitor\Php\Symfony\FormTypeTitle" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeTitle" abstract="true"/>
    <service id=".abstract.instanceof.Translation\Extractor\Visitor\Php\Symfony\FormTypeTitle" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeTitle" abstract="true"/>
    <service id=".instanceof.PhpParser\NodeVisitor.0.Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation" class="Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation" abstract="true"/>
    <service id=".abstract.instanceof.Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation" class="Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation" abstract="true"/>
    <service id=".instanceof.PhpParser\NodeVisitor.0.Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor" class="Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor" abstract="true"/>
    <service id=".abstract.instanceof.Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor" class="Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor" abstract="true"/>
    <service id=".service_locator.CmORmuK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service" id="container.env_var_processor"/>
        <argument key="bool" type="service" id="container.env_var_processor"/>
        <argument key="const" type="service" id="container.env_var_processor"/>
        <argument key="csv" type="service" id="container.env_var_processor"/>
        <argument key="default" type="service" id="container.env_var_processor"/>
        <argument key="file" type="service" id="container.env_var_processor"/>
        <argument key="float" type="service" id="container.env_var_processor"/>
        <argument key="int" type="service" id="container.env_var_processor"/>
        <argument key="json" type="service" id="container.env_var_processor"/>
        <argument key="key" type="service" id="container.env_var_processor"/>
        <argument key="query_string" type="service" id="container.env_var_processor"/>
        <argument key="require" type="service" id="container.env_var_processor"/>
        <argument key="resolve" type="service" id="container.env_var_processor"/>
        <argument key="string" type="service" id="container.env_var_processor"/>
        <argument key="trim" type="service" id="container.env_var_processor"/>
        <argument key="url" type="service" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id="maker.auto_command.make_auth" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:auth"/>
      <argument type="service" id="maker.maker.make_authenticator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:auth</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_command" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:command"/>
      <argument type="service" id="maker.maker.make_command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:command</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:controller"/>
      <argument type="service" id="maker.maker.make_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:controller</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_crud" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:crud"/>
      <argument type="service" id="maker.maker.make_crud"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:crud</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_entity" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:entity"/>
      <argument type="service" id="maker.maker.make_entity"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:entity</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_fixtures" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:fixtures"/>
      <argument type="service" id="maker.maker.make_fixtures"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:fixtures</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:form"/>
      <argument type="service" id="maker.maker.make_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_functional_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:functional-test"/>
      <argument type="service" id="maker.maker.make_functional_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:functional-test</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_message" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:message"/>
      <argument type="service" id="maker.maker.make_message"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:message</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:messenger-middleware"/>
      <argument type="service" id="maker.maker.make_messenger_middleware"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:messenger-middleware</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_registration_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:registration-form"/>
      <argument type="service" id="maker.maker.make_registration_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:registration-form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_reset_password" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:reset-password"/>
      <argument type="service" id="maker.maker.make_reset_password"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:reset-password</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:encoder"/>
      <argument type="service" id="maker.maker.make_serializer_encoder"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:encoder</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:normalizer"/>
      <argument type="service" id="maker.maker.make_serializer_normalizer"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:normalizer</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_subscriber" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:subscriber"/>
      <argument type="service" id="maker.maker.make_subscriber"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:subscriber</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_extension" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:twig-extension"/>
      <argument type="service" id="maker.maker.make_twig_extension"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:twig-extension</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_unit_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:unit-test"/>
      <argument type="service" id="maker.maker.make_unit_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:unit-test</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_validator" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:validator"/>
      <argument type="service" id="maker.maker.make_validator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:validator</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_voter" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:voter"/>
      <argument type="service" id="maker.maker.make_voter"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:voter</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_user" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:user"/>
      <argument type="service" id="maker.maker.make_user"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:user</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_migration" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:migration"/>
      <argument type="service" id="maker.maker.make_migration"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:migration</argument>
      </call>
    </service>
    <service id=".service_locator.F7YLi36" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Bolt\Doctrine\TablePrefix" type="service" id="Bolt\Doctrine\TablePrefix"/>
        <argument key="Bolt\Event\Listener\ContentFillListener" type="service" id="Bolt\Event\Listener\ContentFillListener"/>
        <argument key="Bolt\Event\Listener\FieldDiscriminatorListener" type="service" id="Bolt\Event\Listener\FieldDiscriminatorListener"/>
        <argument key="Bolt\Event\Listener\FieldFillListener" type="service" id="Bolt\Event\Listener\FieldFillListener"/>
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </argument>
    </service>
    <service id=".service_locator.6dalqjL" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Bolt\Repository\ContentRepository" type="service" id="Bolt\Repository\ContentRepository"/>
        <argument key="Bolt\Repository\FieldRepository" type="service" id="Bolt\Repository\FieldRepository"/>
        <argument key="Bolt\Repository\LogRepository" type="service" id="Bolt\Repository\LogRepository"/>
        <argument key="Bolt\Repository\MediaRepository" type="service" id="Bolt\Repository\MediaRepository"/>
        <argument key="Bolt\Repository\RelationRepository" type="service" id="Bolt\Repository\RelationRepository"/>
        <argument key="Bolt\Repository\TaxonomyRepository" type="service" id="Bolt\Repository\TaxonomyRepository"/>
        <argument key="Bolt\Repository\UserAuthTokenRepository" type="service" id="Bolt\Repository\UserAuthTokenRepository"/>
        <argument key="Bolt\Repository\UserRepository" type="service" id="Bolt\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.lHZYdJL" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="list" type="service" id="knp_menu.renderer.list"/>
        <argument key="twig" type="service" id="knp_menu.renderer.twig"/>
      </argument>
    </service>
    <service id=".service_locator.g.xob4v" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticationUtils" type="service" id="security.authentication_utils"/>
      </argument>
    </service>
    <service id=".service_locator.Sg7zEzf" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="canonical" type="service" id="Bolt\Canonical"/>
        <argument key="config" type="service" id="Bolt\Configuration\Config"/>
        <argument key="packages" type="service" id="assets.packages"/>
        <argument key="requestStack" type="service" id="request_stack"/>
        <argument key="sanitiser" type="service" id="Bolt\Utils\Sanitiser"/>
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.q_Wr7A9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.YuA9Nm." class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="content" type="service" id=".errored..service_locator.YuA9Nm..Bolt\Entity\Content"/>
      </argument>
    </service>
    <service id=".service_locator.6fwq81_" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.skT1rVi" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="query" type="service" id="Bolt\Storage\Query"/>
      </argument>
    </service>
    <service id=".service_locator.vbm5i4i" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="urlGenerator" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.X8jzeZt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="config" type="service" id="Bolt\Configuration\Config"/>
        <argument key="content" type="service" id="Bolt\Repository\ContentRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Wqb3lwI" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="log" type="service" id="Bolt\Repository\LogRepository"/>
      </argument>
    </service>
    <service id=".service_locator.B68gd9e" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.U_5YyZ3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="validator" type="service" id="debug.validator"/>
      </argument>
    </service>
    <service id=".service_locator.QX63NyZ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.ofu.DSK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="validator" type="service" id="debug.validator"/>
      </argument>
    </service>
    <service id=".service_locator.Ceyeo9Y" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="exception" type="service" id=".errored..service_locator.Ceyeo9Y.Throwable"/>
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.9.DS00F" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="exception" type="service" id=".errored..service_locator.9.DS00F.Throwable"/>
      </argument>
    </service>
    <service id=".service_locator.Hm4O72P" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.VIUKRDp" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="contentRepository" type="service" id="Bolt\Repository\ContentRepository"/>
      </argument>
    </service>
    <service id=".service_locator.R96M75I" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Bolt\Controller\Backend\AuthenticationController::login" type="service" id=".service_locator.g.xob4v"/>
        <argument key="Bolt\Controller\Backend\ClearCacheController::index" type="service" id=".service_locator.q_Wr7A9"/>
        <argument key="Bolt\Controller\Backend\ContentEditController::delete" type="service" id=".service_locator.YuA9Nm."/>
        <argument key="Bolt\Controller\Backend\ContentEditController::duplicate" type="service" id=".service_locator.YuA9Nm."/>
        <argument key="Bolt\Controller\Backend\ContentEditController::edit" type="service" id=".service_locator.YuA9Nm."/>
        <argument key="Bolt\Controller\Backend\ContentEditController::status" type="service" id=".service_locator.YuA9Nm."/>
        <argument key="Bolt\Controller\Backend\ContentLocalizationController::locales" type="service" id=".service_locator.YuA9Nm."/>
        <argument key="Bolt\Controller\Backend\DashboardController::index" type="service" id=".service_locator.skT1rVi"/>
        <argument key="Bolt\Controller\Backend\FileEditController::save" type="service" id=".service_locator.vbm5i4i"/>
        <argument key="Bolt\Controller\Backend\GeneralController::kitchensink" type="service" id=".service_locator.X8jzeZt"/>
        <argument key="Bolt\Controller\Backend\ListingController::overview" type="service" id=".service_locator.skT1rVi"/>
        <argument key="Bolt\Controller\Backend\LogViewerController::index" type="service" id=".service_locator.Wqb3lwI"/>
        <argument key="Bolt\Controller\Backend\ProfileController::save" type="service" id=".service_locator.U_5YyZ3"/>
        <argument key="Bolt\Controller\Backend\UserEditController::save" type="service" id=".service_locator.ofu.DSK"/>
        <argument key="Bolt\Controller\ErrorController::__invoke" type="service" id=".service_locator.9.DS00F"/>
        <argument key="Bolt\Controller\ErrorController::showAction" type="service" id=".service_locator.Ceyeo9Y"/>
        <argument key="Bolt\Controller\Frontend\HomepageController::homepage" type="service" id=".service_locator.VIUKRDp"/>
        <argument key="Bolt\Controller\Frontend\ListingController::listing" type="service" id=".service_locator.VIUKRDp"/>
        <argument key="Bolt\Controller\Frontend\SearchController::search" type="service" id=".service_locator.VIUKRDp"/>
        <argument key="Bolt\Controller\Frontend\TaxonomyController::listing" type="service" id=".service_locator.VIUKRDp"/>
        <argument key="Bolt\Controller\Backend\AuthenticationController:login" type="service" id=".service_locator.g.xob4v"/>
        <argument key="Bolt\Controller\Backend\ClearCacheController:index" type="service" id=".service_locator.q_Wr7A9"/>
        <argument key="Bolt\Controller\Backend\ContentEditController:delete" type="service" id=".service_locator.YuA9Nm."/>
        <argument key="Bolt\Controller\Backend\ContentEditController:duplicate" type="service" id=".service_locator.YuA9Nm."/>
        <argument key="Bolt\Controller\Backend\ContentEditController:edit" type="service" id=".service_locator.YuA9Nm."/>
        <argument key="Bolt\Controller\Backend\ContentEditController:status" type="service" id=".service_locator.YuA9Nm."/>
        <argument key="Bolt\Controller\Backend\ContentLocalizationController:locales" type="service" id=".service_locator.YuA9Nm."/>
        <argument key="Bolt\Controller\Backend\DashboardController:index" type="service" id=".service_locator.skT1rVi"/>
        <argument key="Bolt\Controller\Backend\FileEditController:save" type="service" id=".service_locator.vbm5i4i"/>
        <argument key="Bolt\Controller\Backend\GeneralController:kitchensink" type="service" id=".service_locator.X8jzeZt"/>
        <argument key="Bolt\Controller\Backend\ListingController:overview" type="service" id=".service_locator.skT1rVi"/>
        <argument key="Bolt\Controller\Backend\LogViewerController:index" type="service" id=".service_locator.Wqb3lwI"/>
        <argument key="Bolt\Controller\Backend\ProfileController:save" type="service" id=".service_locator.U_5YyZ3"/>
        <argument key="Bolt\Controller\Backend\UserEditController:save" type="service" id=".service_locator.ofu.DSK"/>
        <argument key="Bolt\Controller\ErrorController:__invoke" type="service" id=".service_locator.9.DS00F"/>
        <argument key="Bolt\Controller\ErrorController" type="service" id=".service_locator.9.DS00F"/>
        <argument key="Bolt\Controller\ErrorController:showAction" type="service" id=".service_locator.Ceyeo9Y"/>
        <argument key="Bolt\Controller\Frontend\HomepageController:homepage" type="service" id=".service_locator.VIUKRDp"/>
        <argument key="Bolt\Controller\Frontend\ListingController:listing" type="service" id=".service_locator.VIUKRDp"/>
        <argument key="Bolt\Controller\Frontend\SearchController:search" type="service" id=".service_locator.VIUKRDp"/>
        <argument key="Bolt\Controller\Frontend\TaxonomyController:listing" type="service" id=".service_locator.VIUKRDp"/>
      </argument>
    </service>
    <service id=".service_locator.Y7gDuDN" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service" id="validator.not_compromised_password"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator.amnwoiW" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="esi" type="service" id="fragment.renderer.esi"/>
        <argument key="hinclude" type="service" id="fragment.renderer.hinclude"/>
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id="debug.argument_resolver.not_tagged_controller.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.PTg4IeN" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Bolt\Form\UserType" type="service" id="Bolt\Form\UserType"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
      </argument>
    </service>
    <service id=".debug.http_client" class="Symfony\Component\HttpClient\TraceableHttpClient">
      <tag name="monolog.logger" channel="http_client"/>
      <tag name="http_client.client"/>
      <argument type="service" id=".debug.http_client.inner"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.debug" class="Symfony\Bridge\Monolog\Logger">
      <argument>debug</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.http_client" class="Symfony\Bridge\Monolog\Logger">
      <argument>http_client</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.db" class="Symfony\Bridge\Monolog\Logger" public="true">
      <argument>db</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Bolt\Log\LogHandler"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.role_hierarchy_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout.handler.csrf_token_clearing" class="Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler" public="false">
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id=".service_locator.V.o0zE7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.bgaRbUU" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\AuthenticationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\AuthenticationController"/>
      <argument>Bolt\Controller\Backend\AuthenticationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\BulkOperationsController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\BulkOperationsController"/>
      <argument>Bolt\Controller\Backend\BulkOperationsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\ClearCacheController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\ClearCacheController"/>
      <argument>Bolt\Controller\Backend\ClearCacheController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\ContentEditController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\ContentEditController"/>
      <argument>Bolt\Controller\Backend\ContentEditController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\ContentLocalizationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\ContentLocalizationController"/>
      <argument>Bolt\Controller\Backend\ContentLocalizationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\DashboardController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\DashboardController"/>
      <argument>Bolt\Controller\Backend\DashboardController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\DatabaseIntegrityController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\DatabaseIntegrityController"/>
      <argument>Bolt\Controller\Backend\DatabaseIntegrityController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\ExtensionsController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\ExtensionsController"/>
      <argument>Bolt\Controller\Backend\ExtensionsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\FileEditController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\FileEditController"/>
      <argument>Bolt\Controller\Backend\FileEditController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\FilemanagerController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\FilemanagerController"/>
      <argument>Bolt\Controller\Backend\FilemanagerController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\FixturesController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\FixturesController"/>
      <argument>Bolt\Controller\Backend\FixturesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\GeneralController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\GeneralController"/>
      <argument>Bolt\Controller\Backend\GeneralController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\ListingController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\ListingController"/>
      <argument>Bolt\Controller\Backend\ListingController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\LogViewerController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\LogViewerController"/>
      <argument>Bolt\Controller\Backend\LogViewerController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\MediaController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\MediaController"/>
      <argument>Bolt\Controller\Backend\MediaController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\MediaEditController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\MediaEditController"/>
      <argument>Bolt\Controller\Backend\MediaEditController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\MenuPageController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\MenuPageController"/>
      <argument>Bolt\Controller\Backend\MenuPageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\OmnisearchController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\OmnisearchController"/>
      <argument>Bolt\Controller\Backend\OmnisearchController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\ProfileController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\ProfileController"/>
      <argument>Bolt\Controller\Backend\ProfileController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\UserController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\UserController"/>
      <argument>Bolt\Controller\Backend\UserController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Backend\UserEditController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Backend\UserEditController"/>
      <argument>Bolt\Controller\Backend\UserEditController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Frontend\DetailController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Frontend\DetailController"/>
      <argument>Bolt\Controller\Frontend\DetailController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Frontend\HomepageController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Frontend\HomepageController"/>
      <argument>Bolt\Controller\Frontend\HomepageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Frontend\ListingController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Frontend\ListingController"/>
      <argument>Bolt\Controller\Frontend\ListingController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Frontend\SearchController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Frontend\SearchController"/>
      <argument>Bolt\Controller\Frontend\SearchController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Frontend\TaxonomyController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Frontend\TaxonomyController"/>
      <argument>Bolt\Controller\Frontend\TaxonomyController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\Frontend\TemplateController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\Frontend\TemplateController"/>
      <argument>Bolt\Controller\Frontend\TemplateController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Controller\TwigAwareController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Controller\TwigAwareController"/>
      <argument>Bolt\Controller\TwigAwareController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.bgaRbUU.Bolt\Extension\ExtensionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bolt\Extension\ExtensionController"/>
      <argument>Bolt\Extension\ExtensionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bgaRbUU" method="withContext"/>
    </service>
    <service id=".service_locator.vdmMuyE" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.vdmMuyE.Bobdenotter\RssExtension\Controller" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Bobdenotter\RssExtension\Controller"/>
      <argument>Bobdenotter\RssExtension\Controller</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.vdmMuyE" method="withContext"/>
    </service>
    <service id=".service_locator.C2Thyvr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.C2Thyvr.sensio_framework_extra.view.listener" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="sensio_framework_extra.view.listener"/>
      <argument>sensio_framework_extra.view.listener</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.C2Thyvr" method="withContext"/>
    </service>
    <service id=".service_locator.XSes1R5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.XSes1R5.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.XSes1R5" method="withContext"/>
    </service>
    <service id=".service_locator.2blTWLX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.2blTWLX.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.2blTWLX" method="withContext"/>
    </service>
    <service id=".service_locator.m90YCjy" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.m90YCjy.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.m90YCjy" method="withContext"/>
    </service>
    <service id=".service_locator.o9nGMXB" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.o9nGMXB.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.o9nGMXB" method="withContext"/>
    </service>
    <service id=".service_locator.vdmMuyE.Translation\Bundle\Controller\SymfonyProfilerController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Translation\Bundle\Controller\SymfonyProfilerController"/>
      <argument>Translation\Bundle\Controller\SymfonyProfilerController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.vdmMuyE" method="withContext"/>
    </service>
    <service id=".service_locator.wnlveDj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.f1ancQ8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.XwZNkPh" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.XjnY8xG" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session"/>
      </argument>
    </service>
    <service id=".service_locator.6zQlgQt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="false">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="Bolt\Menu\StopwatchBackendMenuBuilder.inner" class="Bolt\Menu\BackendMenuBuilder" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument type="service" id="Bolt\Repository\ContentRepository"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Bolt\Twig\ContentExtension"/>
    </service>
    <service id="Bolt\Menu\StopwatchFrontendMenuBuilder.inner" class="Bolt\Menu\FrontendMenuBuilder" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Bolt\Configuration\Config"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="Bolt\Repository\ContentRepository"/>
      <argument type="service" id="Bolt\Twig\ContentExtension"/>
    </service>
    <service id="api_platform.serializer.context_builder.filter.inner" class="ApiPlatform\Core\Serializer\SerializerContextBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.identifiers_extractor.cached.inner" class="ApiPlatform\Core\Api\IdentifiersExtractor" public="false">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.hydra.normalizer.partial_collection_view.inner" class="ApiPlatform\Core\Hydra\Serializer\CollectionNormalizer" public="false">
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.iri_converter"/>
    </service>
    <service id="api_platform.hydra.json_schema.schema_factory.inner" class="ApiPlatform\Core\JsonSchema\SchemaFactory" public="false">
      <argument type="service" id="api_platform.json_schema.type_factory"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="debug.api_platform.collection_data_provider.inner" class="ApiPlatform\Core\DataProvider\ChainCollectionDataProvider" public="false">
      <argument type="tagged_iterator" tag="api_platform.collection_data_provider"/>
    </service>
    <service id="debug.api_platform.item_data_provider.inner" class="ApiPlatform\Core\DataProvider\ChainItemDataProvider" public="false">
      <argument type="tagged_iterator" tag="api_platform.item_data_provider"/>
    </service>
    <service id="debug.api_platform.subresource_data_provider.inner" class="ApiPlatform\Core\DataProvider\ChainSubresourceDataProvider" public="false">
      <argument type="tagged_iterator" tag="api_platform.subresource_data_provider"/>
    </service>
    <service id="debug.api_platform.data_persister.inner" class="ApiPlatform\Core\DataPersister\ChainDataPersister" public="false">
      <argument type="tagged_iterator" tag="api_platform.data_persister"/>
    </service>
    <service id="var_dumper.contextualized_cli_dumper.inner" class="Symfony\Component\VarDumper\Dumper\CliDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher" public="false"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
        <argument type="service" id="debug.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.role_hierarchy_voter"/>
        <argument type="service" id="debug.security.voter.security.access.expression_voter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver" public="false">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <argument type="service" id=".service_locator.R96M75I"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false"/>
    <service id="debug.argument_resolver.not_tagged_controller.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver" public="false">
      <argument type="service" id=".service_locator.R96M75I"/>
    </service>
    <service id=".debug.http_client.inner" class="Symfony\Contracts\HttpClient\HttpClientInterface" public="false">
      <argument type="collection"/>
      <argument>6</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.http_client" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="api_platform.swagger.normalizer.api_gateway.inner" class="ApiPlatform\Core\Swagger\Serializer\DocumentationNormalizer" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      <argument type="service" id="api_platform.json_schema.type_factory"/>
      <argument type="service" id="api_platform.operation_path_resolver.router"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>oauth2</argument>
      <argument>application</argument>
      <argument>/oauth/v2/token</argument>
      <argument>/oauth/v2/auth</argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
      <argument>true</argument>
      <argument>page</argument>
      <argument>true</argument>
      <argument>pageSize</argument>
      <argument>%api_platform.formats%</argument>
      <argument>false</argument>
      <argument>pagination</argument>
      <argument type="collection"/>
      <argument>%api_platform.swagger.versions%</argument>
    </service>
    <service id="api_platform.route_name_resolver.cached.inner" class="ApiPlatform\Core\Bridge\Symfony\Routing\RouteNameResolver" public="false">
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.subresource_operation_factory.cached.inner" class="ApiPlatform\Core\Operation\Factory\SubresourceOperationFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.path_segment_name_generator.underscore"/>
    </service>
    <service id=".errored..service_locator.YuA9Nm..Bolt\Entity\Content" class="Bolt\Entity\Content"/>
    <service id=".errored..service_locator.Ceyeo9Y.Throwable" class="Throwable"/>
    <service id=".errored..service_locator.9.DS00F.Throwable" class="Throwable"/>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id=".service_locator.GJtTcvF"/>
      <argument type="collection">
        <argument key="security:check">SensioLabs\Security\Command\SecurityCheckerCommand</argument>
        <argument key="bolt:add-user">Bolt\Command\AddUserCommand</argument>
        <argument key="cache:thumbs">Bolt\Command\ClearThumbnailCacheCommand</argument>
        <argument key="bolt:copy-assets">Bolt\Command\CopyAssetsCommand</argument>
        <argument key="bolt:copy-themes">Bolt\Command\CopyThemesCommand</argument>
        <argument key="bolt:delete-user">Bolt\Command\DeleteUserCommand</argument>
        <argument key="extensions:list">Bolt\Command\ExtensionsListCommand</argument>
        <argument key="extensions:services">Bolt\Command\ExtensionsServicesCommand</argument>
        <argument key="extensions:show">Bolt\Command\ExtensionsShowCommand</argument>
        <argument key="bolt:info">Bolt\Command\InfoCommand</argument>
        <argument key="bolt:list-users">Bolt\Command\ListUsersCommand</argument>
        <argument key="bolt:reset-secret">Bolt\Command\ResetSecretCommand</argument>
        <argument key="bolt:setup">Bolt\Command\SetupCommand</argument>
        <argument key="api:graphql:export">api_platform.graphql.command.export_command</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="doctrine:fixtures:load">doctrine.fixtures_load_command</argument>
        <argument key="server:dump">var_dumper.command.server_dump</argument>
        <argument key="server:log">monolog.command.server_log</argument>
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="server:run">web_server.command.server_run</argument>
        <argument key="server:start">web_server.command.server_start</argument>
        <argument key="server:stop">web_server.command.server_stop</argument>
        <argument key="server:status">web_server.command.server_status</argument>
        <argument key="translation:check-missing">Translation\Bundle\Command\CheckMissingCommand</argument>
        <argument key="translation:delete-obsolete">Translation\Bundle\Command\DeleteObsoleteCommand</argument>
        <argument key="translation:download">Translation\Bundle\Command\DownloadCommand</argument>
        <argument key="translation:extract">Translation\Bundle\Command\ExtractCommand</argument>
        <argument key="translation:status">Translation\Bundle\Command\StatusCommand</argument>
        <argument key="translation:sync">Translation\Bundle\Command\SyncCommand</argument>
        <argument key="make:auth">maker.auto_command.make_auth</argument>
        <argument key="make:command">maker.auto_command.make_command</argument>
        <argument key="make:controller">maker.auto_command.make_controller</argument>
        <argument key="make:crud">maker.auto_command.make_crud</argument>
        <argument key="make:entity">maker.auto_command.make_entity</argument>
        <argument key="make:fixtures">maker.auto_command.make_fixtures</argument>
        <argument key="make:form">maker.auto_command.make_form</argument>
        <argument key="make:functional-test">maker.auto_command.make_functional_test</argument>
        <argument key="make:message">maker.auto_command.make_message</argument>
        <argument key="make:messenger-middleware">maker.auto_command.make_messenger_middleware</argument>
        <argument key="make:registration-form">maker.auto_command.make_registration_form</argument>
        <argument key="make:reset-password">maker.auto_command.make_reset_password</argument>
        <argument key="make:serializer:encoder">maker.auto_command.make_serializer_encoder</argument>
        <argument key="make:serializer:normalizer">maker.auto_command.make_serializer_normalizer</argument>
        <argument key="make:subscriber">maker.auto_command.make_subscriber</argument>
        <argument key="make:twig-extension">maker.auto_command.make_twig_extension</argument>
        <argument key="make:unit-test">maker.auto_command.make_unit_test</argument>
        <argument key="make:validator">maker.auto_command.make_validator</argument>
        <argument key="make:voter">maker.auto_command.make_voter</argument>
        <argument key="make:user">maker.auto_command.make_user</argument>
        <argument key="make:migration">maker.auto_command.make_migration</argument>
      </argument>
    </service>
    <service id=".service_locator.GJtTcvF" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Bolt\Command\AddUserCommand" type="service" id="Bolt\Command\AddUserCommand"/>
        <argument key="Bolt\Command\ClearThumbnailCacheCommand" type="service" id="Bolt\Command\ClearThumbnailCacheCommand"/>
        <argument key="Bolt\Command\CopyAssetsCommand" type="service" id="Bolt\Command\CopyAssetsCommand"/>
        <argument key="Bolt\Command\CopyThemesCommand" type="service" id="Bolt\Command\CopyThemesCommand"/>
        <argument key="Bolt\Command\DeleteUserCommand" type="service" id="Bolt\Command\DeleteUserCommand"/>
        <argument key="Bolt\Command\ExtensionsListCommand" type="service" id="Bolt\Command\ExtensionsListCommand"/>
        <argument key="Bolt\Command\ExtensionsServicesCommand" type="service" id="Bolt\Command\ExtensionsServicesCommand"/>
        <argument key="Bolt\Command\ExtensionsShowCommand" type="service" id="Bolt\Command\ExtensionsShowCommand"/>
        <argument key="Bolt\Command\InfoCommand" type="service" id="Bolt\Command\InfoCommand"/>
        <argument key="Bolt\Command\ListUsersCommand" type="service" id="Bolt\Command\ListUsersCommand"/>
        <argument key="Bolt\Command\ResetSecretCommand" type="service" id="Bolt\Command\ResetSecretCommand"/>
        <argument key="Bolt\Command\SetupCommand" type="service" id="Bolt\Command\SetupCommand"/>
        <argument key="SensioLabs\Security\Command\SecurityCheckerCommand" type="service" id="SensioLabs\Security\Command\SecurityCheckerCommand"/>
        <argument key="Translation\Bundle\Command\CheckMissingCommand" type="service" id="Translation\Bundle\Command\CheckMissingCommand"/>
        <argument key="Translation\Bundle\Command\DeleteObsoleteCommand" type="service" id="Translation\Bundle\Command\DeleteObsoleteCommand"/>
        <argument key="Translation\Bundle\Command\DownloadCommand" type="service" id="Translation\Bundle\Command\DownloadCommand"/>
        <argument key="Translation\Bundle\Command\ExtractCommand" type="service" id="Translation\Bundle\Command\ExtractCommand"/>
        <argument key="Translation\Bundle\Command\StatusCommand" type="service" id="Translation\Bundle\Command\StatusCommand"/>
        <argument key="Translation\Bundle\Command\SyncCommand" type="service" id="Translation\Bundle\Command\SyncCommand"/>
        <argument key="api_platform.graphql.command.export_command" type="service" id="api_platform.graphql.command.export_command"/>
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_list" type="service" id="console.command.cache_pool_list"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.container_lint" type="service" id="console.command.container_lint"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service" id="console.command.secrets_decrypt_to_local"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service" id="console.command.secrets_encrypt_from_local"/>
        <argument key="console.command.secrets_generate_key" type="service" id="console.command.secrets_generate_key"/>
        <argument key="console.command.secrets_list" type="service" id="console.command.secrets_list"/>
        <argument key="console.command.secrets_remove" type="service" id="console.command.secrets_remove"/>
        <argument key="console.command.secrets_set" type="service" id="console.command.secrets_set"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.fixtures_load_command" type="service" id="doctrine.fixtures_load_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="maker.auto_command.make_auth" type="service" id="maker.auto_command.make_auth"/>
        <argument key="maker.auto_command.make_command" type="service" id="maker.auto_command.make_command"/>
        <argument key="maker.auto_command.make_controller" type="service" id="maker.auto_command.make_controller"/>
        <argument key="maker.auto_command.make_crud" type="service" id="maker.auto_command.make_crud"/>
        <argument key="maker.auto_command.make_entity" type="service" id="maker.auto_command.make_entity"/>
        <argument key="maker.auto_command.make_fixtures" type="service" id="maker.auto_command.make_fixtures"/>
        <argument key="maker.auto_command.make_form" type="service" id="maker.auto_command.make_form"/>
        <argument key="maker.auto_command.make_functional_test" type="service" id="maker.auto_command.make_functional_test"/>
        <argument key="maker.auto_command.make_message" type="service" id="maker.auto_command.make_message"/>
        <argument key="maker.auto_command.make_messenger_middleware" type="service" id="maker.auto_command.make_messenger_middleware"/>
        <argument key="maker.auto_command.make_migration" type="service" id="maker.auto_command.make_migration"/>
        <argument key="maker.auto_command.make_registration_form" type="service" id="maker.auto_command.make_registration_form"/>
        <argument key="maker.auto_command.make_reset_password" type="service" id="maker.auto_command.make_reset_password"/>
        <argument key="maker.auto_command.make_serializer_encoder" type="service" id="maker.auto_command.make_serializer_encoder"/>
        <argument key="maker.auto_command.make_serializer_normalizer" type="service" id="maker.auto_command.make_serializer_normalizer"/>
        <argument key="maker.auto_command.make_subscriber" type="service" id="maker.auto_command.make_subscriber"/>
        <argument key="maker.auto_command.make_twig_extension" type="service" id="maker.auto_command.make_twig_extension"/>
        <argument key="maker.auto_command.make_unit_test" type="service" id="maker.auto_command.make_unit_test"/>
        <argument key="maker.auto_command.make_user" type="service" id="maker.auto_command.make_user"/>
        <argument key="maker.auto_command.make_validator" type="service" id="maker.auto_command.make_validator"/>
        <argument key="maker.auto_command.make_voter" type="service" id="maker.auto_command.make_voter"/>
        <argument key="monolog.command.server_log" type="service" id="monolog.command.server_log"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
        <argument key="var_dumper.command.server_dump" type="service" id="var_dumper.command.server_dump"/>
        <argument key="web_server.command.server_run" type="service" id="web_server.command.server_run"/>
        <argument key="web_server.command.server_start" type="service" id="web_server.command.server_start"/>
        <argument key="web_server.command.server_status" type="service" id="web_server.command.server_status"/>
        <argument key="web_server.command.server_stop" type="service" id="web_server.command.server_stop"/>
      </argument>
    </service>
    <service id="api_platform.cache.route_name_resolver.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>ZAKabcwYAH</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.identifiers_extractor.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>TtA2qxgXJD</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.subresource_operation_factory.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>ImthWRtBOd</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.metadata.resource.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>2+9p+UI0pW</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.metadata.property.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>2odSkA2hAm</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.doctrine.orm.default.metadata.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.doctrine.orm.default.result.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.doctrine.orm.default.query.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false">
      <argument>gHoBinWfiE</argument>
      <argument>0</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>Ka8B8d9EJ7</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>HyEVtfrl1y</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>mQePFg5Ay5</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>cUZmH53ko7</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>itMRIlahge</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.security_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>A8eejMm61U</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.webpack_encore.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>0NlutZUGNA</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/martinbetz/Sites/martin-bolt/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id=".service_locator.DJ2HLGf" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="BabDev\PagerfantaBundle\Twig\PagerfantaRuntime" type="service" id="pagerfanta.twig_runtime"/>
        <argument key="Bolt\BoltForms\FormRuntime" type="service" id="Bolt\BoltForms\FormRuntime"/>
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\ErrorHandler\ErrorRenderer\ErrorRendererInterface" alias="error_handler.error_renderer.html" public="false"/>
    <service id="Bolt\Menu\BackendMenuBuilderInterface" alias="Bolt\Menu\StopwatchBackendMenuBuilder"/>
    <service id="Bolt\Menu\FrontendMenuBuilderInterface" alias="Bolt\Menu\StopwatchFrontendMenuBuilder"/>
    <service id="Bolt\Storage\QueryInterface" alias="Bolt\Storage\SelectQuery" public="false"/>
    <service id="Bolt\Storage\QueryScopeInterface" alias="Bolt\Storage\FrontendQueryScope" public="false"/>
    <service id="Bolt\Widget\ResponseAwareInterface" alias="Bolt\Widget\BoltHeaderWidget" public="false"/>
    <service id="api_platform.serializer" alias="serializer"/>
    <service id="api_platform.property_accessor" alias="property_accessor" public="false"/>
    <service id="api_platform.property_info" alias="property_info" public="false"/>
    <service id="ApiPlatform\Core\Api\ResourceClassResolverInterface" alias="api_platform.resource_class_resolver"/>
    <service id="ApiPlatform\Core\Api\UrlGeneratorInterface" alias="api_platform.router"/>
    <service id="ApiPlatform\Core\Api\IriConverterInterface" alias="api_platform.iri_converter"/>
    <service id="ApiPlatform\Core\Api\OperationAwareFormatsProviderInterface" alias="api_platform.formats_provider">
      <deprecated>The "%alias_id%" alias is deprecated since API Platform 2.5.</deprecated>
    </service>
    <service id="ApiPlatform\Core\Serializer\SerializerContextBuilderInterface" alias="api_platform.serializer.context_builder.filter"/>
    <service id="ApiPlatform\Core\Serializer\Filter\PropertyFilter" alias="api_platform.serializer.property_filter"/>
    <service id="ApiPlatform\Core\Serializer\Filter\GroupFilter" alias="api_platform.serializer.group_filter"/>
    <service id="api_platform.operation_path_resolver" alias="api_platform.operation_path_resolver.router" public="false"/>
    <service id="api_platform.action.get_collection" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.post_collection" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.get_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.patch_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.put_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.delete_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.get_subresource" alias="api_platform.action.placeholder" public="true"/>
    <service id="ApiPlatform\Core\Action\NotFoundAction" alias="api_platform.action.not_found" public="true"/>
    <service id="ApiPlatform\Core\Api\IdentifiersExtractorInterface" alias="api_platform.identifiers_extractor.cached"/>
    <service id="ApiPlatform\Core\DataPersister\DataPersisterInterface" alias="debug.api_platform.data_persister"/>
    <service id="ApiPlatform\Core\DataProvider\ItemDataProviderInterface" alias="debug.api_platform.item_data_provider"/>
    <service id="ApiPlatform\Core\DataProvider\CollectionDataProviderInterface" alias="debug.api_platform.collection_data_provider"/>
    <service id="ApiPlatform\Core\DataProvider\SubresourceDataProviderInterface" alias="debug.api_platform.subresource_data_provider"/>
    <service id="ApiPlatform\Core\DataProvider\Pagination" alias="api_platform.pagination"/>
    <service id="api_platform.operation_path_resolver.default" alias="api_platform.operation_path_resolver.underscore"/>
    <service id="api_platform.path_segment_name_generator" alias="api_platform.path_segment_name_generator.underscore"/>
    <service id="ApiPlatform\Core\Metadata\Resource\Factory\ResourceNameCollectionFactoryInterface" alias="api_platform.metadata.resource.name_collection_factory.cached"/>
    <service id="ApiPlatform\Core\Metadata\Resource\Factory\ResourceMetadataFactoryInterface" alias="api_platform.metadata.resource.metadata_factory.cached"/>
    <service id="api_platform.metadata.property.name_collection_factory" alias="api_platform.metadata.property.name_collection_factory.cached"/>
    <service id="ApiPlatform\Core\Metadata\Property\Factory\PropertyNameCollectionFactoryInterface" alias="api_platform.metadata.property.name_collection_factory.cached"/>
    <service id="ApiPlatform\Core\Metadata\Property\Factory\PropertyMetadataFactoryInterface" alias="api_platform.metadata.property.metadata_factory.cached"/>
    <service id="api_platform.metadata.resource.name_collection_factory" alias="api_platform.metadata.resource.name_collection_factory.cached"/>
    <service id="api_platform.metadata.resource.metadata_factory" alias="api_platform.metadata.resource.metadata_factory.cached"/>
    <service id="api_platform.metadata.property.metadata_factory" alias="api_platform.metadata.property.metadata_factory.cached"/>
    <service id="ApiPlatform\Core\JsonSchema\TypeFactoryInterface" alias="api_platform.json_schema.type_factory" public="false"/>
    <service id="ApiPlatform\Core\JsonSchema\SchemaFactoryInterface" alias="api_platform.hydra.json_schema.schema_factory" public="false"/>
    <service id="ApiPlatform\Core\GraphQl\Serializer\SerializerContextBuilderInterface" alias="api_platform.graphql.serializer.context_builder"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" alias="api_platform.doctrine.orm.search_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" alias="api_platform.doctrine.orm.order_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\RangeFilter" alias="api_platform.doctrine.orm.range_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" alias="api_platform.doctrine.orm.date_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\BooleanFilter" alias="api_platform.doctrine.orm.boolean_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\NumericFilter" alias="api_platform.doctrine.orm.numeric_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\ExistsFilter" alias="api_platform.doctrine.orm.exists_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\EagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.eager_loading"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterExtension" alias="api_platform.doctrine.orm.query_extension.filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterEagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.filter_eager_loading"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\PaginationExtension" alias="api_platform.doctrine.orm.query_extension.pagination"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\OrderExtension" alias="api_platform.doctrine.orm.query_extension.order"/>
    <service id="ApiPlatform\Core\Validator\ValidatorInterface" alias="api_platform.validator"/>
    <service id="api_platform.security.expression_language" alias="security.expression_language"/>
    <service id="ApiPlatform\Core\Security\ResourceAccessCheckerInterface" alias="api_platform.security.resource_access_checker"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" public="false"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" public="false"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" public="false"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Knp\Menu\Provider\MenuProviderInterface" alias="knp_menu.menu_provider.chain" public="false"/>
    <service id="Knp\Menu\FactoryInterface" alias="knp_menu.factory" public="false"/>
    <service id="Knp\Menu\Matcher\MatcherInterface" alias="knp_menu.matcher" public="false"/>
    <service id="Knp\Menu\Util\MenuManipulator" alias="knp_menu.manipulator" public="false"/>
    <service id="Knp\DoctrineBehaviors\Contract\Provider\LocaleProviderInterface" alias="Knp\DoctrineBehaviors\Provider\LocaleProvider" public="false"/>
    <service id="Knp\DoctrineBehaviors\Contract\Provider\UserProviderInterface" alias="Knp\DoctrineBehaviors\Provider\UserProvider" public="false"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default" public="false"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default" public="false"/>
    <service id="controller_name_converter" alias=".legacy_controller_name_converter" public="false">
      <deprecated>The "%alias_id%" service is deprecated since Symfony 4.3.</deprecated>
    </service>
    <service id="resolve_controller_name_subscriber" alias=".legacy_resolve_controller_name_subscriber" public="false">
      <deprecated>The "%alias_id%" service is deprecated since Symfony 4.3.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container" public="false"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Psr\SimpleCache\CacheInterface" alias="cache.app.simple" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable" public="false"/>
    <service id="Symfony\Component\Translation\TranslatorInterface" alias="translator.data_collector" public="false"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.data_collector" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="cache.default_pdo_provider" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="Symfony\Contracts\HttpClient\HttpClientInterface" alias=".debug.http_client"/>
    <service id="mailer" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\MailerInterface" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\Transport\TransportInterface" alias="mailer.default_transport"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator" public="false"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader" public="false"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor" public="false"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer" public="false"/>
    <service id="translator" alias="translator.data_collector" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer" public="false"/>
    <service id="serializer.property_accessor" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory" public="false"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="monolog.handler.db" alias="Bolt\Log\LogHandler"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic" public="false"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserProviderInterface" alias="security.user.provider.concrete.database_users"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.main" alias="Bolt\Security\UserChecker" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="Symfony\WebpackEncoreBundle\Asset\EntrypointLookupCollectionInterface" alias="webpack_encore.entrypoint_lookup_collection" public="false"/>
    <service id="Symfony\WebpackEncoreBundle\Asset\EntrypointLookupInterface" alias="webpack_encore.entrypoint_lookup[_default]"/>
    <service id="php_translation.extractor.php" alias="Translation\Extractor\FileExtractor\PHPFileExtractor">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.twig" alias="Translation\Extractor\FileExtractor\TwigFileExtractor">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.ContainerAwareTrans" alias="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.ContainerAwareTransChoice" alias="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FlashMessage" alias="Translation\Extractor\Visitor\Php\Symfony\FlashMessage">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypeChoices" alias="Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypeEmptyValue" alias="Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypeHelp" alias="Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypeInvalidMessage" alias="Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypeLabelExplicit" alias="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypeLabelImplicit" alias="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypePlaceholder" alias="Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.ValidationAnnotation" alias="Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.SourceLocationContainerVisitor" alias="Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.twig.factory.twig" alias="Translation\Extractor\Visitor\Twig\TwigVisitor">
      <deprecated>The "%service_id%" service is deprecated. You should use "%alias_id%" instead, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.storage" alias="php_translation.storage.bolt" public="true"/>
    <service id="Translation\Bundle\Service\StorageService" alias="php_translation.storage.bolt" public="true"/>
    <service id="php_translation.storage.default" alias="php_translation.storage.bolt" public="true"/>
    <service id="BabDev\PagerfantaBundle\RouteGenerator\RouteGeneratorFactoryInterface" alias="pagerfanta.route_generator_factory"/>
    <service id="Pagerfanta\View\ViewFactory" alias="pagerfanta.view_factory"/>
    <service id="Pagerfanta\View\ViewFactoryInterface" alias="pagerfanta.view_factory"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.CmORmuK" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem" public="false"/>
    <service id="api_platform.name_converter" alias="serializer.name_converter.metadata_aware"/>
    <service id="knp_menu.menu_provider" alias="knp_menu.menu_provider.chain"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.R96M75I"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id="Psr\Log\LoggerInterface $debugLogger" alias="monolog.logger.debug"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id="Psr\Log\LoggerInterface $httpClientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $translationLogger" alias="monolog.logger.translation"/>
    <service id="Psr\Log\LoggerInterface $profilerLogger" alias="monolog.logger.profiler"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $dbLogger" alias="monolog.logger.db"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id=".service_locator.c3XszGA" alias="api_platform.serializer_locator" public="false"/>
    <service id=".service_locator.QhXoW3J" alias="api_platform.filter_locator" public="false"/>
    <service id=".service_locator.gIoolTo" alias="api_platform.graphql.mutation_resolver_locator" public="false"/>
    <service id=".service_locator.RTnwgJx" alias="api_platform.graphql.type_locator" public="false"/>
    <service id=".service_locator.Rjy7R9j" alias="api_platform.graphql.fields_builder_locator" public="false"/>
    <service id=".service_locator.ISjGRTp" alias=".1_ServiceLocator~B2XWUV2" public="false"/>
    <service id=".service_locator.tHpW6v3" alias=".service_locator.Y7gDuDN" public="false"/>
    <service id=".service_locator.zaa7Xj0" alias=".service_locator.bgaRbUU" public="false"/>
    <service id="validator" alias="debug.validator" public="true"/>
    <service id="api_platform.metadata.property.metadata_factory.property_info.inner" alias="api_platform.metadata.property.metadata_factory.xml" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.inherited.inner" alias="api_platform.metadata.property.metadata_factory.property_info" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.annotation.inner" alias="api_platform.metadata.resource.metadata_factory.xml" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.yaml.inner" alias="api_platform.metadata.resource.metadata_factory.annotation" public="false"/>
    <service id="api_platform.doctrine.orm.metadata.property.metadata_factory.inner" alias="api_platform.metadata.property.metadata_factory.inherited" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.input_output.inner" alias="api_platform.metadata.resource.metadata_factory.yaml" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.serializer.inner" alias="api_platform.doctrine.orm.metadata.property.metadata_factory" public="false"/>
    <service id="api_platform.metadata.subresource.metadata_factory.annotation.inner" alias="api_platform.metadata.property.metadata_factory.serializer" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.php_doc.inner" alias="api_platform.metadata.resource.metadata_factory.input_output" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.short_name.inner" alias="api_platform.metadata.resource.metadata_factory.php_doc" public="false"/>
    <service id="api_platform.metadata.resource.filter_metadata_factory.annotation.inner" alias="api_platform.metadata.resource.metadata_factory.short_name" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.annotation.inner" alias="api_platform.metadata.subresource.metadata_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.yaml.inner" alias="api_platform.metadata.property.metadata_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.validator.inner" alias="api_platform.metadata.property.metadata_factory.yaml" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.operation.inner" alias="api_platform.metadata.resource.filter_metadata_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.inherited.inner" alias="api_platform.metadata.property.name_collection_factory.property_info" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.formats.inner" alias="api_platform.metadata.resource.metadata_factory.operation" public="false"/>
    <service id="Bolt\Menu\BackendMenuBuilder" alias="Bolt\Menu\StopwatchBackendMenuBuilder" public="false"/>
    <service id="Bolt\Menu\FrontendMenuBuilder" alias="Bolt\Menu\StopwatchFrontendMenuBuilder" public="false"/>
    <service id="api_platform.serializer.context_builder" alias="api_platform.serializer.context_builder.filter" public="false"/>
    <service id="api_platform.identifiers_extractor" alias="api_platform.identifiers_extractor.cached" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.xml.inner" alias="api_platform.metadata.property.name_collection_factory.inherited" public="false"/>
    <service id="api_platform.metadata.resource.name_collection_factory.annotation.inner" alias="api_platform.metadata.resource.name_collection_factory.xml" public="false"/>
    <service id="api_platform.metadata.resource.name_collection_factory.yaml.inner" alias="api_platform.metadata.resource.name_collection_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.yaml.inner" alias="api_platform.metadata.property.name_collection_factory.xml" public="false"/>
    <service id="api_platform.hydra.normalizer.collection" alias="api_platform.hydra.normalizer.collection_filters" public="false"/>
    <service id="api_platform.hydra.normalizer.collection_filters.inner" alias="api_platform.hydra.normalizer.partial_collection_view" public="false"/>
    <service id="api_platform.json_schema.schema_factory" alias="api_platform.hydra.json_schema.schema_factory" public="false"/>
    <service id="api_platform.collection_data_provider" alias="debug.api_platform.collection_data_provider"/>
    <service id="api_platform.item_data_provider" alias="debug.api_platform.item_data_provider"/>
    <service id="api_platform.subresource_data_provider" alias="debug.api_platform.subresource_data_provider"/>
    <service id="api_platform.data_persister" alias="debug.api_platform.data_persister" public="false"/>
    <service id="var_dumper.cli_dumper" alias="var_dumper.contextualized_cli_dumper" public="false"/>
    <service id="translator.data_collector.inner" alias="translator.default" public="false"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html" public="false"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute" public="false"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request" public="false"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session" public="false"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver" public="false"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service" public="false"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default" public="false"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic" public="false"/>
    <service id="argument_resolver.not_tagged_controller" alias="debug.argument_resolver.not_tagged_controller" public="false"/>
    <service id="http_client" alias=".debug.http_client"/>
    <service id="api_platform.swagger.normalizer.documentation" alias="api_platform.swagger.normalizer.api_gateway" public="false"/>
    <service id="api_platform.route_name_resolver" alias="api_platform.route_name_resolver.cached" public="false"/>
    <service id="api_platform.subresource_operation_factory" alias="api_platform.subresource_operation_factory.cached" public="false"/>
    <service id="api_platform.metadata.resource.name_collection_factory.cached.inner" alias="api_platform.metadata.resource.name_collection_factory.yaml" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.cached.inner" alias="api_platform.metadata.resource.metadata_factory.formats" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.cached.inner" alias="api_platform.metadata.property.name_collection_factory.yaml" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.cached.inner" alias="api_platform.metadata.property.metadata_factory.validator" public="false"/>
    <service id="console.command.public_alias.api_platform.json_schema.json_schema_generate_command" alias="api_platform.json_schema.json_schema_generate_command" public="true"/>
    <service id="console.command.public_alias.api_platform.swagger.command.swagger_command" alias="api_platform.swagger.command.swagger_command" public="true"/>
  </services>
</container>
